(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.SwaggerApi = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var _=require("lodash-compat"),pathLoader=require("path-loader"),YAML=require("js-yaml");"undefined"==typeof Promise&&require("native-promise-only");var supportedVersions={"2.0":require("./lib/versions/2.0/")};module.exports.create=function(e,i){var n=Promise.resolve();return n=n.then(function(){return new Promise(function(n){if(_.isUndefined(e))throw new TypeError("options is required");if(!_.isPlainObject(e))throw new TypeError("options must be an object");if(_.isUndefined(e.definition))throw new TypeError("options.definition is required");if(!_.isPlainObject(e.definition)&&!_.isString(e.definition))throw new TypeError("options.definition must be either an object or a string");if(!_.isUndefined(e.loaderOptions)&&!_.isPlainObject(e.loaderOptions))throw new TypeError("options.loaderOptions must be an object");if(!_.isUndefined(e.customValidators)&&!_.isArray(e.customValidators))throw new TypeError("options.customValidators must be an array");if(!_.isUndefined(i)&&!_.isFunction(i))throw new TypeError("callback must be a function");_.forEach(e.customValidators,function(e,i){if(!_.isFunction(e))throw new TypeError("options.customValidators at index "+i+" must be a function")}),n()})}),e=_.cloneDeep(e),n=n.then(function(){return _.isString(e.definition)?pathLoader.load(e.definition,e.loaderOptions||{}).then(YAML.safeLoad):e.definition}),n=n.then(function(i){var n=_.find(supportedVersions,function(e){return e.canProcess(i)});if(_.isUndefined(n))throw new TypeError("Unable to identify the Swagger version or the Swagger version is unsupported");return n.createSwaggerApi(i,e)}),!_.isUndefined(i)&&_.isFunction(i)&&(n=n.then(function(e){i(void 0,e)},function(e){i(e)})),n};
},{"./lib/versions/2.0/":8,"js-yaml":21,"lodash-compat":138,"native-promise-only":207,"path-loader":208}],2:[function(require,module,exports){
"use strict";function removeValidationErrorParams(r){delete r.params,r.inner&&_.each(r.inner,function(r){removeValidationErrorParams(r)})}var _=require("lodash-compat"),mocker=require("json-schema-faker"),ZSchema=require("z-schema"),draft04Json=require("./json-schema-draft-04.json"),draft04Url="http://json-schema.org/draft-04/schema";module.exports.createJSONSchemaMocker=function(r){return _.isUndefined(r)&&(r={}),_.each(r.formatGenerators,function(r,e){mocker.formats(e,r)}),mocker},module.exports.createJSONValidator=function(r){var e=new ZSchema({reportPathAsArray:!0});return _.isUndefined(r)&&(r={}),e.setRemoteReference(draft04Url,draft04Json),_.each(r.formatValidators,function(r,e){ZSchema.registerFormat(e,r)}),e},module.exports.validateAgainstSchema=function(r,e,a){e=_.cloneDeep(e);var o={errors:[],warnings:[]};return r.validate(a,e)||(o.errors=_.map(r.getLastErrors(),function(r){return removeValidationErrorParams(r),r})),o};

},{"./json-schema-draft-04.json":3,"json-schema-faker":58,"lodash-compat":138,"z-schema":224}],3:[function(require,module,exports){
module.exports={
    "id": "http://json-schema.org/draft-04/schema#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Core schema meta-schema",
    "definitions": {
        "schemaArray": {
            "type": "array",
            "minItems": 1,
            "items": { "$ref": "#" }
        },
        "positiveInteger": {
            "type": "integer",
            "minimum": 0
        },
        "positiveIntegerDefault0": {
            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]
        },
        "simpleTypes": {
            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]
        },
        "stringArray": {
            "type": "array",
            "items": { "type": "string" },
            "minItems": 1,
            "uniqueItems": true
        }
    },
    "type": "object",
    "properties": {
        "id": {
            "type": "string",
            "format": "uri"
        },
        "$schema": {
            "type": "string",
            "format": "uri"
        },
        "title": {
            "type": "string"
        },
        "description": {
            "type": "string"
        },
        "default": {},
        "multipleOf": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true
        },
        "maximum": {
            "type": "number"
        },
        "exclusiveMaximum": {
            "type": "boolean",
            "default": false
        },
        "minimum": {
            "type": "number"
        },
        "exclusiveMinimum": {
            "type": "boolean",
            "default": false
        },
        "maxLength": { "$ref": "#/definitions/positiveInteger" },
        "minLength": { "$ref": "#/definitions/positiveIntegerDefault0" },
        "pattern": {
            "type": "string",
            "format": "regex"
        },
        "additionalItems": {
            "anyOf": [
                { "type": "boolean" },
                { "$ref": "#" }
            ],
            "default": {}
        },
        "items": {
            "anyOf": [
                { "$ref": "#" },
                { "$ref": "#/definitions/schemaArray" }
            ],
            "default": {}
        },
        "maxItems": { "$ref": "#/definitions/positiveInteger" },
        "minItems": { "$ref": "#/definitions/positiveIntegerDefault0" },
        "uniqueItems": {
            "type": "boolean",
            "default": false
        },
        "maxProperties": { "$ref": "#/definitions/positiveInteger" },
        "minProperties": { "$ref": "#/definitions/positiveIntegerDefault0" },
        "required": { "$ref": "#/definitions/stringArray" },
        "additionalProperties": {
            "anyOf": [
                { "type": "boolean" },
                { "$ref": "#" }
            ],
            "default": {}
        },
        "definitions": {
            "type": "object",
            "additionalProperties": { "$ref": "#" },
            "default": {}
        },
        "properties": {
            "type": "object",
            "additionalProperties": { "$ref": "#" },
            "default": {}
        },
        "patternProperties": {
            "type": "object",
            "additionalProperties": { "$ref": "#" },
            "default": {}
        },
        "dependencies": {
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    { "$ref": "#" },
                    { "$ref": "#/definitions/stringArray" }
                ]
            }
        },
        "enum": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true
        },
        "type": {
            "anyOf": [
                { "$ref": "#/definitions/simpleTypes" },
                {
                    "type": "array",
                    "items": { "$ref": "#/definitions/simpleTypes" },
                    "minItems": 1,
                    "uniqueItems": true
                }
            ]
        },
        "allOf": { "$ref": "#/definitions/schemaArray" },
        "anyOf": { "$ref": "#/definitions/schemaArray" },
        "oneOf": { "$ref": "#/definitions/schemaArray" },
        "not": { "$ref": "#" }
    },
    "dependencies": {
        "exclusiveMaximum": [ "maximum" ],
        "exclusiveMinimum": [ "minimum" ]
    },
    "default": {}
}

},{}],4:[function(require,module,exports){
"use strict";function Operation(t,e,i,r,n){this.api=t,this.path=e,this.method=i,this.ptr=r,this.definition=n,_.assign(this,n),debug("Found operation at %s",r),this.parameterObjects=t.plugin.getOperationParameters(this)}function Parameter(t,e,i,r){this.operation=t,this.ptr=e,this.definition=i,this.computedSchema=r,_.assign(this,i),debug("Found operation parameter (%s %s) at %s",t.method.toUpperCase(),t.path,e)}function SwaggerApi(t,e,i,r,n){this.customValidators=[],this.definition=e,this.documentation=t.documentation,this.errors=void 0,this.plugin=t,this.references=r,this.resolved=i,this.version=t.version,this.warnings=void 0,this.options=n,_.assign(this,e),debug("New Swagger API (%s)",_.isString(n.definition)?n.definition:"JavaScript Object"),this.operationObjects=t.getOperations(this),_.forEach(n.validators,this.registerValidator)}var _=require("lodash-compat"),debug=require("debug")("swagger-core-api");Operation.prototype.getParameters=function(){return this.parameterObjects},Operation.prototype.getResponseSchema=function(t){var e;if(_.isUndefined(t)?t="default":_.isNumber(t)&&(t=(Math.floor(100*t)/100).toFixed()),e=this.definition.responses[t],_.isUndefined(e))throw new Error("This operation does not have a defined '"+t+"' response code");return e.schema},Operation.prototype.getResponseSample=function(t){var e,i=this.getResponseSchema(t);return _.isUndefined(i)||(e=this.api.plugin.getSample(i)),e},Parameter.prototype.getSchema=function(){return this.computedSchema},Parameter.prototype.getSample=function(){var t;return _.isUndefined(this.computedSchema)||(t=this.operation.api.plugin.getSample(this.computedSchema)),t},SwaggerApi.prototype.getLastErrors=function(){return this.errors},SwaggerApi.prototype.getLastWarnings=function(){return this.warnings},SwaggerApi.prototype.getOperation=function(t,e){return _.find(this.operationObjects,function(i){return i.path===t&&i.method===e.toLowerCase()})},SwaggerApi.prototype.getOperations=function(t){return _.filter(this.operationObjects,function(e){return _.isUndefined(t)?!0:e.path===t})},SwaggerApi.prototype.registerValidator=function(t){if(_.isUndefined(t))throw new TypeError("validator is required");if(!_.isFunction(t))throw new TypeError("validator must be a function");this.customValidators.push(t)},SwaggerApi.prototype.validate=function(){function t(t){var i=t(e);i.errors.length>0&&(e.errors=e.errors.concat(i.errors)),i.warnings.length>0&&(e.warnings=e.warnings.concat(i.warnings))}var e=this;return this.errors=[],this.warnings=[],t(this.plugin.getJSONSchemaValidator()),0===this.errors.length&&(_.forEach(this.plugin.getSemanticValidators(),t),_.forEach(this.customValidators,t)),0===this.errors.length},module.exports={Operation:Operation,Parameter:Parameter,SwaggerApi:SwaggerApi};

},{"debug":17,"lodash-compat":138}],5:[function(require,module,exports){
"use strict";var _=require("lodash-compat"),Base64=require("js-base64").Base64,stringMocker=require("json-schema-faker/lib/types/string");module.exports["byte"]=function(e,r){var s,t=_.cloneDeep(r);return delete t.format,s=stringMocker(t),Base64.encode(s)},module.exports.password=function(e,r){return stringMocker(r)};

},{"js-base64":20,"json-schema-faker/lib/types/string":65,"lodash-compat":138}],6:[function(require,module,exports){
"use strict";var _=require("lodash-compat");module.exports.int32=module.exports.int64=function(r){var t,e=!0;if(!_.isNumber(r))try{t=parseInt(r,10)}catch(o){e=!1}return _.isNumber(t)&&(e=t%1===0),e},module.exports["double"]=module.exports["float"]=function(r){var t=!0;if(!_.isNumber(r))try{parseFloat(r)}catch(e){t=!1}return t},module.exports["byte"]=function(r){return _.isString(r)},module.exports.password=function(r){return _.isString(r)};

},{"lodash-compat":138}],7:[function(require,module,exports){
"use strict";var _=require("lodash-compat"),parameterSchemaProperties=["default","description","enum","exclusiveMaximum","exclusiveMinimum","format","items","maxItems","maxLength","maximum","minItems","minLength","minimum","multipleOf","pattern","type","uniqueItems"];module.exports.getParameterSchema=function(e){var t;return _.isUndefined(e.schema)?(t={},_.forEach(parameterSchemaProperties,function(m){_.isUndefined(e[m])||(t[m]=e[m])})):t=e.schema,t},module.exports.supportedHttpMethods=["get","put","post","delete","options","head","patch"];

},{"lodash-compat":138}],8:[function(require,module,exports){
"use strict";var _=require("lodash-compat"),JsonRefs=require("json-refs"),formatGenerators=require("./format-generators"),helpers=require("../../helpers"),types=require("../../types"),validators=require("./validators"),vHelpers=require("./helpers"),docsUrl="https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md",mocker=helpers.createJSONSchemaMocker({formatGenerators:formatGenerators}),version="2.0";module.exports.documentation=docsUrl,module.exports.supportedHttpMethods=vHelpers.supportedHttpMethods,module.exports.version=version,module.exports.canProcess=function(e){return e.swagger===version},module.exports.createSwaggerApi=function(e,r){return new Promise(function(t,o){JsonRefs.resolveRefs(e,r.loaderOptions||{},function(s,n,a){var i;s?o(s):(i=new types.SwaggerApi(module.exports,e,n,a,r),_.forEach(i.references,function(e,r){var t=JsonRefs.pathFromPointer(r);t.pop(),_.has(e,"value")||_.set(i.resolved,t,{$ref:e.ref})}),t(i))})})},module.exports.getJSONSchemaValidator=function(){return validators.jsonSchemaValidator},module.exports.getOperations=function(e){var r=[];return _.forEach(e.resolved.paths,function(t,o){var s=["paths",o],n=_.reduce(t.parameters||[],function(e,r,t){return e[r.name+":"+r["in"]]={path:s.concat(["parameters",t.toString()]),definition:r},e},{});_.forEach(t,function(t,a){if(-1!==_.indexOf(vHelpers.supportedHttpMethods,a)){var i=_.cloneDeep(t),p={},u=s.concat(a);_.forEach(n,function(e,r){p[r]=e}),_.forEach(t.parameters,function(e,r){p[e.name+":"+e["in"]]={path:u.concat(["parameters",r.toString()]),definition:e}}),i.parameters=_.map(_.values(p),function(e){return e.definition.$$$ptr$$$=JsonRefs.pathToPointer(e.path),e.definition}),_.isUndefined(i.security)&&(i.security=e.resolved.security),r.push(new types.Operation(e,o,a,JsonRefs.pathToPointer(u),i))}})}),r},module.exports.getOperationParameters=function(e){return _.map(e.parameters,function(r){var t=r.$$$ptr$$$;return delete r.$$$ptr$$$,new types.Parameter(e,t,r,vHelpers.getParameterSchema(r))})},module.exports.getSample=function(e){return mocker(e)},module.exports.getSemanticValidators=function(){return validators.semanticValidators};

},{"../../helpers":2,"../../types":4,"./format-generators":5,"./helpers":7,"./validators":10,"json-refs":52,"lodash-compat":138}],9:[function(require,module,exports){
module.exports={
  "title": "A JSON Schema for Swagger 2.0 API.",
  "id": "http://swagger.io/v2/schema.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "required": [
    "swagger",
    "info",
    "paths"
  ],
  "additionalProperties": false,
  "patternProperties": {
    "^x-": {
      "$ref": "#/definitions/vendorExtension"
    }
  },
  "properties": {
    "swagger": {
      "type": "string",
      "enum": [
        "2.0"
      ],
      "description": "The Swagger version of this document."
    },
    "info": {
      "$ref": "#/definitions/info"
    },
    "host": {
      "type": "string",
      "format": "uri",
      "pattern": "^[^{}/ :\\\\]+(?::\\d+)?$",
      "description": "The fully qualified URI to the host of the API."
    },
    "basePath": {
      "type": "string",
      "pattern": "^/",
      "description": "The base path to the API. Example: '/api'."
    },
    "schemes": {
      "$ref": "#/definitions/schemesList"
    },
    "consumes": {
      "description": "A list of MIME types accepted by the API.",
      "$ref": "#/definitions/mediaTypeList"
    },
    "produces": {
      "description": "A list of MIME types the API can produce.",
      "$ref": "#/definitions/mediaTypeList"
    },
    "paths": {
      "$ref": "#/definitions/paths"
    },
    "definitions": {
      "$ref": "#/definitions/definitions"
    },
    "parameters": {
      "$ref": "#/definitions/parameterDefinitions"
    },
    "responses": {
      "$ref": "#/definitions/responseDefinitions"
    },
    "security": {
      "$ref": "#/definitions/security"
    },
    "securityDefinitions": {
      "$ref": "#/definitions/securityDefinitions"
    },
    "tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/tag"
      },
      "uniqueItems": true
    },
    "externalDocs": {
      "$ref": "#/definitions/externalDocs"
    }
  },
  "definitions": {
    "info": {
      "type": "object",
      "description": "General information about the API.",
      "required": [
        "version",
        "title"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "title": {
          "type": "string",
          "description": "A unique and precise title of the API."
        },
        "version": {
          "type": "string",
          "description": "A semantic version number of the API."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the API. Should be different from the title.  Github-flavored markdown is allowed."
        },
        "termsOfService": {
          "type": "string",
          "description": "The terms of service for the API."
        },
        "contact": {
          "$ref": "#/definitions/contact"
        },
        "license": {
          "$ref": "#/definitions/license"
        }
      }
    },
    "contact": {
      "type": "object",
      "description": "Contact information for the owners of the API.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The identifying name of the contact person/organization."
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the contact information.",
          "format": "uri"
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact person/organization.",
          "format": "email"
        }
      }
    },
    "license": {
      "type": "object",
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the license type. It's encouraged to use an OSI compatible license."
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the license.",
          "format": "uri"
        }
      }
    },
    "paths": {
      "type": "object",
      "description": "Relative paths to the individual endpoints. They must be relative to the 'basePath'.",
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        },
        "^/": {
          "$ref": "#/definitions/pathItem"
        }
      },
      "additionalProperties": false
    },
    "definitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/schema"
      },
      "description": "One or more JSON objects describing the schemas being consumed and produced by the API."
    },
    "parameterDefinitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/parameter"
      },
      "description": "One or more JSON representations for parameters"
    },
    "responseDefinitions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/response"
      },
      "description": "One or more JSON representations for parameters"
    },
    "externalDocs": {
      "type": "object",
      "additionalProperties": false,
      "description": "information about external documentation",
      "required": [
        "url"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "examples": {
      "type": "object",
      "patternProperties": {
        "^[a-z0-9-]+/[a-z0-9\\-+]+$": {}
      },
      "additionalProperties": false
    },
    "mimeType": {
      "type": "string",
      "description": "The MIME type of the HTTP message."
    },
    "operation": {
      "type": "object",
      "required": [
        "responses"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "summary": {
          "type": "string",
          "description": "A brief summary of the operation."
        },
        "description": {
          "type": "string",
          "description": "A longer description of the operation, github-flavored markdown is allowed."
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        },
        "operationId": {
          "type": "string",
          "description": "A friendly name of the operation"
        },
        "produces": {
          "description": "A list of MIME types the API can produce.",
          "$ref": "#/definitions/mediaTypeList"
        },
        "consumes": {
          "description": "A list of MIME types the API can consume.",
          "$ref": "#/definitions/mediaTypeList"
        },
        "parameters": {
          "$ref": "#/definitions/parametersList"
        },
        "responses": {
          "$ref": "#/definitions/responses"
        },
        "schemes": {
          "$ref": "#/definitions/schemesList"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "security": {
          "$ref": "#/definitions/security"
        }
      }
    },
    "pathItem": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "$ref": {
          "type": "string"
        },
        "get": {
          "$ref": "#/definitions/operation"
        },
        "put": {
          "$ref": "#/definitions/operation"
        },
        "post": {
          "$ref": "#/definitions/operation"
        },
        "delete": {
          "$ref": "#/definitions/operation"
        },
        "options": {
          "$ref": "#/definitions/operation"
        },
        "head": {
          "$ref": "#/definitions/operation"
        },
        "patch": {
          "$ref": "#/definitions/operation"
        },
        "parameters": {
          "$ref": "#/definitions/parametersList"
        }
      }
    },
    "responses": {
      "type": "object",
      "description": "Response objects names can either be any valid HTTP status code or 'default'.",
      "minProperties": 1,
      "additionalProperties": false,
      "patternProperties": {
        "^([0-9]{3})$|^(default)$": {
          "$ref": "#/definitions/responseValue"
        },
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "not": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "^x-": {
            "$ref": "#/definitions/vendorExtension"
          }
        }
      }
    },
    "responseValue": {
      "oneOf": [
        {
          "$ref": "#/definitions/response"
        },
        {
          "$ref": "#/definitions/jsonReference"
        }
      ]
    },
    "response": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/schema"
        },
        "headers": {
          "$ref": "#/definitions/headers"
        },
        "examples": {
          "$ref": "#/definitions/examples"
        }
      },
      "additionalProperties": false
    },
    "headers": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/header"
      }
    },
    "header": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "vendorExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalProperties": true,
      "additionalItems": true
    },
    "bodyParameter": {
      "type": "object",
      "required": [
        "name",
        "in",
        "schema"
      ],
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  Github-flavored markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "body"
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "schema": {
          "$ref": "#/definitions/schema"
        }
      },
      "additionalProperties": false
    },
    "headerParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "header"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  Github-flavored markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "queryParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "query"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  Github-flavored markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false,
          "description": "allows sending a parameter by name only or with an empty value."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormatWithMulti"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "formDataParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Determines whether or not this parameter is required or optional.",
          "default": false
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "formData"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  Github-flavored markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false,
          "description": "allows sending a parameter by name only or with an empty value."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array",
            "file"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormatWithMulti"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "pathParameterSubSchema": {
      "additionalProperties": false,
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "required": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Determines whether or not this parameter is required or optional."
        },
        "in": {
          "type": "string",
          "description": "Determines the location of the parameter.",
          "enum": [
            "path"
          ]
        },
        "description": {
          "type": "string",
          "description": "A brief description of the parameter. This could contain examples of use.  Github-flavored markdown is allowed."
        },
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "integer",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "nonBodyParameter": {
      "type": "object",
      "required": [
        "name",
        "in",
        "type"
      ],
      "oneOf": [
        {
          "$ref": "#/definitions/headerParameterSubSchema"
        },
        {
          "$ref": "#/definitions/formDataParameterSubSchema"
        },
        {
          "$ref": "#/definitions/queryParameterSubSchema"
        },
        {
          "$ref": "#/definitions/pathParameterSubSchema"
        }
      ]
    },
    "parameter": {
      "oneOf": [
        {
          "$ref": "#/definitions/bodyParameter"
        },
        {
          "$ref": "#/definitions/nonBodyParameter"
        }
      ]
    },
    "schema": {
      "type": "object",
      "description": "A deterministic version of a JSON Schema object.",
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      },
      "properties": {
        "$ref": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "title": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/title"
        },
        "description": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/description"
        },
        "default": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/default"
        },
        "multipleOf": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/multipleOf"
        },
        "maximum": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
        },
        "minLength": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
        },
        "pattern": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/pattern"
        },
        "maxItems": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
        },
        "minItems": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
        },
        "uniqueItems": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/uniqueItems"
        },
        "maxProperties": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
        },
        "minProperties": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
        },
        "required": {
          "$ref": "http://json-schema.org/draft-04/schema#/definitions/stringArray"
        },
        "enum": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/enum"
        },
        "additionalProperties": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/additionalProperties"
        },
        "type": {
          "$ref": "http://json-schema.org/draft-04/schema#/properties/type"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/definitions/schema"
              }
            }
          ],
          "default": {}
        },
        "allOf": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/schema"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          },
          "default": {}
        },
        "discriminator": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "xml": {
          "$ref": "#/definitions/xml"
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        },
        "example": {}
      },
      "additionalProperties": false
    },
    "primitivesItems": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean",
            "array"
          ]
        },
        "format": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/primitivesItems"
        },
        "collectionFormat": {
          "$ref": "#/definitions/collectionFormat"
        },
        "default": {
          "$ref": "#/definitions/default"
        },
        "maximum": {
          "$ref": "#/definitions/maximum"
        },
        "exclusiveMaximum": {
          "$ref": "#/definitions/exclusiveMaximum"
        },
        "minimum": {
          "$ref": "#/definitions/minimum"
        },
        "exclusiveMinimum": {
          "$ref": "#/definitions/exclusiveMinimum"
        },
        "maxLength": {
          "$ref": "#/definitions/maxLength"
        },
        "minLength": {
          "$ref": "#/definitions/minLength"
        },
        "pattern": {
          "$ref": "#/definitions/pattern"
        },
        "maxItems": {
          "$ref": "#/definitions/maxItems"
        },
        "minItems": {
          "$ref": "#/definitions/minItems"
        },
        "uniqueItems": {
          "$ref": "#/definitions/uniqueItems"
        },
        "enum": {
          "$ref": "#/definitions/enum"
        },
        "multipleOf": {
          "$ref": "#/definitions/multipleOf"
        }
      }
    },
    "security": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/securityRequirement"
      },
      "uniqueItems": true
    },
    "securityRequirement": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "uniqueItems": true
      }
    },
    "xml": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "attribute": {
          "type": "boolean",
          "default": false
        },
        "wrapped": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "tag": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocs"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "securityDefinitions": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "#/definitions/basicAuthenticationSecurity"
          },
          {
            "$ref": "#/definitions/apiKeySecurity"
          },
          {
            "$ref": "#/definitions/oauth2ImplicitSecurity"
          },
          {
            "$ref": "#/definitions/oauth2PasswordSecurity"
          },
          {
            "$ref": "#/definitions/oauth2ApplicationSecurity"
          },
          {
            "$ref": "#/definitions/oauth2AccessCodeSecurity"
          }
        ]
      }
    },
    "basicAuthenticationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "basic"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "apiKeySecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "name",
        "in"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "apiKey"
          ]
        },
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "header",
            "query"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2ImplicitSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "implicit"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2PasswordSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "password"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2ApplicationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "application"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2AccessCodeSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "accessCode"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2Scopes": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "mediaTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/mimeType"
      },
      "uniqueItems": true
    },
    "parametersList": {
      "type": "array",
      "description": "The parameters needed to send a valid API call.",
      "additionalItems": false,
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/parameter"
          },
          {
            "$ref": "#/definitions/jsonReference"
          }
        ]
      },
      "uniqueItems": true
    },
    "schemesList": {
      "type": "array",
      "description": "The transfer protocol of the API.",
      "items": {
        "type": "string",
        "enum": [
          "http",
          "https",
          "ws",
          "wss"
        ]
      },
      "uniqueItems": true
    },
    "collectionFormat": {
      "type": "string",
      "enum": [
        "csv",
        "ssv",
        "tsv",
        "pipes"
      ],
      "default": "csv"
    },
    "collectionFormatWithMulti": {
      "type": "string",
      "enum": [
        "csv",
        "ssv",
        "tsv",
        "pipes",
        "multi"
      ],
      "default": "csv"
    },
    "title": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/title"
    },
    "description": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/description"
    },
    "default": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/default"
    },
    "multipleOf": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/multipleOf"
    },
    "maximum": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/maximum"
    },
    "exclusiveMaximum": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum"
    },
    "minimum": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/minimum"
    },
    "exclusiveMinimum": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum"
    },
    "maxLength": {
      "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
    },
    "minLength": {
      "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
    },
    "pattern": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/pattern"
    },
    "maxItems": {
      "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveInteger"
    },
    "minItems": {
      "$ref": "http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0"
    },
    "uniqueItems": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/uniqueItems"
    },
    "enum": {
      "$ref": "http://json-schema.org/draft-04/schema#/properties/enum"
    },
    "jsonReference": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "type": "string"
        }
      }
    }
  }
}
},{}],10:[function(require,module,exports){
"use strict";function getSchemaProperties(e){var r=_.keys(e.properties);return _.forEach(e.allOf,function(e){_.forEach(getSchemaProperties(e),function(e){-1===_.indexOf(r,e)&&r.push(e)})}),r}function walkSchema(e,r,a,t,o){function n(r){return _.indexOf(e,JsonRefs.pathToPointer(r))>-1}function s(r,a){n(a)||(_.forEach(r,function(r,n){_.isNumber(n)&&(n=n.toString()),walkSchema(e,r,a.concat(n),t,o)}),_.forEach(t,function(e){e(o,r,a)}))}var i=r.type||"object";n(a)||(_.isUndefined(r.schema)?"array"!==i||_.isUndefined(r.items)?"object"===i&&(_.isUndefined(r.additionalProperties)||walkSchema(e,r.additionalProperties,a.concat("additionalProperties"),t,o),_.forEach(["allOf","properties"],function(e){_.isUndefined(r[e])||s(r[e],a.concat(e))})):s(r.items,a.concat("items")):walkSchema(e,r.schema,a.concat("schema"),t,o),_.forEach(t,function(e){e(o,r,a)}))}function validateStructure(e){return helpers.validateAgainstSchema(helpers.createJSONValidator({formatValidators:customFormatValidators}),swaggerSchema,e.resolved)}function validateArrayTypeItemsExistence(e,r,a){"array"===r.type&&_.isUndefined(r.items)&&e.errors.push({code:"OBJECT_MISSING_REQUIRED_PROPERTY",message:"Missing required property: items",path:a})}function validateDefaultValue(e,r,a){var t;_.isUndefined(r["default"])||(t=helpers.validateAgainstSchema(helpers.createJSONValidator({formatValidators:customFormatValidators}),r,r["default"]),_.forEach(t.errors,function(r){r.path=a.concat(r.path.concat("default")),e.errors.push(r)}),_.forEach(t.warnings,function(r){r.path=a.concat(r.path.push("default")),e.warnings.push(r)}))}function validateSchemaProperties(e,r,a){_.forEach(_.difference(r.required||[],getSchemaProperties(r)),function(r){e.errors.push({code:"OBJECT_MISSING_REQUIRED_PROPERTY_DEFINITION",message:"Missing required property definition: "+r,path:a})})}function validateMissingAndUnusedReferences(e){function r(e,r){-1===_.indexOf(o,e)&&(_.isUndefined(o[e])&&(o[e]=[]),o[e].push(r))}function a(e){return function(a,o){_.forEach(a,function(a,s){var i=["securityDefinitions",s],c=JsonRefs.pathToPointer(i),f=e.concat([o.toString(),s]);-1===_.indexOf(t,c)?n.errors.push({code:"UNRESOLVABLE_REFERENCE",message:"Security definition could not be resolved: "+s,path:f}):(r(c,JsonRefs.pathToPointer(f)),_.forEach(a,function(e,a){var o=f.concat(a.toString()),s=JsonRefs.pathToPointer(i.concat(["scopes",e]));-1===_.indexOf(t,s)?n.errors.push({code:"UNRESOLVABLE_REFERENCE",message:"Security scope definition could not be resolved: "+e,path:o}):r(JsonRefs.pathToPointer(i.concat(["scopes",e])),s)}))})}}var t=[],o={},n={errors:[],warnings:[]};return _.forEach(e.resolved.definitions,function(e,r){t.push(JsonRefs.pathToPointer(["definitions",r]))}),_.forEach(e.resolved.parameters,function(e,r){t.push(JsonRefs.pathToPointer(["parameters",r]))}),_.forEach(e.resolved.responses,function(e,r){t.push(JsonRefs.pathToPointer(["responses",r]))}),_.forEach(e.resolved.securityDefinitions,function(e,r){var a=["securityDefinitions",r];t.push(JsonRefs.pathToPointer(a)),_.forEach(e.scopes,function(e,r){var o=JsonRefs.pathToPointer(a.concat(["scopes",r]));-1===_.indexOf(t,o)&&t.push(o)})}),_.forEach(e.references,function(e,a){_.has(e,"value")?r(e.ref,a):n.errors.push({code:"UNRESOLVABLE_REFERENCE",message:"Reference could not be resolved: "+e.ref,path:JsonRefs.pathFromPointer(a)})}),_.forEach(e.resolved.security,a(["security"])),_.forEach(e.resolved.paths,function(e,r){var t=["paths",r];_.forEach(e.security,a(t.concat("security"))),_.forEach(e,function(e,r){-1!==_.indexOf(vHelpers.supportedHttpMethods,r)&&_.forEach(e.security,a(t.concat([r,"security"])))})}),_.forEach(_.difference(t,Object.keys(o)),function(e){n.warnings.push({code:"UNUSED_DEFINITION",message:"Definition is not used: "+e,path:JsonRefs.pathFromPointer(e)})}),n}function validateSchemaObjects(e){function r(e,r){_.forEach(e,function(e,a){var s;_.isNumber(a)&&(a=a.toString()),s=r.concat(a),"body"!==e["in"]&&(e=vHelpers.getParameterSchema(e)),walkSchema(t,e,s,n,o)})}function a(e,r){_.forEach(e,function(e,a){var s=r.concat(a);_.forEach(e.headers,function(e,r){walkSchema(t,e,s.concat(["headers",r]),n,o)}),_.isUndefined(e.schema)||walkSchema(t,e.schema,s.concat("schema"),n,o)})}var t=_.reduce(e.references,function(e,r,a){var t=JsonRefs.pathFromPointer(a);return t.pop(),e.push(JsonRefs.pathToPointer(t)),e},[]),o={errors:[],warnings:[]},n=[validateArrayTypeItemsExistence,validateDefaultValue,validateSchemaProperties];return _.forEach(e.resolved.definitions,function(e,r){walkSchema(t,e,["definitions",r],n,o)}),r(e.resolved.parameters,["parameters"]),a(e.resolved.responses,["responses"]),_.forEach(e.resolved.paths,function(e,t){var o=["paths",t];r(e.parameters,o.concat("parameters")),_.forEach(e,function(e,t){var n=o.concat(t);-1!==_.indexOf(vHelpers.supportedHttpMethods,t)&&(r(e.parameters,n.concat("parameters")),a(e.responses,n.concat("responses")))})}),o}function validatePathsAndOperations(e){function r(e,r,t){var o=r["in"]+":"+r.name;return _.indexOf(e,o)>-1?a.errors.push({code:"DUPLICATE_PARAMETER",message:"Operation cannot have duplicate parameters: "+JsonRefs.pathToPointer(t),path:t}):e.push(o),e}var a={errors:[],warnings:[]};return _.reduce(e.resolved.paths,function(t,o,n){var s=[],i=n,c=["paths",n];return _.forEach(n.match(/\{(.*?)\}/g),function(e,r){s.push(e.replace(/[{}]/g,"")),i=i.replace(e,"arg"+r)}),_.indexOf(t,i)>-1?a.errors.push({code:"EQUIVALENT_PATH",message:"Equivalent path already exists: "+n,path:c}):t.push(i),_.reduce(o.parameters,function(e,a,t){return r(e,a,c.concat(["parameters",t.toString()]))},[]),_.forEach(o,function(t,o){var i,f,p={},u=c.concat(o);-1!==_.indexOf(vHelpers.supportedHttpMethods,o)&&(_.reduce(t.parameters,function(e,a,t){return r(e,a,u.concat(["parameters",t.toString()]))},[]),f=e.getOperation(n,o).getParameters(),i=_.reduce(f,function(e,r){return"path"===r["in"]?p[r.name]=r.ptr:"body"===r["in"]?e.bodyParameteters+=1:"formData"===r["in"]&&(e.formParameters+=1),e},{bodyParameteters:0,formParameters:0}),i.bodyParameteters>1&&a.errors.push({code:"MULTIPLE_BODY_PARAMETERS",message:"Operation cannot have multiple body parameters",path:u}),i.bodyParameteters>0&&i.formParameters>0&&a.errors.push({code:"INVALID_PARAMETER_COMBINATION",message:"Operation cannot have a body parameter and a formData parameter",path:u}),_.forEach(_.difference(s,_.keys(p)),function(e){a.errors.push({code:"MISSING_PATH_PARAMETER_DEFINITION",message:"Path parameter is declared but is not defined: "+e,path:u})}),_.forEach(_.difference(_.keys(p),s),function(e){a.errors.push({code:"MISSING_PATH_PARAMETER_DECLARATION",message:"Path parameter is defined but is not declared: "+e,path:JsonRefs.pathFromPointer(p[e])})}))}),t},[]),a}var _=require("lodash-compat"),customFormatValidators=require("./format-validators"),helpers=require("../../helpers"),JsonRefs=require("json-refs"),swaggerSchema=require("./schema.json"),vHelpers=require("./helpers");module.exports={jsonSchemaValidator:validateStructure,semanticValidators:[validateMissingAndUnusedReferences,validateSchemaObjects,validatePathsAndOperations]};

},{"../../helpers":2,"./format-validators":6,"./helpers":7,"./schema.json":9,"json-refs":52,"lodash-compat":138}],11:[function(require,module,exports){

},{}],12:[function(require,module,exports){
function Buffer(t){return this instanceof Buffer?(this.length=0,this.parent=void 0,"number"==typeof t?fromNumber(this,t):"string"==typeof t?fromString(this,t,arguments.length>1?arguments[1]:"utf8"):fromObject(this,t)):arguments.length>1?new Buffer(t,arguments[1]):new Buffer(t)}function fromNumber(t,e){if(t=allocate(t,0>e?0:0|checked(e)),!Buffer.TYPED_ARRAY_SUPPORT)for(var r=0;e>r;r++)t[r]=0;return t}function fromString(t,e,r){("string"!=typeof r||""===r)&&(r="utf8");var n=0|byteLength(e,r);return t=allocate(t,n),t.write(e,r),t}function fromObject(t,e){if(Buffer.isBuffer(e))return fromBuffer(t,e);if(isArray(e))return fromArray(t,e);if(null==e)throw new TypeError("must start with number, buffer, array or string");return"undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer?fromTypedArray(t,e):e.length?fromArrayLike(t,e):fromJsonObject(t,e)}function fromBuffer(t,e){var r=0|checked(e.length);return t=allocate(t,r),e.copy(t,0,0,r),t}function fromArray(t,e){var r=0|checked(e.length);t=allocate(t,r);for(var n=0;r>n;n+=1)t[n]=255&e[n];return t}function fromTypedArray(t,e){var r=0|checked(e.length);t=allocate(t,r);for(var n=0;r>n;n+=1)t[n]=255&e[n];return t}function fromArrayLike(t,e){var r=0|checked(e.length);t=allocate(t,r);for(var n=0;r>n;n+=1)t[n]=255&e[n];return t}function fromJsonObject(t,e){var r,n=0;"Buffer"===e.type&&isArray(e.data)&&(r=e.data,n=0|checked(r.length)),t=allocate(t,n);for(var i=0;n>i;i+=1)t[i]=255&r[i];return t}function allocate(t,e){Buffer.TYPED_ARRAY_SUPPORT?t=Buffer._augment(new Uint8Array(e)):(t.length=e,t._isBuffer=!0);var r=0!==e&&e<=Buffer.poolSize>>>1;return r&&(t.parent=rootParent),t}function checked(t){if(t>=kMaxLength)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength.toString(16)+" bytes");return 0|t}function SlowBuffer(t,e){if(!(this instanceof SlowBuffer))return new SlowBuffer(t,e);var r=new Buffer(t,e);return delete r.parent,r}function byteLength(t,e){if("string"!=typeof t&&(t=String(t)),0===t.length)return 0;switch(e||"utf8"){case"ascii":case"binary":case"raw":return t.length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t.length;case"hex":return t.length>>>1;case"utf8":case"utf-8":return utf8ToBytes(t).length;case"base64":return base64ToBytes(t).length;default:return t.length}}function hexWrite(t,e,r,n){r=Number(r)||0;var i=t.length-r;n?(n=Number(n),n>i&&(n=i)):n=i;var f=e.length;if(f%2!==0)throw new Error("Invalid hex string");n>f/2&&(n=f/2);for(var o=0;n>o;o++){var u=parseInt(e.substr(2*o,2),16);if(isNaN(u))throw new Error("Invalid hex string");t[r+o]=u}return o}function utf8Write(t,e,r,n){return blitBuffer(utf8ToBytes(e,t.length-r),t,r,n)}function asciiWrite(t,e,r,n){return blitBuffer(asciiToBytes(e),t,r,n)}function binaryWrite(t,e,r,n){return asciiWrite(t,e,r,n)}function base64Write(t,e,r,n){return blitBuffer(base64ToBytes(e),t,r,n)}function ucs2Write(t,e,r,n){return blitBuffer(utf16leToBytes(e,t.length-r),t,r,n)}function base64Slice(t,e,r){return base64.fromByteArray(0===e&&r===t.length?t:t.slice(e,r))}function utf8Slice(t,e,r){var n="",i="";r=Math.min(t.length,r);for(var f=e;r>f;f++)t[f]<=127?(n+=decodeUtf8Char(i)+String.fromCharCode(t[f]),i=""):i+="%"+t[f].toString(16);return n+decodeUtf8Char(i)}function asciiSlice(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;r>i;i++)n+=String.fromCharCode(127&t[i]);return n}function binarySlice(t,e,r){var n="";r=Math.min(t.length,r);for(var i=e;r>i;i++)n+=String.fromCharCode(t[i]);return n}function hexSlice(t,e,r){var n=t.length;(!e||0>e)&&(e=0),(!r||0>r||r>n)&&(r=n);for(var i="",f=e;r>f;f++)i+=toHex(t[f]);return i}function utf16leSlice(t,e,r){for(var n=t.slice(e,r),i="",f=0;f<n.length;f+=2)i+=String.fromCharCode(n[f]+256*n[f+1]);return i}function checkOffset(t,e,r){if(t%1!==0||0>t)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function checkInt(t,e,r,n,i,f){if(!Buffer.isBuffer(t))throw new TypeError("buffer must be a Buffer instance");if(e>i||f>e)throw new RangeError("value is out of bounds");if(r+n>t.length)throw new RangeError("index out of range")}function objectWriteUInt16(t,e,r,n){0>e&&(e=65535+e+1);for(var i=0,f=Math.min(t.length-r,2);f>i;i++)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function objectWriteUInt32(t,e,r,n){0>e&&(e=4294967295+e+1);for(var i=0,f=Math.min(t.length-r,4);f>i;i++)t[r+i]=e>>>8*(n?i:3-i)&255}function checkIEEE754(t,e,r,n,i,f){if(e>i||f>e)throw new RangeError("value is out of bounds");if(r+n>t.length)throw new RangeError("index out of range");if(0>r)throw new RangeError("index out of range")}function writeFloat(t,e,r,n,i){return i||checkIEEE754(t,e,r,4,3.4028234663852886e38,-3.4028234663852886e38),ieee754.write(t,e,r,n,23,4),r+4}function writeDouble(t,e,r,n,i){return i||checkIEEE754(t,e,r,8,1.7976931348623157e308,-1.7976931348623157e308),ieee754.write(t,e,r,n,52,8),r+8}function base64clean(t){if(t=stringtrim(t).replace(INVALID_BASE64_RE,""),t.length<2)return"";for(;t.length%4!==0;)t+="=";return t}function stringtrim(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function toHex(t){return 16>t?"0"+t.toString(16):t.toString(16)}function utf8ToBytes(t,e){e=e||1/0;for(var r,n=t.length,i=null,f=[],o=0;n>o;o++){if(r=t.charCodeAt(o),r>55295&&57344>r){if(!i){if(r>56319){(e-=3)>-1&&f.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&f.push(239,191,189);continue}i=r;continue}if(56320>r){(e-=3)>-1&&f.push(239,191,189),i=r;continue}r=i-55296<<10|r-56320|65536,i=null}else i&&((e-=3)>-1&&f.push(239,191,189),i=null);if(128>r){if((e-=1)<0)break;f.push(r)}else if(2048>r){if((e-=2)<0)break;f.push(r>>6|192,63&r|128)}else if(65536>r){if((e-=3)<0)break;f.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(2097152>r))throw new Error("Invalid code point");if((e-=4)<0)break;f.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return f}function asciiToBytes(t){for(var e=[],r=0;r<t.length;r++)e.push(255&t.charCodeAt(r));return e}function utf16leToBytes(t,e){for(var r,n,i,f=[],o=0;o<t.length&&!((e-=2)<0);o++)r=t.charCodeAt(o),n=r>>8,i=r%256,f.push(i),f.push(n);return f}function base64ToBytes(t){return base64.toByteArray(base64clean(t))}function blitBuffer(t,e,r,n){for(var i=0;n>i&&!(i+r>=e.length||i>=t.length);i++)e[i+r]=t[i];return i}function decodeUtf8Char(t){try{return decodeURIComponent(t)}catch(e){return String.fromCharCode(65533)}}var base64=require("base64-js"),ieee754=require("ieee754"),isArray=require("is-array");exports.Buffer=Buffer,exports.SlowBuffer=SlowBuffer,exports.INSPECT_MAX_BYTES=50,Buffer.poolSize=8192;var kMaxLength=1073741823,rootParent={};Buffer.TYPED_ARRAY_SUPPORT=function(){try{var t=new ArrayBuffer(0),e=new Uint8Array(t);return e.foo=function(){return 42},42===e.foo()&&"function"==typeof e.subarray&&0===new Uint8Array(1).subarray(1,1).byteLength}catch(r){return!1}}(),Buffer.isBuffer=function(t){return!(null==t||!t._isBuffer)},Buffer.compare=function(t,e){if(!Buffer.isBuffer(t)||!Buffer.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,i=0,f=Math.min(r,n);f>i&&t[i]===e[i];)++i;return i!==f&&(r=t[i],n=e[i]),n>r?-1:r>n?1:0},Buffer.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(t,e){if(!isArray(t))throw new TypeError("list argument must be an Array of Buffers.");if(0===t.length)return new Buffer(0);if(1===t.length)return t[0];var r;if(void 0===e)for(e=0,r=0;r<t.length;r++)e+=t[r].length;var n=new Buffer(e),i=0;for(r=0;r<t.length;r++){var f=t[r];f.copy(n,i),i+=f.length}return n},Buffer.byteLength=byteLength,Buffer.prototype.length=void 0,Buffer.prototype.parent=void 0,Buffer.prototype.toString=function(t,e,r){var n=!1;if(e=0|e,r=void 0===r||r===1/0?this.length:0|r,t||(t="utf8"),0>e&&(e=0),r>this.length&&(r=this.length),e>=r)return"";for(;;)switch(t){case"hex":return hexSlice(this,e,r);case"utf8":case"utf-8":return utf8Slice(this,e,r);case"ascii":return asciiSlice(this,e,r);case"binary":return binarySlice(this,e,r);case"base64":return base64Slice(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}},Buffer.prototype.equals=function(t){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?!0:0===Buffer.compare(this,t)},Buffer.prototype.inspect=function(){var t="",e=exports.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(t+=" ... ")),"<Buffer "+t+">"},Buffer.prototype.compare=function(t){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?0:Buffer.compare(this,t)},Buffer.prototype.indexOf=function(t,e){function r(t,e,r){for(var n=-1,i=0;r+i<t.length;i++)if(t[r+i]===e[-1===n?0:i-n]){if(-1===n&&(n=i),i-n+1===e.length)return r+n}else n=-1;return-1}if(e>2147483647?e=2147483647:-2147483648>e&&(e=-2147483648),e>>=0,0===this.length)return-1;if(e>=this.length)return-1;if(0>e&&(e=Math.max(this.length+e,0)),"string"==typeof t)return 0===t.length?-1:String.prototype.indexOf.call(this,t,e);if(Buffer.isBuffer(t))return r(this,t,e);if("number"==typeof t)return Buffer.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,t,e):r(this,[t],e);throw new TypeError("val must be string, number or Buffer")},Buffer.prototype.get=function(t){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(t)},Buffer.prototype.set=function(t,e){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(t,e)},Buffer.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else if(isFinite(e))e=0|e,isFinite(r)?(r=0|r,void 0===n&&(n="utf8")):(n=r,r=void 0);else{var i=n;n=e,e=0|r,r=i}var f=this.length-e;if((void 0===r||r>f)&&(r=f),t.length>0&&(0>r||0>e)||e>this.length)throw new RangeError("attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return hexWrite(this,t,e,r);case"utf8":case"utf-8":return utf8Write(this,t,e,r);case"ascii":return asciiWrite(this,t,e,r);case"binary":return binaryWrite(this,t,e,r);case"base64":return base64Write(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,t,e,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},Buffer.prototype.slice=function(t,e){var r=this.length;t=~~t,e=void 0===e?r:~~e,0>t?(t+=r,0>t&&(t=0)):t>r&&(t=r),0>e?(e+=r,0>e&&(e=0)):e>r&&(e=r),t>e&&(e=t);var n;if(Buffer.TYPED_ARRAY_SUPPORT)n=Buffer._augment(this.subarray(t,e));else{var i=e-t;n=new Buffer(i,void 0);for(var f=0;i>f;f++)n[f]=this[f+t]}return n.length&&(n.parent=this.parent||this),n},Buffer.prototype.readUIntLE=function(t,e,r){t=0|t,e=0|e,r||checkOffset(t,e,this.length);for(var n=this[t],i=1,f=0;++f<e&&(i*=256);)n+=this[t+f]*i;return n},Buffer.prototype.readUIntBE=function(t,e,r){t=0|t,e=0|e,r||checkOffset(t,e,this.length);for(var n=this[t+--e],i=1;e>0&&(i*=256);)n+=this[t+--e]*i;return n},Buffer.prototype.readUInt8=function(t,e){return e||checkOffset(t,1,this.length),this[t]},Buffer.prototype.readUInt16LE=function(t,e){return e||checkOffset(t,2,this.length),this[t]|this[t+1]<<8},Buffer.prototype.readUInt16BE=function(t,e){return e||checkOffset(t,2,this.length),this[t]<<8|this[t+1]},Buffer.prototype.readUInt32LE=function(t,e){return e||checkOffset(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Buffer.prototype.readUInt32BE=function(t,e){return e||checkOffset(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Buffer.prototype.readIntLE=function(t,e,r){t=0|t,e=0|e,r||checkOffset(t,e,this.length);for(var n=this[t],i=1,f=0;++f<e&&(i*=256);)n+=this[t+f]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},Buffer.prototype.readIntBE=function(t,e,r){t=0|t,e=0|e,r||checkOffset(t,e,this.length);for(var n=e,i=1,f=this[t+--n];n>0&&(i*=256);)f+=this[t+--n]*i;return i*=128,f>=i&&(f-=Math.pow(2,8*e)),f},Buffer.prototype.readInt8=function(t,e){return e||checkOffset(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Buffer.prototype.readInt16LE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt16BE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt32LE=function(t,e){return e||checkOffset(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Buffer.prototype.readInt32BE=function(t,e){return e||checkOffset(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Buffer.prototype.readFloatLE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!0,23,4)},Buffer.prototype.readFloatBE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!1,23,4)},Buffer.prototype.readDoubleLE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!0,52,8)},Buffer.prototype.readDoubleBE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!1,52,8)},Buffer.prototype.writeUIntLE=function(t,e,r,n){t=+t,e=0|e,r=0|r,n||checkInt(this,t,e,r,Math.pow(2,8*r),0);var i=1,f=0;for(this[e]=255&t;++f<r&&(i*=256);)this[e+f]=t/i&255;return e+r},Buffer.prototype.writeUIntBE=function(t,e,r,n){t=+t,e=0|e,r=0|r,n||checkInt(this,t,e,r,Math.pow(2,8*r),0);var i=r-1,f=1;for(this[e+i]=255&t;--i>=0&&(f*=256);)this[e+i]=t/f&255;return e+r},Buffer.prototype.writeUInt8=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=t,e+1},Buffer.prototype.writeUInt16LE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeUInt16BE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeUInt32LE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=t):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeUInt32BE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e=0|e,!n){var i=Math.pow(2,8*r-1);checkInt(this,t,e,r,i-1,-i)}var f=0,o=1,u=0>t?1:0;for(this[e]=255&t;++f<r&&(o*=256);)this[e+f]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e=0|e,!n){var i=Math.pow(2,8*r-1);checkInt(this,t,e,r,i-1,-i)}var f=r-1,o=1,u=0>t?1:0;for(this[e+f]=255&t;--f>=0&&(o*=256);)this[e+f]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeInt8=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),0>t&&(t=255+t+1),this[e]=t,e+1},Buffer.prototype.writeInt16LE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeInt16BE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeInt32LE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeInt32BE=function(t,e,r){return t=+t,e=0|e,r||checkInt(this,t,e,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeFloatLE=function(t,e,r){return writeFloat(this,t,e,!0,r)},Buffer.prototype.writeFloatBE=function(t,e,r){return writeFloat(this,t,e,!1,r)},Buffer.prototype.writeDoubleLE=function(t,e,r){return writeDouble(this,t,e,!0,r)},Buffer.prototype.writeDoubleBE=function(t,e,r){return writeDouble(this,t,e,!1,r)},Buffer.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&r>n&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(0>e)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>n)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i=n-r;if(1e3>i||!Buffer.TYPED_ARRAY_SUPPORT)for(var f=0;i>f;f++)t[f+e]=this[f+r];else t._set(this.subarray(r,r+i),e);return i},Buffer.prototype.fill=function(t,e,r){if(t||(t=0),e||(e=0),r||(r=this.length),e>r)throw new RangeError("end < start");if(r!==e&&0!==this.length){if(0>e||e>=this.length)throw new RangeError("start out of bounds");if(0>r||r>this.length)throw new RangeError("end out of bounds");var n;if("number"==typeof t)for(n=e;r>n;n++)this[n]=t;else{var i=utf8ToBytes(t.toString()),f=i.length;for(n=e;r>n;n++)this[n]=i[n%f]}return this}},Buffer.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(Buffer.TYPED_ARRAY_SUPPORT)return new Buffer(this).buffer;for(var t=new Uint8Array(this.length),e=0,r=t.length;r>e;e+=1)t[e]=this[e];return t.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var BP=Buffer.prototype;Buffer._augment=function(t){return t.constructor=Buffer,t._isBuffer=!0,t._set=t.set,t.get=BP.get,t.set=BP.set,t.write=BP.write,t.toString=BP.toString,t.toLocaleString=BP.toString,t.toJSON=BP.toJSON,t.equals=BP.equals,t.compare=BP.compare,t.indexOf=BP.indexOf,t.copy=BP.copy,t.slice=BP.slice,t.readUIntLE=BP.readUIntLE,t.readUIntBE=BP.readUIntBE,t.readUInt8=BP.readUInt8,t.readUInt16LE=BP.readUInt16LE,t.readUInt16BE=BP.readUInt16BE,t.readUInt32LE=BP.readUInt32LE,t.readUInt32BE=BP.readUInt32BE,t.readIntLE=BP.readIntLE,t.readIntBE=BP.readIntBE,t.readInt8=BP.readInt8,t.readInt16LE=BP.readInt16LE,t.readInt16BE=BP.readInt16BE,t.readInt32LE=BP.readInt32LE,t.readInt32BE=BP.readInt32BE,t.readFloatLE=BP.readFloatLE,t.readFloatBE=BP.readFloatBE,t.readDoubleLE=BP.readDoubleLE,t.readDoubleBE=BP.readDoubleBE,t.writeUInt8=BP.writeUInt8,t.writeUIntLE=BP.writeUIntLE,t.writeUIntBE=BP.writeUIntBE,t.writeUInt16LE=BP.writeUInt16LE,t.writeUInt16BE=BP.writeUInt16BE,t.writeUInt32LE=BP.writeUInt32LE,t.writeUInt32BE=BP.writeUInt32BE,t.writeIntLE=BP.writeIntLE,t.writeIntBE=BP.writeIntBE,t.writeInt8=BP.writeInt8,t.writeInt16LE=BP.writeInt16LE,t.writeInt16BE=BP.writeInt16BE,t.writeInt32LE=BP.writeInt32LE,t.writeInt32BE=BP.writeInt32BE,t.writeFloatLE=BP.writeFloatLE,t.writeFloatBE=BP.writeFloatBE,t.writeDoubleLE=BP.writeDoubleLE,t.writeDoubleBE=BP.writeDoubleBE,t.fill=BP.fill,t.inspect=BP.inspect,t.toArrayBuffer=BP.toArrayBuffer,t};var INVALID_BASE64_RE=/[^+\/0-9A-z\-]/g;

},{"base64-js":13,"ieee754":14,"is-array":15}],13:[function(require,module,exports){
var lookup="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(t){"use strict";function r(t){var r=t.charCodeAt(0);return r===h||r===u?62:r===c||r===f?63:o>r?-1:o+10>r?r-o+26+26:i+26>r?r-i:A+26>r?r-A+26:void 0}function e(t){function e(t){i[f++]=t}var n,h,c,o,A,i;if(t.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var u=t.length;A="="===t.charAt(u-2)?2:"="===t.charAt(u-1)?1:0,i=new a(3*t.length/4-A),c=A>0?t.length-4:t.length;var f=0;for(n=0,h=0;c>n;n+=4,h+=3)o=r(t.charAt(n))<<18|r(t.charAt(n+1))<<12|r(t.charAt(n+2))<<6|r(t.charAt(n+3)),e((16711680&o)>>16),e((65280&o)>>8),e(255&o);return 2===A?(o=r(t.charAt(n))<<2|r(t.charAt(n+1))>>4,e(255&o)):1===A&&(o=r(t.charAt(n))<<10|r(t.charAt(n+1))<<4|r(t.charAt(n+2))>>2,e(o>>8&255),e(255&o)),i}function n(t){function r(t){return lookup.charAt(t)}function e(t){return r(t>>18&63)+r(t>>12&63)+r(t>>6&63)+r(63&t)}var n,a,h,c=t.length%3,o="";for(n=0,h=t.length-c;h>n;n+=3)a=(t[n]<<16)+(t[n+1]<<8)+t[n+2],o+=e(a);switch(c){case 1:a=t[t.length-1],o+=r(a>>2),o+=r(a<<4&63),o+="==";break;case 2:a=(t[t.length-2]<<8)+t[t.length-1],o+=r(a>>10),o+=r(a>>4&63),o+=r(a<<2&63),o+="="}return o}var a="undefined"!=typeof Uint8Array?Uint8Array:Array,h="+".charCodeAt(0),c="/".charCodeAt(0),o="0".charCodeAt(0),A="a".charCodeAt(0),i="A".charCodeAt(0),u="-".charCodeAt(0),f="_".charCodeAt(0);t.toByteArray=e,t.fromByteArray=n}("undefined"==typeof exports?this.base64js={}:exports);

},{}],14:[function(require,module,exports){
exports.read=function(a,o,t,r,h){var M,p,w=8*h-r-1,f=(1<<w)-1,e=f>>1,i=-7,N=t?h-1:0,n=t?-1:1,s=a[o+N];for(N+=n,M=s&(1<<-i)-1,s>>=-i,i+=w;i>0;M=256*M+a[o+N],N+=n,i-=8);for(p=M&(1<<-i)-1,M>>=-i,i+=r;i>0;p=256*p+a[o+N],N+=n,i-=8);if(0===M)M=1-e;else{if(M===f)return p?NaN:(s?-1:1)*(1/0);p+=Math.pow(2,r),M-=e}return(s?-1:1)*p*Math.pow(2,M-r)},exports.write=function(a,o,t,r,h,M){var p,w,f,e=8*M-h-1,i=(1<<e)-1,N=i>>1,n=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,s=r?0:M-1,u=r?1:-1,l=0>o||0===o&&0>1/o?1:0;for(o=Math.abs(o),isNaN(o)||o===1/0?(w=isNaN(o)?1:0,p=i):(p=Math.floor(Math.log(o)/Math.LN2),o*(f=Math.pow(2,-p))<1&&(p--,f*=2),o+=p+N>=1?n/f:n*Math.pow(2,1-N),o*f>=2&&(p++,f/=2),p+N>=i?(w=0,p=i):p+N>=1?(w=(o*f-1)*Math.pow(2,h),p+=N):(w=o*Math.pow(2,N-1)*Math.pow(2,h),p=0));h>=8;a[t+s]=255&w,s+=u,w/=256,h-=8);for(p=p<<h|w,e+=h;e>0;a[t+s]=255&p,s+=u,p/=256,e-=8);a[t+s-u]|=128*l};

},{}],15:[function(require,module,exports){
var isArray=Array.isArray,str=Object.prototype.toString;module.exports=isArray||function(r){return!!r&&"[object Array]"==str.call(r)};

},{}],16:[function(require,module,exports){
function cleanUpNextTick(){draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue()}function drainQueue(){if(!draining){var e=setTimeout(cleanUpNextTick);draining=!0;for(var n=queue.length;n;){for(currentQueue=queue,queue=[];++queueIndex<n;)currentQueue[queueIndex].run();queueIndex=-1,n=queue.length}currentQueue=null,draining=!1,clearTimeout(e)}}function Item(e,n){this.fun=e,this.array=n}function noop(){}var process=module.exports={},queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)n[r-1]=arguments[r];queue.push(new Item(e,n)),draining||setTimeout(drainQueue,0)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};

},{}],17:[function(require,module,exports){
function useColors(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function formatArgs(){var o=arguments,e=this.useColors;if(o[0]=(e?"%c":"")+this.namespace+(e?" %c":" ")+o[0]+(e?"%c ":" ")+"+"+exports.humanize(this.diff),!e)return o;var r="color: "+this.color;o=[o[0],r,"color: inherit"].concat(Array.prototype.slice.call(o,1));var t=0,s=0;return o[0].replace(/%[a-z%]/g,function(o){"%%"!==o&&(t++,"%c"===o&&(s=t))}),o.splice(s,0,r),o}function log(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(o){try{null==o?exports.storage.removeItem("debug"):exports.storage.debug=o}catch(e){}}function load(){var o;try{o=exports.storage.debug}catch(e){}return o}function localstorage(){try{return window.localStorage}catch(o){}}exports=module.exports=require("./debug"),exports.log=log,exports.formatArgs=formatArgs,exports.save=save,exports.load=load,exports.useColors=useColors,exports.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:localstorage(),exports.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],exports.formatters.j=function(o){return JSON.stringify(o)},exports.enable(load());

},{"./debug":18}],18:[function(require,module,exports){
function selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(e){function r(){}function o(){var e=o,r=+new Date,s=r-(prevTime||r);e.diff=s,e.prev=prevTime,e.curr=r,prevTime=r,null==e.useColors&&(e.useColors=exports.useColors()),null==e.color&&e.useColors&&(e.color=selectColor());var t=Array.prototype.slice.call(arguments);t[0]=exports.coerce(t[0]),"string"!=typeof t[0]&&(t=["%o"].concat(t));var n=0;t[0]=t[0].replace(/%([a-z%])/g,function(r,o){if("%%"===r)return r;n++;var s=exports.formatters[o];if("function"==typeof s){var p=t[n];r=s.call(e,p),t.splice(n,1),n--}return r}),"function"==typeof exports.formatArgs&&(t=exports.formatArgs.apply(e,t));var p=o.log||exports.log||console.log.bind(console);p.apply(e,t)}r.enabled=!1,o.enabled=!0;var s=exports.enabled(e)?o:r;return s.namespace=e,s}function enable(e){exports.save(e);for(var r=(e||"").split(/[\s,]+/),o=r.length,s=0;o>s;s++)r[s]&&(e=r[s].replace(/\*/g,".*?"),"-"===e[0]?exports.skips.push(new RegExp("^"+e.substr(1)+"$")):exports.names.push(new RegExp("^"+e+"$")))}function disable(){exports.enable("")}function enabled(e){var r,o;for(r=0,o=exports.skips.length;o>r;r++)if(exports.skips[r].test(e))return!1;for(r=0,o=exports.names.length;o>r;r++)if(exports.names[r].test(e))return!0;return!1}function coerce(e){return e instanceof Error?e.stack||e.message:e}exports=module.exports=debug,exports.coerce=coerce,exports.disable=disable,exports.enable=enable,exports.enabled=enabled,exports.humanize=require("ms"),exports.names=[],exports.skips=[],exports.formatters={};var prevColor=0,prevTime;

},{"ms":19}],19:[function(require,module,exports){
function parse(e){if(e=""+e,!(e.length>1e4)){var a=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(a){var r=parseFloat(a[1]),c=(a[2]||"ms").toLowerCase();switch(c){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r}}}}function short(e){return e>=d?Math.round(e/d)+"d":e>=h?Math.round(e/h)+"h":e>=m?Math.round(e/m)+"m":e>=s?Math.round(e/s)+"s":e+"ms"}function long(e){return plural(e,d,"day")||plural(e,h,"hour")||plural(e,m,"minute")||plural(e,s,"second")||e+" ms"}function plural(s,e,a){return e>s?void 0:1.5*e>s?Math.floor(s/e)+" "+a:Math.ceil(s/e)+" "+a+"s"}var s=1e3,m=60*s,h=60*m,d=24*h,y=365.25*d;module.exports=function(s,e){return e=e||{},"string"==typeof s?parse(s):e["long"]?long(s):short(s)};

},{}],20:[function(require,module,exports){
!function(t){"use strict";var r,e=t.Base64,n="2.1.8";"undefined"!=typeof module&&module.exports&&(r=require("buffer").Buffer);var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=function(t){for(var r={},e=0,n=t.length;n>e;e++)r[t.charAt(e)]=e;return r}(o),u=String.fromCharCode,a=function(t){if(t.length<2){var r=t.charCodeAt(0);return 128>r?t:2048>r?u(192|r>>>6)+u(128|63&r):u(224|r>>>12&15)+u(128|r>>>6&63)+u(128|63&r)}var r=65536+1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320);return u(240|r>>>18&7)+u(128|r>>>12&63)+u(128|r>>>6&63)+u(128|63&r)},i=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,f=function(t){return t.replace(i,a)},h=function(t){var r=[0,2,1][t.length%3],e=t.charCodeAt(0)<<16|(t.length>1?t.charCodeAt(1):0)<<8|(t.length>2?t.charCodeAt(2):0),n=[o.charAt(e>>>18),o.charAt(e>>>12&63),r>=2?"=":o.charAt(e>>>6&63),r>=1?"=":o.charAt(63&e)];return n.join("")},d=t.btoa?function(r){return t.btoa(r)}:function(t){return t.replace(/[\s\S]{1,3}/g,h)},s=r?function(t){return(t.constructor===r.constructor?t:new r(t)).toString("base64")}:function(t){return d(f(t))},g=function(t,r){return r?s(String(t)).replace(/[+\/]/g,function(t){return"+"==t?"-":"_"}).replace(/=/g,""):s(String(t))},A=function(t){return g(t,!0)},l=new RegExp(["[À-ß][-¿]","[à-ï][-¿]{2}","[ð-÷][-¿]{3}"].join("|"),"g"),p=function(t){switch(t.length){case 4:var r=(7&t.charCodeAt(0))<<18|(63&t.charCodeAt(1))<<12|(63&t.charCodeAt(2))<<6|63&t.charCodeAt(3),e=r-65536;return u((e>>>10)+55296)+u((1023&e)+56320);case 3:return u((15&t.charCodeAt(0))<<12|(63&t.charCodeAt(1))<<6|63&t.charCodeAt(2));default:return u((31&t.charCodeAt(0))<<6|63&t.charCodeAt(1))}},C=function(t){return t.replace(l,p)},b=function(t){var r=t.length,e=r%4,n=(r>0?c[t.charAt(0)]<<18:0)|(r>1?c[t.charAt(1)]<<12:0)|(r>2?c[t.charAt(2)]<<6:0)|(r>3?c[t.charAt(3)]:0),o=[u(n>>>16),u(n>>>8&255),u(255&n)];return o.length-=[0,0,2,1][e],o.join("")},B=t.atob?function(r){return t.atob(r)}:function(t){return t.replace(/[\s\S]{1,4}/g,b)},S=r?function(t){return(t.constructor===r.constructor?t:new r(t,"base64")).toString()}:function(t){return C(B(t))},v=function(t){return S(String(t).replace(/[-_]/g,function(t){return"-"==t?"+":"/"}).replace(/[^A-Za-z0-9\+\/]/g,""))},y=function(){var r=t.Base64;return t.Base64=e,r};if(t.Base64={VERSION:n,atob:B,btoa:d,fromBase64:v,toBase64:g,utob:f,encode:g,encodeURI:A,btou:C,decode:v,noConflict:y},"function"==typeof Object.defineProperty){var j=function(t){return{value:t,enumerable:!1,writable:!0,configurable:!0}};t.Base64.extendString=function(){Object.defineProperty(String.prototype,"fromBase64",j(function(){return v(this)})),Object.defineProperty(String.prototype,"toBase64",j(function(t){return g(this,t)})),Object.defineProperty(String.prototype,"toBase64URI",j(function(){return g(this,!0)}))}}t.Meteor&&(Base64=t.Base64)}(this);

},{"buffer":12}],21:[function(require,module,exports){
"use strict";var yaml=require("./lib/js-yaml.js");module.exports=yaml;

},{"./lib/js-yaml.js":22}],22:[function(require,module,exports){
"use strict";function deprecated(e){return function(){throw new Error("Function "+e+" is deprecated and cannot be used.")}}var loader=require("./js-yaml/loader"),dumper=require("./js-yaml/dumper");module.exports.Type=require("./js-yaml/type"),module.exports.Schema=require("./js-yaml/schema"),module.exports.FAILSAFE_SCHEMA=require("./js-yaml/schema/failsafe"),module.exports.JSON_SCHEMA=require("./js-yaml/schema/json"),module.exports.CORE_SCHEMA=require("./js-yaml/schema/core"),module.exports.DEFAULT_SAFE_SCHEMA=require("./js-yaml/schema/default_safe"),module.exports.DEFAULT_FULL_SCHEMA=require("./js-yaml/schema/default_full"),module.exports.load=loader.load,module.exports.loadAll=loader.loadAll,module.exports.safeLoad=loader.safeLoad,module.exports.safeLoadAll=loader.safeLoadAll,module.exports.dump=dumper.dump,module.exports.safeDump=dumper.safeDump,module.exports.YAMLException=require("./js-yaml/exception"),module.exports.MINIMAL_SCHEMA=require("./js-yaml/schema/failsafe"),module.exports.SAFE_SCHEMA=require("./js-yaml/schema/default_safe"),module.exports.DEFAULT_SCHEMA=require("./js-yaml/schema/default_full"),module.exports.scan=deprecated("scan"),module.exports.parse=deprecated("parse"),module.exports.compose=deprecated("compose"),module.exports.addConstructor=deprecated("addConstructor");

},{"./js-yaml/dumper":24,"./js-yaml/exception":25,"./js-yaml/loader":26,"./js-yaml/schema":28,"./js-yaml/schema/core":29,"./js-yaml/schema/default_full":30,"./js-yaml/schema/default_safe":31,"./js-yaml/schema/failsafe":32,"./js-yaml/schema/json":33,"./js-yaml/type":34}],23:[function(require,module,exports){
"use strict";function isNothing(e){return"undefined"==typeof e||null===e}function isObject(e){return"object"==typeof e&&null!==e}function toArray(e){return Array.isArray(e)?e:isNothing(e)?[]:[e]}function extend(e,t){var r,o,n,i;if(t)for(i=Object.keys(t),r=0,o=i.length;o>r;r+=1)n=i[r],e[n]=t[n];return e}function repeat(e,t){var r,o="";for(r=0;t>r;r+=1)o+=e;return o}function isNegativeZero(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e}module.exports.isNothing=isNothing,module.exports.isObject=isObject,module.exports.toArray=toArray,module.exports.repeat=repeat,module.exports.isNegativeZero=isNegativeZero,module.exports.extend=extend;

},{}],24:[function(require,module,exports){
"use strict";function compileStyleMap(e,t){var n,i,r,E,o,s,c;if(null===t)return{};for(n={},i=Object.keys(t),r=0,E=i.length;E>r;r+=1)o=i[r],s=String(t[o]),"!!"===o.slice(0,2)&&(o="tag:yaml.org,2002:"+o.slice(2)),c=e.compiledTypeMap[o],c&&_hasOwnProperty.call(c.styleAliases,s)&&(s=c.styleAliases[s]),n[o]=s;return n}function encodeHex(e){var t,n,i;if(t=e.toString(16).toUpperCase(),255>=e)n="x",i=2;else if(65535>=e)n="u",i=4;else{if(!(4294967295>=e))throw new YAMLException("code point within a string may not be greater than 0xFFFFFFFF");n="U",i=8}return"\\"+n+common.repeat("0",i-t.length)+t}function State(e){this.schema=e.schema||DEFAULT_FULL_SCHEMA,this.indent=Math.max(1,e.indent||2),this.skipInvalid=e.skipInvalid||!1,this.flowLevel=common.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=compileStyleMap(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function indentString(e,t){for(var n,i=common.repeat(" ",t),r=0,E=-1,o="",s=e.length;s>r;)E=e.indexOf("\n",r),-1===E?(n=e.slice(r),r=s):(n=e.slice(r,E+1),r=E+1),n.length&&"\n"!==n&&(o+=i),o+=n;return o}function generateNextLine(e,t){return"\n"+common.repeat(" ",e.indent*t)}function testImplicitResolving(e,t){var n,i,r;for(n=0,i=e.implicitTypes.length;i>n;n+=1)if(r=e.implicitTypes[n],r.resolve(t))return!0;return!1}function StringBuilder(e){this.source=e,this.result="",this.checkpoint=0}function writeScalar(e,t,n){var i,r,E,o,s,c,p,l,u,A,a,C,_,d,S,f,h,R,m,g,N;if(0===t.length)return void(e.dump="''");if(-1!==DEPRECATED_BOOLEANS_SYNTAX.indexOf(t))return void(e.dump="'"+t+"'");for(i=!0,r=t.length?t.charCodeAt(0):0,E=CHAR_SPACE===r||CHAR_SPACE===t.charCodeAt(t.length-1),(CHAR_MINUS===r||CHAR_QUESTION===r||CHAR_COMMERCIAL_AT===r||CHAR_GRAVE_ACCENT===r)&&(i=!1),E?(i=!1,o=!1,s=!1):(o=!0,s=!0),c=!0,p=new StringBuilder(t),l=!1,u=0,A=0,a=e.indent*n,C=80,40>a?C-=a:C=40,d=0;d<t.length;d++){if(_=t.charCodeAt(d),i){if(simpleChar(_))continue;i=!1}c&&_===CHAR_SINGLE_QUOTE&&(c=!1),S=ESCAPE_SEQUENCES[_],f=needsHexEscape(_),(S||f)&&(_!==CHAR_LINE_FEED&&_!==CHAR_DOUBLE_QUOTE&&_!==CHAR_SINGLE_QUOTE?(o=!1,s=!1):_===CHAR_LINE_FEED&&(l=!0,c=!1,d>0&&(h=t.charCodeAt(d-1),h===CHAR_SPACE&&(s=!1,o=!1)),o&&(R=d-u,u=d,R>A&&(A=R))),_!==CHAR_DOUBLE_QUOTE&&(c=!1),p.takeUpTo(d),p.escapeChar())}if(i&&testImplicitResolving(e,t)&&(i=!1),m="",(o||s)&&(g=0,t.charCodeAt(t.length-1)===CHAR_LINE_FEED&&(g+=1,t.charCodeAt(t.length-2)===CHAR_LINE_FEED&&(g+=1)),0===g?m="-":2===g&&(m="+")),s&&C>A&&(o=!1),l||(s=!1),i)e.dump=t;else if(c)e.dump="'"+t+"'";else if(o)N=fold(t,C),e.dump=">"+m+"\n"+indentString(N,a);else if(s)m||(t=t.replace(/\n$/,"")),e.dump="|"+m+"\n"+indentString(t,a);else{if(!p)throw new Error("Failed to dump scalar value");p.finish(),e.dump='"'+p.result+'"'}}function fold(e,t){var n,i="",r=0,E=e.length,o=/\n+$/.exec(e);for(o&&(E=o.index+1);E>r;)n=e.indexOf("\n",r),n>E||-1===n?(i&&(i+="\n\n"),i+=foldLine(e.slice(r,E),t),r=E):(i&&(i+="\n\n"),i+=foldLine(e.slice(r,n),t),r=n+1);return o&&"\n"!==o[0]&&(i+=o[0]),i}function foldLine(e,t){if(""===e)return e;for(var n,i,r,E=/[^\s] [^\s]/g,o="",s=0,c=0,p=E.exec(e);p;)n=p.index,n-c>t&&(i=s!==c?s:n,o&&(o+="\n"),r=e.slice(c,i),o+=r,c=i+1),s=n+1,p=E.exec(e);return o&&(o+="\n"),o+=c!==s&&e.length-c>t?e.slice(c,s)+"\n"+e.slice(s+1):e.slice(c)}function simpleChar(e){return CHAR_TAB!==e&&CHAR_LINE_FEED!==e&&CHAR_CARRIAGE_RETURN!==e&&CHAR_COMMA!==e&&CHAR_LEFT_SQUARE_BRACKET!==e&&CHAR_RIGHT_SQUARE_BRACKET!==e&&CHAR_LEFT_CURLY_BRACKET!==e&&CHAR_RIGHT_CURLY_BRACKET!==e&&CHAR_SHARP!==e&&CHAR_AMPERSAND!==e&&CHAR_ASTERISK!==e&&CHAR_EXCLAMATION!==e&&CHAR_VERTICAL_LINE!==e&&CHAR_GREATER_THAN!==e&&CHAR_SINGLE_QUOTE!==e&&CHAR_DOUBLE_QUOTE!==e&&CHAR_PERCENT!==e&&CHAR_COLON!==e&&!ESCAPE_SEQUENCES[e]&&!needsHexEscape(e)}function needsHexEscape(e){return!(e>=32&&126>=e||133===e||e>=160&&55295>=e||e>=57344&&65533>=e||e>=65536&&1114111>=e)}function writeFlowSequence(e,t,n){var i,r,E="",o=e.tag;for(i=0,r=n.length;r>i;i+=1)writeNode(e,t,n[i],!1,!1)&&(0!==i&&(E+=", "),E+=e.dump);e.tag=o,e.dump="["+E+"]"}function writeBlockSequence(e,t,n,i){var r,E,o="",s=e.tag;for(r=0,E=n.length;E>r;r+=1)writeNode(e,t+1,n[r],!0,!0)&&(i&&0===r||(o+=generateNextLine(e,t)),o+="- "+e.dump);e.tag=s,e.dump=o||"[]"}function writeFlowMapping(e,t,n){var i,r,E,o,s,c="",p=e.tag,l=Object.keys(n);for(i=0,r=l.length;r>i;i+=1)s="",0!==i&&(s+=", "),E=l[i],o=n[E],writeNode(e,t,E,!1,!1)&&(e.dump.length>1024&&(s+="? "),s+=e.dump+": ",writeNode(e,t,o,!1,!1)&&(s+=e.dump,c+=s));e.tag=p,e.dump="{"+c+"}"}function writeBlockMapping(e,t,n,i){var r,E,o,s,c,p,l="",u=e.tag,A=Object.keys(n);if(e.sortKeys===!0)A.sort();else if("function"==typeof e.sortKeys)A.sort(e.sortKeys);else if(e.sortKeys)throw new YAMLException("sortKeys must be a boolean or a function");for(r=0,E=A.length;E>r;r+=1)p="",i&&0===r||(p+=generateNextLine(e,t)),o=A[r],s=n[o],writeNode(e,t+1,o,!0,!0)&&(c=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024,c&&(p+=e.dump&&CHAR_LINE_FEED===e.dump.charCodeAt(0)?"?":"? "),p+=e.dump,c&&(p+=generateNextLine(e,t)),writeNode(e,t+1,s,!0,c)&&(p+=e.dump&&CHAR_LINE_FEED===e.dump.charCodeAt(0)?":":": ",p+=e.dump,l+=p));e.tag=u,e.dump=l||"{}"}function detectType(e,t,n){var i,r,E,o,s,c;for(r=n?e.explicitTypes:e.implicitTypes,E=0,o=r.length;o>E;E+=1)if(s=r[E],(s.instanceOf||s.predicate)&&(!s.instanceOf||"object"==typeof t&&t instanceof s.instanceOf)&&(!s.predicate||s.predicate(t))){if(e.tag=n?s.tag:"?",s.represent){if(c=e.styleMap[s.tag]||s.defaultStyle,"[object Function]"===_toString.call(s.represent))i=s.represent(t,c);else{if(!_hasOwnProperty.call(s.represent,c))throw new YAMLException("!<"+s.tag+'> tag resolver accepts not "'+c+'" style');i=s.represent[c](t,c)}e.dump=i}return!0}return!1}function writeNode(e,t,n,i,r){e.tag=null,e.dump=n,detectType(e,n,!1)||detectType(e,n,!0);var E=_toString.call(e.dump);i&&(i=0>e.flowLevel||e.flowLevel>t),(null!==e.tag&&"?"!==e.tag||2!==e.indent&&t>0)&&(r=!1);var o,s,c="[object Object]"===E||"[object Array]"===E;if(c&&(o=e.duplicates.indexOf(n),s=-1!==o),s&&e.usedDuplicates[o])e.dump="*ref_"+o;else{if(c&&s&&!e.usedDuplicates[o]&&(e.usedDuplicates[o]=!0),"[object Object]"===E)i&&0!==Object.keys(e.dump).length?(writeBlockMapping(e,t,e.dump,r),s&&(e.dump="&ref_"+o+(0===t?"\n":"")+e.dump)):(writeFlowMapping(e,t,e.dump),s&&(e.dump="&ref_"+o+" "+e.dump));else if("[object Array]"===E)i&&0!==e.dump.length?(writeBlockSequence(e,t,e.dump,r),s&&(e.dump="&ref_"+o+(0===t?"\n":"")+e.dump)):(writeFlowSequence(e,t,e.dump),s&&(e.dump="&ref_"+o+" "+e.dump));else{if("[object String]"!==E){if(e.skipInvalid)return!1;throw new YAMLException("unacceptable kind of an object to dump "+E)}"?"!==e.tag&&writeScalar(e,e.dump,t)}null!==e.tag&&"?"!==e.tag&&(e.dump="!<"+e.tag+"> "+e.dump)}return!0}function getDuplicateReferences(e,t){var n,i,r=[],E=[];for(inspectNode(e,r,E),n=0,i=E.length;i>n;n+=1)t.duplicates.push(r[E[n]]);t.usedDuplicates=new Array(i)}function inspectNode(e,t,n){var i,r,E;_toString.call(e);if(null!==e&&"object"==typeof e)if(r=t.indexOf(e),-1!==r)-1===n.indexOf(r)&&n.push(r);else if(t.push(e),Array.isArray(e))for(r=0,E=e.length;E>r;r+=1)inspectNode(e[r],t,n);else for(i=Object.keys(e),r=0,E=i.length;E>r;r+=1)inspectNode(e[i[r]],t,n)}function dump(e,t){t=t||{};var n=new State(t);return getDuplicateReferences(e,n),writeNode(n,0,e,!0,!0)?n.dump+"\n":""}function safeDump(e,t){return dump(e,common.extend({schema:DEFAULT_SAFE_SCHEMA},t))}var common=require("./common"),YAMLException=require("./exception"),DEFAULT_FULL_SCHEMA=require("./schema/default_full"),DEFAULT_SAFE_SCHEMA=require("./schema/default_safe"),_toString=Object.prototype.toString,_hasOwnProperty=Object.prototype.hasOwnProperty,CHAR_TAB=9,CHAR_LINE_FEED=10,CHAR_CARRIAGE_RETURN=13,CHAR_SPACE=32,CHAR_EXCLAMATION=33,CHAR_DOUBLE_QUOTE=34,CHAR_SHARP=35,CHAR_PERCENT=37,CHAR_AMPERSAND=38,CHAR_SINGLE_QUOTE=39,CHAR_ASTERISK=42,CHAR_COMMA=44,CHAR_MINUS=45,CHAR_COLON=58,CHAR_GREATER_THAN=62,CHAR_QUESTION=63,CHAR_COMMERCIAL_AT=64,CHAR_LEFT_SQUARE_BRACKET=91,CHAR_RIGHT_SQUARE_BRACKET=93,CHAR_GRAVE_ACCENT=96,CHAR_LEFT_CURLY_BRACKET=123,CHAR_VERTICAL_LINE=124,CHAR_RIGHT_CURLY_BRACKET=125,ESCAPE_SEQUENCES={};ESCAPE_SEQUENCES[0]="\\0",ESCAPE_SEQUENCES[7]="\\a",ESCAPE_SEQUENCES[8]="\\b",ESCAPE_SEQUENCES[9]="\\t",ESCAPE_SEQUENCES[10]="\\n",ESCAPE_SEQUENCES[11]="\\v",ESCAPE_SEQUENCES[12]="\\f",ESCAPE_SEQUENCES[13]="\\r",ESCAPE_SEQUENCES[27]="\\e",ESCAPE_SEQUENCES[34]='\\"',ESCAPE_SEQUENCES[92]="\\\\",ESCAPE_SEQUENCES[133]="\\N",ESCAPE_SEQUENCES[160]="\\_",ESCAPE_SEQUENCES[8232]="\\L",ESCAPE_SEQUENCES[8233]="\\P";var DEPRECATED_BOOLEANS_SYNTAX=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];StringBuilder.prototype.takeUpTo=function(e){var t;if(e<this.checkpoint)throw t=new Error("position should be > checkpoint"),t.position=e,t.checkpoint=this.checkpoint,t;return this.result+=this.source.slice(this.checkpoint,e),this.checkpoint=e,this},StringBuilder.prototype.escapeChar=function(){var e,t;return e=this.source.charCodeAt(this.checkpoint),t=ESCAPE_SEQUENCES[e]||encodeHex(e),this.result+=t,this.checkpoint+=1,this},StringBuilder.prototype.finish=function(){this.source.length>this.checkpoint&&this.takeUpTo(this.source.length)},module.exports.dump=dump,module.exports.safeDump=safeDump;

},{"./common":23,"./exception":25,"./schema/default_full":30,"./schema/default_safe":31}],25:[function(require,module,exports){
"use strict";function YAMLException(t,n){this.name="YAMLException",this.reason=t,this.mark=n,this.message=this.toString(!1)}YAMLException.prototype.toString=function(t){var n;return n="JS-YAML: "+(this.reason||"(unknown reason)"),!t&&this.mark&&(n+=" "+this.mark.toString()),n},module.exports=YAMLException;

},{}],26:[function(require,module,exports){
"use strict";function is_EOL(e){return 10===e||13===e}function is_WHITE_SPACE(e){return 9===e||32===e}function is_WS_OR_EOL(e){return 9===e||32===e||10===e||13===e}function is_FLOW_INDICATOR(e){return 44===e||91===e||93===e||123===e||125===e}function fromHexCode(e){var t;return e>=48&&57>=e?e-48:(t=32|e,t>=97&&102>=t?t-97+10:-1)}function escapedHexLen(e){return 120===e?2:117===e?4:85===e?8:0}function fromDecimalCode(e){return e>=48&&57>=e?e-48:-1}function simpleEscapeSequence(e){return 48===e?"\x00":97===e?"":98===e?"\b":116===e?"	":9===e?"	":110===e?"\n":118===e?"":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function charFromCodepoint(e){return 65535>=e?String.fromCharCode(e):String.fromCharCode((e-65536>>10)+55296,(e-65536&1023)+56320)}function State(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||DEFAULT_FULL_SCHEMA,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.documents=[]}function generateError(e,t){return new YAMLException(t,new Mark(e.filename,e.input,e.position,e.line,e.position-e.lineStart))}function throwError(e,t){throw generateError(e,t)}function throwWarning(e,t){var n=generateError(e,t);if(!e.onWarning)throw n;e.onWarning.call(null,n)}function captureSegment(e,t,n,i){var o,r,a,p;if(n>t){if(p=e.input.slice(t,n),i)for(o=0,r=p.length;r>o;o+=1)a=p.charCodeAt(o),9===a||a>=32&&1114111>=a||throwError(e,"expected valid JSON character");e.result+=p}}function mergeMappings(e,t,n){var i,o,r,a;for(common.isObject(n)||throwError(e,"cannot merge mappings; the provided source object is unacceptable"),i=Object.keys(n),r=0,a=i.length;a>r;r+=1)o=i[r],_hasOwnProperty.call(t,o)||(t[o]=n[o])}function storeMappingPair(e,t,n,i,o){var r,a;if(i=String(i),null===t&&(t={}),"tag:yaml.org,2002:merge"===n)if(Array.isArray(o))for(r=0,a=o.length;a>r;r+=1)mergeMappings(e,t,o[r]);else mergeMappings(e,t,o);else t[i]=o;return t}function readLineBreak(e){var t;t=e.input.charCodeAt(e.position),10===t?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):throwError(e,"a line break is expected"),e.line+=1,e.lineStart=e.position}function skipSeparationSpace(e,t,n){for(var i=0,o=e.input.charCodeAt(e.position);0!==o;){for(;is_WHITE_SPACE(o);)o=e.input.charCodeAt(++e.position);if(t&&35===o)do o=e.input.charCodeAt(++e.position);while(10!==o&&13!==o&&0!==o);if(!is_EOL(o))break;for(readLineBreak(e),o=e.input.charCodeAt(e.position),i++,e.lineIndent=0;32===o;)e.lineIndent++,o=e.input.charCodeAt(++e.position)}return-1!==n&&0!==i&&e.lineIndent<n&&throwWarning(e,"deficient indentation"),i}function testDocumentSeparator(e){var t,n=e.position;return t=e.input.charCodeAt(n),45!==t&&46!==t||e.input.charCodeAt(n+1)!==t||e.input.charCodeAt(n+2)!==t||(n+=3,t=e.input.charCodeAt(n),0!==t&&!is_WS_OR_EOL(t))?!1:!0}function writeFoldedLines(e,t){1===t?e.result+=" ":t>1&&(e.result+=common.repeat("\n",t-1))}function readPlainScalar(e,t,n){var i,o,r,a,p,s,c,l,u,d=e.kind,h=e.result;if(u=e.input.charCodeAt(e.position),is_WS_OR_EOL(u)||is_FLOW_INDICATOR(u)||35===u||38===u||42===u||33===u||124===u||62===u||39===u||34===u||37===u||64===u||96===u)return!1;if((63===u||45===u)&&(o=e.input.charCodeAt(e.position+1),is_WS_OR_EOL(o)||n&&is_FLOW_INDICATOR(o)))return!1;for(e.kind="scalar",e.result="",r=a=e.position,p=!1;0!==u;){if(58===u){if(o=e.input.charCodeAt(e.position+1),is_WS_OR_EOL(o)||n&&is_FLOW_INDICATOR(o))break}else if(35===u){if(i=e.input.charCodeAt(e.position-1),is_WS_OR_EOL(i))break}else{if(e.position===e.lineStart&&testDocumentSeparator(e)||n&&is_FLOW_INDICATOR(u))break;if(is_EOL(u)){if(s=e.line,c=e.lineStart,l=e.lineIndent,skipSeparationSpace(e,!1,-1),e.lineIndent>=t){p=!0,u=e.input.charCodeAt(e.position);continue}e.position=a,e.line=s,e.lineStart=c,e.lineIndent=l;break}}p&&(captureSegment(e,r,a,!1),writeFoldedLines(e,e.line-s),r=a=e.position,p=!1),is_WHITE_SPACE(u)||(a=e.position+1),u=e.input.charCodeAt(++e.position)}return captureSegment(e,r,a,!1),e.result?!0:(e.kind=d,e.result=h,!1)}function readSingleQuotedScalar(e,t){var n,i,o;if(n=e.input.charCodeAt(e.position),39!==n)return!1;for(e.kind="scalar",e.result="",e.position++,i=o=e.position;0!==(n=e.input.charCodeAt(e.position));)if(39===n){if(captureSegment(e,i,e.position,!0),n=e.input.charCodeAt(++e.position),39!==n)return!0;i=o=e.position,e.position++}else is_EOL(n)?(captureSegment(e,i,o,!0),writeFoldedLines(e,skipSeparationSpace(e,!1,t)),i=o=e.position):e.position===e.lineStart&&testDocumentSeparator(e)?throwError(e,"unexpected end of the document within a single quoted scalar"):(e.position++,o=e.position);throwError(e,"unexpected end of the stream within a single quoted scalar")}function readDoubleQuotedScalar(e,t){var n,i,o,r,a,p;if(p=e.input.charCodeAt(e.position),34!==p)return!1;for(e.kind="scalar",e.result="",e.position++,n=i=e.position;0!==(p=e.input.charCodeAt(e.position));){if(34===p)return captureSegment(e,n,e.position,!0),e.position++,!0;if(92===p){if(captureSegment(e,n,e.position,!0),p=e.input.charCodeAt(++e.position),is_EOL(p))skipSeparationSpace(e,!1,t);else if(256>p&&simpleEscapeCheck[p])e.result+=simpleEscapeMap[p],e.position++;else if((a=escapedHexLen(p))>0){for(o=a,r=0;o>0;o--)p=e.input.charCodeAt(++e.position),(a=fromHexCode(p))>=0?r=(r<<4)+a:throwError(e,"expected hexadecimal character");e.result+=charFromCodepoint(r),e.position++}else throwError(e,"unknown escape sequence");n=i=e.position}else is_EOL(p)?(captureSegment(e,n,i,!0),writeFoldedLines(e,skipSeparationSpace(e,!1,t)),n=i=e.position):e.position===e.lineStart&&testDocumentSeparator(e)?throwError(e,"unexpected end of the document within a double quoted scalar"):(e.position++,i=e.position)}throwError(e,"unexpected end of the stream within a double quoted scalar")}function readFlowCollection(e,t){var n,i,o,r,a,p,s,c,l,u,d,h=!0,f=e.tag,_=e.anchor;if(d=e.input.charCodeAt(e.position),91===d)r=93,s=!1,i=[];else{if(123!==d)return!1;r=125,s=!0,i={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=i),d=e.input.charCodeAt(++e.position);0!==d;){if(skipSeparationSpace(e,!0,t),d=e.input.charCodeAt(e.position),d===r)return e.position++,e.tag=f,e.anchor=_,e.kind=s?"mapping":"sequence",e.result=i,!0;h||throwError(e,"missed comma between flow collection entries"),l=c=u=null,a=p=!1,63===d&&(o=e.input.charCodeAt(e.position+1),is_WS_OR_EOL(o)&&(a=p=!0,e.position++,skipSeparationSpace(e,!0,t))),n=e.line,composeNode(e,t,CONTEXT_FLOW_IN,!1,!0),l=e.tag,c=e.result,skipSeparationSpace(e,!0,t),d=e.input.charCodeAt(e.position),!p&&e.line!==n||58!==d||(a=!0,d=e.input.charCodeAt(++e.position),skipSeparationSpace(e,!0,t),composeNode(e,t,CONTEXT_FLOW_IN,!1,!0),u=e.result),s?storeMappingPair(e,i,l,c,u):i.push(a?storeMappingPair(e,null,l,c,u):c),skipSeparationSpace(e,!0,t),d=e.input.charCodeAt(e.position),44===d?(h=!0,d=e.input.charCodeAt(++e.position)):h=!1}throwError(e,"unexpected end of the stream within a flow collection")}function readBlockScalar(e,t){var n,i,o,r,a=CHOMPING_CLIP,p=!1,s=t,c=0,l=!1;if(r=e.input.charCodeAt(e.position),124===r)i=!1;else{if(62!==r)return!1;i=!0}for(e.kind="scalar",e.result="";0!==r;)if(r=e.input.charCodeAt(++e.position),43===r||45===r)CHOMPING_CLIP===a?a=43===r?CHOMPING_KEEP:CHOMPING_STRIP:throwError(e,"repeat of a chomping mode identifier");else{if(!((o=fromDecimalCode(r))>=0))break;0===o?throwError(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):p?throwError(e,"repeat of an indentation width identifier"):(s=t+o-1,p=!0)}if(is_WHITE_SPACE(r)){do r=e.input.charCodeAt(++e.position);while(is_WHITE_SPACE(r));if(35===r)do r=e.input.charCodeAt(++e.position);while(!is_EOL(r)&&0!==r)}for(;0!==r;){for(readLineBreak(e),e.lineIndent=0,r=e.input.charCodeAt(e.position);(!p||e.lineIndent<s)&&32===r;)e.lineIndent++,r=e.input.charCodeAt(++e.position);if(!p&&e.lineIndent>s&&(s=e.lineIndent),is_EOL(r))c++;else{if(e.lineIndent<s){a===CHOMPING_KEEP?e.result+=common.repeat("\n",c):a===CHOMPING_CLIP&&p&&(e.result+="\n");break}for(i?is_WHITE_SPACE(r)?(l=!0,e.result+=common.repeat("\n",c+1)):l?(l=!1,e.result+=common.repeat("\n",c+1)):0===c?p&&(e.result+=" "):e.result+=common.repeat("\n",c):p&&(e.result+=common.repeat("\n",c+1)),p=!0,c=0,n=e.position;!is_EOL(r)&&0!==r;)r=e.input.charCodeAt(++e.position);captureSegment(e,n,e.position,!1)}}return!0}function readBlockSequence(e,t){var n,i,o,r=e.tag,a=e.anchor,p=[],s=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=p),o=e.input.charCodeAt(e.position);0!==o&&45===o&&(i=e.input.charCodeAt(e.position+1),is_WS_OR_EOL(i));)if(s=!0,e.position++,skipSeparationSpace(e,!0,-1)&&e.lineIndent<=t)p.push(null),o=e.input.charCodeAt(e.position);else if(n=e.line,composeNode(e,t,CONTEXT_BLOCK_IN,!1,!0),p.push(e.result),skipSeparationSpace(e,!0,-1),o=e.input.charCodeAt(e.position),(e.line===n||e.lineIndent>t)&&0!==o)throwError(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return s?(e.tag=r,e.anchor=a,e.kind="sequence",e.result=p,!0):!1}function readBlockMapping(e,t,n){var i,o,r,a,p=e.tag,s=e.anchor,c={},l=null,u=null,d=null,h=!1,f=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=c),a=e.input.charCodeAt(e.position);0!==a;){if(i=e.input.charCodeAt(e.position+1),r=e.line,63!==a&&58!==a||!is_WS_OR_EOL(i)){if(!composeNode(e,n,CONTEXT_FLOW_OUT,!1,!0))break;if(e.line===r){for(a=e.input.charCodeAt(e.position);is_WHITE_SPACE(a);)a=e.input.charCodeAt(++e.position);if(58===a)a=e.input.charCodeAt(++e.position),is_WS_OR_EOL(a)||throwError(e,"a whitespace character is expected after the key-value separator within a block mapping"),h&&(storeMappingPair(e,c,l,u,null),l=u=d=null),f=!0,h=!1,o=!1,l=e.tag,u=e.result;else{if(!f)return e.tag=p,e.anchor=s,!0;throwError(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!f)return e.tag=p,e.anchor=s,!0;throwError(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===a?(h&&(storeMappingPair(e,c,l,u,null),l=u=d=null),f=!0,h=!0,o=!0):h?(h=!1,o=!0):throwError(e,"incomplete explicit mapping pair; a key node is missed"),e.position+=1,a=i;if((e.line===r||e.lineIndent>t)&&(composeNode(e,t,CONTEXT_BLOCK_OUT,!0,o)&&(h?u=e.result:d=e.result),h||(storeMappingPair(e,c,l,u,d),l=u=d=null),skipSeparationSpace(e,!0,-1),a=e.input.charCodeAt(e.position)),e.lineIndent>t&&0!==a)throwError(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return h&&storeMappingPair(e,c,l,u,null),f&&(e.tag=p,e.anchor=s,e.kind="mapping",e.result=c),f}function readTagProperty(e){var t,n,i,o,r=!1,a=!1;if(o=e.input.charCodeAt(e.position),33!==o)return!1;if(null!==e.tag&&throwError(e,"duplication of a tag property"),o=e.input.charCodeAt(++e.position),60===o?(r=!0,o=e.input.charCodeAt(++e.position)):33===o?(a=!0,n="!!",o=e.input.charCodeAt(++e.position)):n="!",t=e.position,r){do o=e.input.charCodeAt(++e.position);while(0!==o&&62!==o);e.position<e.length?(i=e.input.slice(t,e.position),o=e.input.charCodeAt(++e.position)):throwError(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==o&&!is_WS_OR_EOL(o);)33===o&&(a?throwError(e,"tag suffix cannot contain exclamation marks"):(n=e.input.slice(t-1,e.position+1),PATTERN_TAG_HANDLE.test(n)||throwError(e,"named tag handle cannot contain such characters"),a=!0,t=e.position+1)),o=e.input.charCodeAt(++e.position);i=e.input.slice(t,e.position),PATTERN_FLOW_INDICATORS.test(i)&&throwError(e,"tag suffix cannot contain flow indicator characters")}return i&&!PATTERN_TAG_URI.test(i)&&throwError(e,"tag name cannot contain such characters: "+i),r?e.tag=i:_hasOwnProperty.call(e.tagMap,n)?e.tag=e.tagMap[n]+i:"!"===n?e.tag="!"+i:"!!"===n?e.tag="tag:yaml.org,2002:"+i:throwError(e,'undeclared tag handle "'+n+'"'),!0}function readAnchorProperty(e){var t,n;if(n=e.input.charCodeAt(e.position),38!==n)return!1;for(null!==e.anchor&&throwError(e,"duplication of an anchor property"),n=e.input.charCodeAt(++e.position),t=e.position;0!==n&&!is_WS_OR_EOL(n)&&!is_FLOW_INDICATOR(n);)n=e.input.charCodeAt(++e.position);return e.position===t&&throwError(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function readAlias(e){var t,n,i;e.length,e.input;if(i=e.input.charCodeAt(e.position),42!==i)return!1;for(i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!is_WS_OR_EOL(i)&&!is_FLOW_INDICATOR(i);)i=e.input.charCodeAt(++e.position);return e.position===t&&throwError(e,"name of an alias node must contain at least one character"),n=e.input.slice(t,e.position),e.anchorMap.hasOwnProperty(n)||throwError(e,'unidentified alias "'+n+'"'),e.result=e.anchorMap[n],skipSeparationSpace(e,!0,-1),!0}function composeNode(e,t,n,i,o){var r,a,p,s,c,l,u,d,h=1,f=!1,_=!1;if(e.tag=null,e.anchor=null,e.kind=null,e.result=null,r=a=p=CONTEXT_BLOCK_OUT===n||CONTEXT_BLOCK_IN===n,i&&skipSeparationSpace(e,!0,-1)&&(f=!0,e.lineIndent>t?h=1:e.lineIndent===t?h=0:e.lineIndent<t&&(h=-1)),1===h)for(;readTagProperty(e)||readAnchorProperty(e);)skipSeparationSpace(e,!0,-1)?(f=!0,p=r,e.lineIndent>t?h=1:e.lineIndent===t?h=0:e.lineIndent<t&&(h=-1)):p=!1;if(p&&(p=f||o),(1===h||CONTEXT_BLOCK_OUT===n)&&(u=CONTEXT_FLOW_IN===n||CONTEXT_FLOW_OUT===n?t:t+1,d=e.position-e.lineStart,1===h?p&&(readBlockSequence(e,d)||readBlockMapping(e,d,u))||readFlowCollection(e,u)?_=!0:(a&&readBlockScalar(e,u)||readSingleQuotedScalar(e,u)||readDoubleQuotedScalar(e,u)?_=!0:readAlias(e)?(_=!0,(null!==e.tag||null!==e.anchor)&&throwError(e,"alias node should not have any properties")):readPlainScalar(e,u,CONTEXT_FLOW_IN===n)&&(_=!0,null===e.tag&&(e.tag="?")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===h&&(_=p&&readBlockSequence(e,d))),null!==e.tag&&"!"!==e.tag)if("?"===e.tag){for(s=0,c=e.implicitTypes.length;c>s;s+=1)if(l=e.implicitTypes[s],l.resolve(e.result)){e.result=l.construct(e.result),e.tag=l.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else _hasOwnProperty.call(e.typeMap,e.tag)?(l=e.typeMap[e.tag],null!==e.result&&l.kind!==e.kind&&throwError(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+l.kind+'", not "'+e.kind+'"'),l.resolve(e.result)?(e.result=l.construct(e.result),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):throwError(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")):throwWarning(e,"unknown tag !<"+e.tag+">");return null!==e.tag||null!==e.anchor||_}function readDocument(e){var t,n,i,o,r=e.position,a=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap={},e.anchorMap={};0!==(o=e.input.charCodeAt(e.position))&&(skipSeparationSpace(e,!0,-1),o=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==o));){for(a=!0,o=e.input.charCodeAt(++e.position),t=e.position;0!==o&&!is_WS_OR_EOL(o);)o=e.input.charCodeAt(++e.position);for(n=e.input.slice(t,e.position),i=[],n.length<1&&throwError(e,"directive name must not be less than one character in length");0!==o;){for(;is_WHITE_SPACE(o);)o=e.input.charCodeAt(++e.position);if(35===o){do o=e.input.charCodeAt(++e.position);while(0!==o&&!is_EOL(o));break}if(is_EOL(o))break;for(t=e.position;0!==o&&!is_WS_OR_EOL(o);)o=e.input.charCodeAt(++e.position);i.push(e.input.slice(t,e.position))}0!==o&&readLineBreak(e),_hasOwnProperty.call(directiveHandlers,n)?directiveHandlers[n](e,n,i):throwWarning(e,'unknown document directive "'+n+'"')}return skipSeparationSpace(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,skipSeparationSpace(e,!0,-1)):a&&throwError(e,"directives end mark is expected"),composeNode(e,e.lineIndent-1,CONTEXT_BLOCK_OUT,!1,!0),skipSeparationSpace(e,!0,-1),e.checkLineBreaks&&PATTERN_NON_ASCII_LINE_BREAKS.test(e.input.slice(r,e.position))&&throwWarning(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&testDocumentSeparator(e)?void(46===e.input.charCodeAt(e.position)&&(e.position+=3,skipSeparationSpace(e,!0,-1))):void(e.position<e.length-1&&throwError(e,"end of the stream or a document separator is expected"))}function loadDocuments(e,t){e=String(e),t=t||{},0!==e.length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var n=new State(e,t);for(PATTERN_NON_PRINTABLE.test(n.input)&&throwError(n,"the stream contains non-printable characters"),n.input+="\x00";32===n.input.charCodeAt(n.position);)n.lineIndent+=1,n.position+=1;for(;n.position<n.length-1;)readDocument(n);return n.documents}function loadAll(e,t,n){var i,o,r=loadDocuments(e,n);for(i=0,o=r.length;o>i;i+=1)t(r[i])}function load(e,t){var n=loadDocuments(e,t);if(0===n.length)return void 0;if(1===n.length)return n[0];throw new YAMLException("expected a single document in the stream, but found more")}function safeLoadAll(e,t,n){loadAll(e,t,common.extend({schema:DEFAULT_SAFE_SCHEMA},n))}function safeLoad(e,t){return load(e,common.extend({schema:DEFAULT_SAFE_SCHEMA},t))}for(var common=require("./common"),YAMLException=require("./exception"),Mark=require("./mark"),DEFAULT_SAFE_SCHEMA=require("./schema/default_safe"),DEFAULT_FULL_SCHEMA=require("./schema/default_full"),_hasOwnProperty=Object.prototype.hasOwnProperty,CONTEXT_FLOW_IN=1,CONTEXT_FLOW_OUT=2,CONTEXT_BLOCK_IN=3,CONTEXT_BLOCK_OUT=4,CHOMPING_CLIP=1,CHOMPING_STRIP=2,CHOMPING_KEEP=3,PATTERN_NON_PRINTABLE=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,PATTERN_NON_ASCII_LINE_BREAKS=/[\x85\u2028\u2029]/,PATTERN_FLOW_INDICATORS=/[,\[\]\{\}]/,PATTERN_TAG_HANDLE=/^(?:!|!!|![a-z\-]+!)$/i,PATTERN_TAG_URI=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i,simpleEscapeCheck=new Array(256),simpleEscapeMap=new Array(256),i=0;256>i;i++)simpleEscapeCheck[i]=simpleEscapeSequence(i)?1:0,simpleEscapeMap[i]=simpleEscapeSequence(i);var directiveHandlers={YAML:function(e,t,n){var i,o,r;null!==e.version&&throwError(e,"duplication of %YAML directive"),1!==n.length&&throwError(e,"YAML directive accepts exactly one argument"),i=/^([0-9]+)\.([0-9]+)$/.exec(n[0]),null===i&&throwError(e,"ill-formed argument of the YAML directive"),o=parseInt(i[1],10),r=parseInt(i[2],10),1!==o&&throwError(e,"unacceptable YAML version of the document"),e.version=n[0],e.checkLineBreaks=2>r,1!==r&&2!==r&&throwWarning(e,"unsupported YAML version of the document")},TAG:function(e,t,n){var i,o;2!==n.length&&throwError(e,"TAG directive accepts exactly two arguments"),i=n[0],o=n[1],PATTERN_TAG_HANDLE.test(i)||throwError(e,"ill-formed tag handle (first argument) of the TAG directive"),_hasOwnProperty.call(e.tagMap,i)&&throwError(e,'there is a previously declared suffix for "'+i+'" tag handle'),PATTERN_TAG_URI.test(o)||throwError(e,"ill-formed tag prefix (second argument) of the TAG directive"),e.tagMap[i]=o}};module.exports.loadAll=loadAll,module.exports.load=load,module.exports.safeLoadAll=safeLoadAll,module.exports.safeLoad=safeLoad;

},{"./common":23,"./exception":25,"./mark":27,"./schema/default_full":30,"./schema/default_safe":31}],27:[function(require,module,exports){
"use strict";function Mark(t,i,n,e,r){this.name=t,this.buffer=i,this.position=n,this.line=e,this.column=r}var common=require("./common");Mark.prototype.getSnippet=function(t,i){var n,e,r,o,s;if(!this.buffer)return null;for(t=t||4,i=i||75,n="",e=this.position;e>0&&-1==="\x00\r\n\u2028\u2029".indexOf(this.buffer.charAt(e-1));)if(e-=1,this.position-e>i/2-1){n=" ... ",e+=5;break}for(r="",o=this.position;o<this.buffer.length&&-1==="\x00\r\n\u2028\u2029".indexOf(this.buffer.charAt(o));)if(o+=1,o-this.position>i/2-1){r=" ... ",o-=5;break}return s=this.buffer.slice(e,o),common.repeat(" ",t)+n+s+r+"\n"+common.repeat(" ",t+this.position-e+n.length)+"^"},Mark.prototype.toString=function(t){var i,n="";return this.name&&(n+='in "'+this.name+'" '),n+="at line "+(this.line+1)+", column "+(this.column+1),t||(i=this.getSnippet(),i&&(n+=":\n"+i)),n},module.exports=Mark;

},{"./common":23}],28:[function(require,module,exports){
"use strict";function compileList(i,e,t){var c=[];return i.include.forEach(function(i){t=compileList(i,e,t)}),i[e].forEach(function(i){t.forEach(function(e,t){e.tag===i.tag&&c.push(t)}),t.push(i)}),t.filter(function(i,e){return-1===c.indexOf(e)})}function compileMap(){function i(i){c[i.tag]=i}var e,t,c={};for(e=0,t=arguments.length;t>e;e+=1)arguments[e].forEach(i);return c}function Schema(i){this.include=i.include||[],this.implicit=i.implicit||[],this.explicit=i.explicit||[],this.implicit.forEach(function(i){if(i.loadKind&&"scalar"!==i.loadKind)throw new YAMLException("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")}),this.compiledImplicit=compileList(this,"implicit",[]),this.compiledExplicit=compileList(this,"explicit",[]),this.compiledTypeMap=compileMap(this.compiledImplicit,this.compiledExplicit)}var common=require("./common"),YAMLException=require("./exception"),Type=require("./type");Schema.DEFAULT=null,Schema.create=function(){var i,e;switch(arguments.length){case 1:i=Schema.DEFAULT,e=arguments[0];break;case 2:i=arguments[0],e=arguments[1];break;default:throw new YAMLException("Wrong number of arguments for Schema.create function")}if(i=common.toArray(i),e=common.toArray(e),!i.every(function(i){return i instanceof Schema}))throw new YAMLException("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");if(!e.every(function(i){return i instanceof Type}))throw new YAMLException("Specified list of YAML types (or a single Type object) contains a non-Type object.");return new Schema({include:i,explicit:e})},module.exports=Schema;

},{"./common":23,"./exception":25,"./type":34}],29:[function(require,module,exports){
"use strict";var Schema=require("../schema");module.exports=new Schema({include:[require("./json")]});

},{"../schema":28,"./json":33}],30:[function(require,module,exports){
"use strict";var Schema=require("../schema");module.exports=Schema.DEFAULT=new Schema({include:[require("./default_safe")],explicit:[require("../type/js/undefined"),require("../type/js/regexp"),require("../type/js/function")]});

},{"../schema":28,"../type/js/function":39,"../type/js/regexp":40,"../type/js/undefined":41,"./default_safe":31}],31:[function(require,module,exports){
"use strict";var Schema=require("../schema");module.exports=new Schema({include:[require("./core")],implicit:[require("../type/timestamp"),require("../type/merge")],explicit:[require("../type/binary"),require("../type/omap"),require("../type/pairs"),require("../type/set")]});

},{"../schema":28,"../type/binary":35,"../type/merge":43,"../type/omap":45,"../type/pairs":46,"../type/set":48,"../type/timestamp":50,"./core":29}],32:[function(require,module,exports){
"use strict";var Schema=require("../schema");module.exports=new Schema({explicit:[require("../type/str"),require("../type/seq"),require("../type/map")]});

},{"../schema":28,"../type/map":42,"../type/seq":47,"../type/str":49}],33:[function(require,module,exports){
"use strict";var Schema=require("../schema");module.exports=new Schema({include:[require("./failsafe")],implicit:[require("../type/null"),require("../type/bool"),require("../type/int"),require("../type/float")]});

},{"../schema":28,"../type/bool":36,"../type/float":37,"../type/int":38,"../type/null":44,"./failsafe":32}],34:[function(require,module,exports){
"use strict";function compileStyleAliases(e){var t={};return null!==e&&Object.keys(e).forEach(function(n){e[n].forEach(function(e){t[String(e)]=n})}),t}function Type(e,t){if(t=t||{},Object.keys(t).forEach(function(t){if(-1===TYPE_CONSTRUCTOR_OPTIONS.indexOf(t))throw new YAMLException('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')}),this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.defaultStyle=t.defaultStyle||null,this.styleAliases=compileStyleAliases(t.styleAliases||null),-1===YAML_NODE_KINDS.indexOf(this.kind))throw new YAMLException('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}var YAMLException=require("./exception"),TYPE_CONSTRUCTOR_OPTIONS=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"],YAML_NODE_KINDS=["scalar","sequence","mapping"];module.exports=Type;

},{"./exception":25}],35:[function(require,module,exports){
"use strict";function resolveYamlBinary(r){if(null===r)return!1;var e,n,u=0,t=r.length,f=BASE64_MAP;for(n=0;t>n;n++)if(e=f.indexOf(r.charAt(n)),!(e>64)){if(0>e)return!1;u+=6}return u%8===0}function constructYamlBinary(r){var e,n,u=r.replace(/[\r\n=]/g,""),t=u.length,f=BASE64_MAP,a=0,i=[];for(e=0;t>e;e++)e%4===0&&e&&(i.push(a>>16&255),i.push(a>>8&255),i.push(255&a)),a=a<<6|f.indexOf(u.charAt(e));return n=t%4*6,0===n?(i.push(a>>16&255),i.push(a>>8&255),i.push(255&a)):18===n?(i.push(a>>10&255),i.push(a>>2&255)):12===n&&i.push(a>>4&255),NodeBuffer?new NodeBuffer(i):i}function representYamlBinary(r){var e,n,u="",t=0,f=r.length,a=BASE64_MAP;for(e=0;f>e;e++)e%3===0&&e&&(u+=a[t>>18&63],u+=a[t>>12&63],u+=a[t>>6&63],u+=a[63&t]),t=(t<<8)+r[e];return n=f%3,0===n?(u+=a[t>>18&63],u+=a[t>>12&63],u+=a[t>>6&63],u+=a[63&t]):2===n?(u+=a[t>>10&63],u+=a[t>>4&63],u+=a[t<<2&63],u+=a[64]):1===n&&(u+=a[t>>2&63],u+=a[t<<4&63],u+=a[64],u+=a[64]),u}function isBinary(r){return NodeBuffer&&NodeBuffer.isBuffer(r)}var NodeBuffer=require("buffer").Buffer,Type=require("../type"),BASE64_MAP="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";module.exports=new Type("tag:yaml.org,2002:binary",{kind:"scalar",resolve:resolveYamlBinary,construct:constructYamlBinary,predicate:isBinary,represent:representYamlBinary});

},{"../type":34,"buffer":11}],36:[function(require,module,exports){
"use strict";function resolveYamlBoolean(e){if(null===e)return!1;var r=e.length;return 4===r&&("true"===e||"True"===e||"TRUE"===e)||5===r&&("false"===e||"False"===e||"FALSE"===e)}function constructYamlBoolean(e){return"true"===e||"True"===e||"TRUE"===e}function isBoolean(e){return"[object Boolean]"===Object.prototype.toString.call(e)}var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:bool",{kind:"scalar",resolve:resolveYamlBoolean,construct:constructYamlBoolean,predicate:isBoolean,represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"});

},{"../type":34}],37:[function(require,module,exports){
"use strict";function resolveYamlFloat(e){if(null===e)return!1;return YAML_FLOAT_PATTERN.test(e)?!0:!1}function constructYamlFloat(e){var r,t,a,n;return r=e.replace(/_/g,"").toLowerCase(),t="-"===r[0]?-1:1,n=[],0<="+-".indexOf(r[0])&&(r=r.slice(1)),".inf"===r?1===t?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===r?NaN:0<=r.indexOf(":")?(r.split(":").forEach(function(e){n.unshift(parseFloat(e,10))}),r=0,a=1,n.forEach(function(e){r+=e*a,a*=60}),t*r):t*parseFloat(r,10)}function representYamlFloat(e,r){if(isNaN(e))switch(r){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(r){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(r){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(common.isNegativeZero(e))return"-0.0";return e.toString(10)}function isFloat(e){return"[object Number]"===Object.prototype.toString.call(e)&&(0!==e%1||common.isNegativeZero(e))}var common=require("../common"),Type=require("../type"),YAML_FLOAT_PATTERN=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?|\\.[0-9_]+(?:[eE][-+][0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");module.exports=new Type("tag:yaml.org,2002:float",{kind:"scalar",resolve:resolveYamlFloat,construct:constructYamlFloat,predicate:isFloat,represent:representYamlFloat,defaultStyle:"lowercase"});

},{"../common":23,"../type":34}],38:[function(require,module,exports){
"use strict";function isHexCode(e){return e>=48&&57>=e||e>=65&&70>=e||e>=97&&102>=e}function isOctCode(e){return e>=48&&55>=e}function isDecCode(e){return e>=48&&57>=e}function resolveYamlInteger(e){if(null===e)return!1;var r,t=e.length,n=0,i=!1;if(!t)return!1;if(r=e[n],("-"===r||"+"===r)&&(r=e[++n]),"0"===r){if(n+1===t)return!0;if(r=e[++n],"b"===r){for(n++;t>n;n++)if(r=e[n],"_"!==r){if("0"!==r&&"1"!==r)return!1;i=!0}return i}if("x"===r){for(n++;t>n;n++)if(r=e[n],"_"!==r){if(!isHexCode(e.charCodeAt(n)))return!1;i=!0}return i}for(;t>n;n++)if(r=e[n],"_"!==r){if(!isOctCode(e.charCodeAt(n)))return!1;i=!0}return i}for(;t>n;n++)if(r=e[n],"_"!==r){if(":"===r)break;if(!isDecCode(e.charCodeAt(n)))return!1;i=!0}return i?":"!==r?!0:/^(:[0-5]?[0-9])+$/.test(e.slice(n)):!1}function constructYamlInteger(e){var r,t,n=e,i=1,o=[];return-1!==n.indexOf("_")&&(n=n.replace(/_/g,"")),r=n[0],("-"===r||"+"===r)&&("-"===r&&(i=-1),n=n.slice(1),r=n[0]),"0"===n?0:"0"===r?"b"===n[1]?i*parseInt(n.slice(2),2):"x"===n[1]?i*parseInt(n,16):i*parseInt(n,8):-1!==n.indexOf(":")?(n.split(":").forEach(function(e){o.unshift(parseInt(e,10))}),n=0,t=1,o.forEach(function(e){n+=e*t,t*=60}),i*n):i*parseInt(n,10)}function isInteger(e){return"[object Number]"===Object.prototype.toString.call(e)&&0===e%1&&!common.isNegativeZero(e)}var common=require("../common"),Type=require("../type");module.exports=new Type("tag:yaml.org,2002:int",{kind:"scalar",resolve:resolveYamlInteger,construct:constructYamlInteger,predicate:isInteger,represent:{binary:function(e){return"0b"+e.toString(2)},octal:function(e){return"0"+e.toString(8)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return"0x"+e.toString(16).toUpperCase()}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}});

},{"../common":23,"../type":34}],39:[function(require,module,exports){
"use strict";function resolveJavascriptFunction(e){if(null===e)return!1;try{var r="("+e+")",n=esprima.parse(r,{range:!0});return"Program"!==n.type||1!==n.body.length||"ExpressionStatement"!==n.body[0].type||"FunctionExpression"!==n.body[0].expression.type?!1:!0}catch(t){return!1}}function constructJavascriptFunction(e){var r,n="("+e+")",t=esprima.parse(n,{range:!0}),o=[];if("Program"!==t.type||1!==t.body.length||"ExpressionStatement"!==t.body[0].type||"FunctionExpression"!==t.body[0].expression.type)throw new Error("Failed to resolve function");return t.body[0].expression.params.forEach(function(e){o.push(e.name)}),r=t.body[0].expression.body.range,new Function(o,n.slice(r[0]+1,r[1]-1))}function representJavascriptFunction(e){return e.toString()}function isFunction(e){return"[object Function]"===Object.prototype.toString.call(e)}var esprima;try{esprima=require("esprima")}catch(_){"undefined"!=typeof window&&(esprima=window.esprima)}var Type=require("../../type");module.exports=new Type("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:resolveJavascriptFunction,construct:constructJavascriptFunction,predicate:isFunction,represent:representJavascriptFunction});

},{"../../type":34,"esprima":51}],40:[function(require,module,exports){
"use strict";function resolveJavascriptRegExp(e){if(null===e)return!1;if(0===e.length)return!1;var r=e,t=/\/([gim]*)$/.exec(e),n="";if("/"===r[0]){if(t&&(n=t[1]),n.length>3)return!1;if("/"!==r[r.length-n.length-1])return!1;r=r.slice(1,r.length-n.length-1)}try{new RegExp(r,n);return!0}catch(i){return!1}}function constructJavascriptRegExp(e){var r=e,t=/\/([gim]*)$/.exec(e),n="";return"/"===r[0]&&(t&&(n=t[1]),r=r.slice(1,r.length-n.length-1)),new RegExp(r,n)}function representJavascriptRegExp(e){var r="/"+e.source+"/";return e.global&&(r+="g"),e.multiline&&(r+="m"),e.ignoreCase&&(r+="i"),r}function isRegExp(e){return"[object RegExp]"===Object.prototype.toString.call(e)}var Type=require("../../type");module.exports=new Type("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:resolveJavascriptRegExp,construct:constructJavascriptRegExp,predicate:isRegExp,represent:representJavascriptRegExp});

},{"../../type":34}],41:[function(require,module,exports){
"use strict";function resolveJavascriptUndefined(){return!0}function constructJavascriptUndefined(){return void 0}function representJavascriptUndefined(){return""}function isUndefined(e){return"undefined"==typeof e}var Type=require("../../type");module.exports=new Type("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:resolveJavascriptUndefined,construct:constructJavascriptUndefined,predicate:isUndefined,represent:representJavascriptUndefined});

},{"../../type":34}],42:[function(require,module,exports){
"use strict";var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}});

},{"../type":34}],43:[function(require,module,exports){
"use strict";function resolveYamlMerge(e){return"<<"===e||null===e}var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:merge",{kind:"scalar",resolve:resolveYamlMerge});

},{"../type":34}],44:[function(require,module,exports){
"use strict";function resolveYamlNull(l){if(null===l)return!0;var e=l.length;return 1===e&&"~"===l||4===e&&("null"===l||"Null"===l||"NULL"===l)}function constructYamlNull(){return null}function isNull(l){return null===l}var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:null",{kind:"scalar",resolve:resolveYamlNull,construct:constructYamlNull,predicate:isNull,represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"});

},{"../type":34}],45:[function(require,module,exports){
"use strict";function resolveYamlOmap(r){if(null===r)return!0;var t,e,n,o,u,a=[],l=r;for(t=0,e=l.length;e>t;t+=1){if(n=l[t],u=!1,"[object Object]"!==_toString.call(n))return!1;for(o in n)if(_hasOwnProperty.call(n,o)){if(u)return!1;u=!0}if(!u)return!1;if(-1!==a.indexOf(o))return!1;a.push(o)}return!0}function constructYamlOmap(r){return null!==r?r:[]}var Type=require("../type"),_hasOwnProperty=Object.prototype.hasOwnProperty,_toString=Object.prototype.toString;module.exports=new Type("tag:yaml.org,2002:omap",{kind:"sequence",resolve:resolveYamlOmap,construct:constructYamlOmap});

},{"../type":34}],46:[function(require,module,exports){
"use strict";function resolveYamlPairs(r){if(null===r)return!0;var e,t,n,l,o,a=r;for(o=new Array(a.length),e=0,t=a.length;t>e;e+=1){if(n=a[e],"[object Object]"!==_toString.call(n))return!1;if(l=Object.keys(n),1!==l.length)return!1;o[e]=[l[0],n[l[0]]]}return!0}function constructYamlPairs(r){if(null===r)return[];var e,t,n,l,o,a=r;for(o=new Array(a.length),e=0,t=a.length;t>e;e+=1)n=a[e],l=Object.keys(n),o[e]=[l[0],n[l[0]]];return o}var Type=require("../type"),_toString=Object.prototype.toString;module.exports=new Type("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:resolveYamlPairs,construct:constructYamlPairs});

},{"../type":34}],47:[function(require,module,exports){
"use strict";var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}});

},{"../type":34}],48:[function(require,module,exports){
"use strict";function resolveYamlSet(e){if(null===e)return!0;var r,t=e;for(r in t)if(_hasOwnProperty.call(t,r)&&null!==t[r])return!1;return!0}function constructYamlSet(e){return null!==e?e:{}}var Type=require("../type"),_hasOwnProperty=Object.prototype.hasOwnProperty;module.exports=new Type("tag:yaml.org,2002:set",{kind:"mapping",resolve:resolveYamlSet,construct:constructYamlSet});

},{"../type":34}],49:[function(require,module,exports){
"use strict";var Type=require("../type");module.exports=new Type("tag:yaml.org,2002:str",{kind:"scalar",construct:function(r){return null!==r?r:""}});

},{"../type":34}],50:[function(require,module,exports){
"use strict";function resolveYamlTimestamp(e){if(null===e)return!1;var t;return t=YAML_TIMESTAMP_REGEXP.exec(e),null===t?!1:!0}function constructYamlTimestamp(e){var t,r,n,a,m,s,l,i,T,o,u=0,c=null;if(t=YAML_TIMESTAMP_REGEXP.exec(e),null===t)throw new Error("Date resolve error");if(r=+t[1],n=+t[2]-1,a=+t[3],!t[4])return new Date(Date.UTC(r,n,a));if(m=+t[4],s=+t[5],l=+t[6],t[7]){for(u=t[7].slice(0,3);u.length<3;)u+="0";u=+u}return t[9]&&(i=+t[10],T=+(t[11]||0),c=6e4*(60*i+T),"-"===t[9]&&(c=-c)),o=new Date(Date.UTC(r,n,a,m,s,l,u)),c&&o.setTime(o.getTime()-c),o}function representYamlTimestamp(e){return e.toISOString()}var Type=require("../type"),YAML_TIMESTAMP_REGEXP=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?)?$");module.exports=new Type("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:resolveYamlTimestamp,construct:constructYamlTimestamp,instanceOf:Date,represent:representYamlTimestamp});

},{"../type":34}],51:[function(require,module,exports){
!function(e,t){"use strict";"function"==typeof define&&define.amd?define(["exports"],t):t("undefined"!=typeof exports?exports:e.esprima={})}(this,function(e){"use strict";function t(e,t){if(!e)throw new Error("ASSERT: "+t)}function n(e){return e>=48&&57>=e}function i(e){return"0123456789abcdefABCDEF".indexOf(e)>=0}function r(e){return"01234567".indexOf(e)>=0}function a(e){var t="0"!==e,n="01234567".indexOf(e);return mn>nn&&r(Zt[nn])&&(t=!0,n=8*n+"01234567".indexOf(Zt[nn++]),"0123".indexOf(e)>=0&&mn>nn&&r(Zt[nn])&&(n=8*n+"01234567".indexOf(Zt[nn++]))),{code:n,octal:t}}function s(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0}function o(e){return 10===e||13===e||8232===e||8233===e}function l(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||92===e||e>=128&&Yt.NonAsciiIdentifierStart.test(String.fromCharCode(e))}function u(e){return 36===e||95===e||e>=65&&90>=e||e>=97&&122>=e||e>=48&&57>=e||92===e||e>=128&&Yt.NonAsciiIdentifierPart.test(String.fromCharCode(e))}function c(e){switch(e){case"enum":case"export":case"import":case"super":return!0;default:return!1}}function f(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function h(e){return"eval"===e||"arguments"===e}function p(e){switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function m(e,n,i,r,a){var s;t("number"==typeof i,"Comment must have valid position"),yn.lastCommentStart=i,s={type:e,value:n},gn.range&&(s.range=[i,r]),gn.loc&&(s.loc=a),gn.comments.push(s),gn.attachComment&&(gn.leadingComments.push(s),gn.trailingComments.push(s))}function d(e){var t,n,i,r;for(t=nn-e,n={start:{line:rn,column:nn-an-e}};mn>nn;)if(i=Zt.charCodeAt(nn),++nn,o(i))return sn=!0,gn.comments&&(r=Zt.slice(t+e,nn-1),n.end={line:rn,column:nn-an-1},m("Line",r,t,nn-1,n)),13===i&&10===Zt.charCodeAt(nn)&&++nn,++rn,void(an=nn);gn.comments&&(r=Zt.slice(t+e,nn),n.end={line:rn,column:nn-an},m("Line",r,t,nn,n))}function y(){var e,t,n,i;for(gn.comments&&(e=nn-2,t={start:{line:rn,column:nn-an-2}});mn>nn;)if(n=Zt.charCodeAt(nn),o(n))13===n&&10===Zt.charCodeAt(nn+1)&&++nn,sn=!0,++rn,++nn,an=nn;else if(42===n){if(47===Zt.charCodeAt(nn+1))return++nn,++nn,void(gn.comments&&(i=Zt.slice(e+2,nn-2),t.end={line:rn,column:nn-an},m("Block",i,e,nn,t)));++nn}else++nn;gn.comments&&(t.end={line:rn,column:nn-an},i=Zt.slice(e+2,nn),m("Block",i,e,nn,t)),Z()}function g(){var e,t;for(sn=!1,t=0===nn;mn>nn;)if(e=Zt.charCodeAt(nn),s(e))++nn;else if(o(e))sn=!0,++nn,13===e&&10===Zt.charCodeAt(nn)&&++nn,++rn,an=nn,t=!0;else if(47===e)if(e=Zt.charCodeAt(nn+1),47===e)++nn,++nn,d(2),t=!0;else{if(42!==e)break;++nn,++nn,y()}else if(t&&45===e){if(45!==Zt.charCodeAt(nn+1)||62!==Zt.charCodeAt(nn+2))break;nn+=3,d(3)}else{if(60!==e)break;if("!--"!==Zt.slice(nn+1,nn+4))break;++nn,++nn,++nn,++nn,d(4)}}function S(e){var t,n,r,a=0;for(n="u"===e?4:2,t=0;n>t;++t){if(!(mn>nn&&i(Zt[nn])))return"";r=Zt[nn++],a=16*a+"0123456789abcdef".indexOf(r.toLowerCase())}return String.fromCharCode(a)}function v(){var e,t,n,r;for(e=Zt[nn],t=0,"}"===e&&Y();mn>nn&&(e=Zt[nn++],i(e));)t=16*t+"0123456789abcdef".indexOf(e.toLowerCase());return(t>1114111||"}"!==e)&&Y(),65535>=t?String.fromCharCode(t):(n=(t-65536>>10)+55296,r=(t-65536&1023)+56320,String.fromCharCode(n,r))}function x(){var e,t;for(e=Zt.charCodeAt(nn++),t=String.fromCharCode(e),92===e&&(117!==Zt.charCodeAt(nn)&&Y(),++nn,e=S("u"),e&&"\\"!==e&&l(e.charCodeAt(0))||Y(),t=e);mn>nn&&(e=Zt.charCodeAt(nn),u(e));)++nn,t+=String.fromCharCode(e),92===e&&(t=t.substr(0,t.length-1),117!==Zt.charCodeAt(nn)&&Y(),++nn,e=S("u"),e&&"\\"!==e&&u(e.charCodeAt(0))||Y(),t+=e);return t}function w(){var e,t;for(e=nn++;mn>nn;){if(t=Zt.charCodeAt(nn),92===t)return nn=e,x();if(!u(t))break;++nn}return Zt.slice(e,nn)}function b(){var e,t,n;return e=nn,t=92===Zt.charCodeAt(nn)?x():w(),n=1===t.length?_t.Identifier:p(t)?_t.Keyword:"null"===t?_t.NullLiteral:"true"===t||"false"===t?_t.BooleanLiteral:_t.Identifier,{type:n,value:t,lineNumber:rn,lineStart:an,start:e,end:nn}}function E(){var e,t;switch(e={type:_t.Punctuator,value:"",lineNumber:rn,lineStart:an,start:nn,end:nn},t=Zt[nn]){case"(":gn.tokenize&&(gn.openParenToken=gn.tokens.length),++nn;break;case"{":gn.tokenize&&(gn.openCurlyToken=gn.tokens.length),yn.curlyStack.push("{"),++nn;break;case".":++nn,"."===Zt[nn]&&"."===Zt[nn+1]&&(nn+=2,t="...");break;case"}":++nn,yn.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++nn;break;default:t=Zt.substr(nn,4),">>>="===t?nn+=4:(t=t.substr(0,3),"==="===t||"!=="===t||">>>"===t||"<<="===t||">>="===t?nn+=3:(t=t.substr(0,2),"&&"===t||"||"===t||"=="===t||"!="===t||"+="===t||"-="===t||"*="===t||"/="===t||"++"===t||"--"===t||"<<"===t||">>"===t||"&="===t||"|="===t||"^="===t||"%="===t||"<="===t||">="===t||"=>"===t?nn+=2:(t=Zt[nn],"<>=!+-*%&|^/".indexOf(t)>=0&&++nn)))}return nn===e.start&&Y(),e.end=nn,e.value=t,e}function C(e){for(var t="";mn>nn&&i(Zt[nn]);)t+=Zt[nn++];return 0===t.length&&Y(),l(Zt.charCodeAt(nn))&&Y(),{type:_t.NumericLiteral,value:parseInt("0x"+t,16),lineNumber:rn,lineStart:an,start:e,end:nn}}function k(e){var t,i;for(i="";mn>nn&&(t=Zt[nn],"0"===t||"1"===t);)i+=Zt[nn++];return 0===i.length&&Y(),mn>nn&&(t=Zt.charCodeAt(nn),(l(t)||n(t))&&Y()),{type:_t.NumericLiteral,value:parseInt(i,2),lineNumber:rn,lineStart:an,start:e,end:nn}}function I(e,t){var i,a;for(r(e)?(a=!0,i="0"+Zt[nn++]):(a=!1,++nn,i="");mn>nn&&r(Zt[nn]);)i+=Zt[nn++];return a||0!==i.length||Y(),(l(Zt.charCodeAt(nn))||n(Zt.charCodeAt(nn)))&&Y(),{type:_t.NumericLiteral,value:parseInt(i,8),octal:a,lineNumber:rn,lineStart:an,start:t,end:nn}}function P(){var e,t;for(e=nn+1;mn>e;++e){if(t=Zt[e],"8"===t||"9"===t)return!1;if(!r(t))return!0}return!0}function A(){var e,i,a;if(a=Zt[nn],t(n(a.charCodeAt(0))||"."===a,"Numeric literal must start with a decimal digit or a decimal point"),i=nn,e="","."!==a){if(e=Zt[nn++],a=Zt[nn],"0"===e){if("x"===a||"X"===a)return++nn,C(i);if("b"===a||"B"===a)return++nn,k(i);if("o"===a||"O"===a)return I(a,i);if(r(a)&&P())return I(a,i)}for(;n(Zt.charCodeAt(nn));)e+=Zt[nn++];a=Zt[nn]}if("."===a){for(e+=Zt[nn++];n(Zt.charCodeAt(nn));)e+=Zt[nn++];a=Zt[nn]}if("e"===a||"E"===a)if(e+=Zt[nn++],a=Zt[nn],("+"===a||"-"===a)&&(e+=Zt[nn++]),n(Zt.charCodeAt(nn)))for(;n(Zt.charCodeAt(nn));)e+=Zt[nn++];else Y();return l(Zt.charCodeAt(nn))&&Y(),{type:_t.NumericLiteral,value:parseFloat(e),lineNumber:rn,lineStart:an,start:i,end:nn}}function D(){var e,n,i,s,l,u="",c=!1;for(e=Zt[nn],t("'"===e||'"'===e,"String literal must starts with a quote"),n=nn,++nn;mn>nn;){if(i=Zt[nn++],i===e){e="";break}if("\\"===i)if(i=Zt[nn++],i&&o(i.charCodeAt(0)))++rn,"\r"===i&&"\n"===Zt[nn]&&++nn,an=nn;else switch(i){case"u":case"x":if("{"===Zt[nn])++nn,u+=v();else{if(s=S(i),!s)throw Y();u+=s}break;case"n":u+="\n";break;case"r":u+="\r";break;case"t":u+="	";break;case"b":u+="\b";break;case"f":u+="\f";break;case"v":u+="";break;case"8":case"9":throw Y();default:r(i)?(l=a(i),c=l.octal||c,u+=String.fromCharCode(l.code)):u+=i}else{if(o(i.charCodeAt(0)))break;u+=i}}return""!==e&&Y(),{type:_t.StringLiteral,value:u,octal:c,lineNumber:fn,lineStart:hn,start:n,end:nn}}function L(){var e,t,i,a,s,l,u,c,f="";for(a=!1,l=!1,t=nn,s="`"===Zt[nn],i=2,++nn;mn>nn;){if(e=Zt[nn++],"`"===e){i=1,l=!0,a=!0;break}if("$"===e){if("{"===Zt[nn]){yn.curlyStack.push("${"),++nn,a=!0;break}f+=e}else if("\\"===e)if(e=Zt[nn++],o(e.charCodeAt(0)))++rn,"\r"===e&&"\n"===Zt[nn]&&++nn,an=nn;else switch(e){case"n":f+="\n";break;case"r":f+="\r";break;case"t":f+="	";break;case"u":case"x":"{"===Zt[nn]?(++nn,f+=v()):(u=nn,c=S(e),c?f+=c:(nn=u,f+=e));break;case"b":f+="\b";break;case"f":f+="\f";break;case"v":f+="";break;default:"0"===e?(n(Zt.charCodeAt(nn))&&X(Qt.TemplateOctalLiteral),f+="\x00"):r(e)?X(Qt.TemplateOctalLiteral):f+=e}else o(e.charCodeAt(0))?(++rn,"\r"===e&&"\n"===Zt[nn]&&++nn,an=nn,f+="\n"):f+=e}return a||Y(),s||yn.curlyStack.pop(),{type:_t.Template,value:{cooked:f,raw:Zt.slice(t+1,nn-i)},head:s,tail:l,lineNumber:rn,lineStart:an,start:t,end:nn}}function T(e,t){var n=e;t.indexOf("u")>=0&&(n=n.replace(/\\u\{([0-9a-fA-F]+)\}/g,function(e,t){return parseInt(t,16)<=1114111?"x":void Y(null,Qt.InvalidRegExp)}).replace(/\\u([a-fA-F0-9]{4})|[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"x"));try{RegExp(n)}catch(i){Y(null,Qt.InvalidRegExp)}try{return new RegExp(e,t)}catch(r){return null}}function N(){var e,n,i,r,a;for(e=Zt[nn],t("/"===e,"Regular expression literal must start with a slash"),n=Zt[nn++],i=!1,r=!1;mn>nn;)if(e=Zt[nn++],n+=e,"\\"===e)e=Zt[nn++],o(e.charCodeAt(0))&&Y(null,Qt.UnterminatedRegExp),n+=e;else if(o(e.charCodeAt(0)))Y(null,Qt.UnterminatedRegExp);else if(i)"]"===e&&(i=!1);else{if("/"===e){r=!0;break}"["===e&&(i=!0)}return r||Y(null,Qt.UnterminatedRegExp),a=n.substr(1,n.length-2),{value:a,literal:n}}function R(){var e,t,n,i;for(t="",n="";mn>nn&&(e=Zt[nn],u(e.charCodeAt(0)));)if(++nn,"\\"===e&&mn>nn)if(e=Zt[nn],"u"===e){if(++nn,i=nn,e=S("u"))for(n+=e,t+="\\u";nn>i;++i)t+=Zt[i];else nn=i,n+="u",t+="\\u";Z()}else t+="\\",Z();else n+=e,t+=e;return{value:n,literal:t}}function F(){pn=!0;var e,t,n,i;return dn=null,g(),e=nn,t=N(),n=R(),i=T(t.value,n.value),pn=!1,gn.tokenize?{type:_t.RegularExpression,value:i,regex:{pattern:t.value,flags:n.value},lineNumber:rn,lineStart:an,start:e,end:nn}:{literal:t.literal+n.literal,value:i,regex:{pattern:t.value,flags:n.value},start:e,end:nn}}function O(){var e,t,n,i;return g(),e=nn,t={start:{line:rn,column:nn-an}},n=F(),t.end={line:rn,column:nn-an},gn.tokenize||(gn.tokens.length>0&&(i=gn.tokens[gn.tokens.length-1],i.range[0]===e&&"Punctuator"===i.type&&("/"===i.value||"/="===i.value)&&gn.tokens.pop()),gn.tokens.push({type:"RegularExpression",value:n.literal,regex:n.regex,range:[e,nn],loc:t})),n}function U(e){return e.type===_t.Identifier||e.type===_t.Keyword||e.type===_t.BooleanLiteral||e.type===_t.NullLiteral}function B(){var e,t;if(e=gn.tokens[gn.tokens.length-1],!e)return O();if("Punctuator"===e.type){if("]"===e.value)return E();if(")"===e.value)return t=gn.tokens[gn.openParenToken-1],!t||"Keyword"!==t.type||"if"!==t.value&&"while"!==t.value&&"for"!==t.value&&"with"!==t.value?E():O();if("}"===e.value){if(gn.tokens[gn.openCurlyToken-3]&&"Keyword"===gn.tokens[gn.openCurlyToken-3].type){if(t=gn.tokens[gn.openCurlyToken-4],!t)return E()}else{if(!gn.tokens[gn.openCurlyToken-4]||"Keyword"!==gn.tokens[gn.openCurlyToken-4].type)return E();if(t=gn.tokens[gn.openCurlyToken-5],!t)return O()}return Gt.indexOf(t.value)>=0?E():O()}return O()}return"Keyword"===e.type&&"this"!==e.value?O():E()}function M(){var e,t;return nn>=mn?{type:_t.EOF,lineNumber:rn,lineStart:an,start:nn,end:nn}:(e=Zt.charCodeAt(nn),l(e)?(t=b(),en&&f(t.value)&&(t.type=_t.Keyword),t):40===e||41===e||59===e?E():39===e||34===e?D():46===e?n(Zt.charCodeAt(nn+1))?A():E():n(e)?A():gn.tokenize&&47===e?B():96===e||125===e&&"${"===yn.curlyStack[yn.curlyStack.length-1]?L():E())}function j(){var e,t,n,i;return e={start:{line:rn,column:nn-an}},t=M(),e.end={line:rn,column:nn-an},t.type!==_t.EOF&&(n=Zt.slice(t.start,t.end),i={type:$t[t.type],value:n,range:[t.start,t.end],loc:e},t.regex&&(i.regex={pattern:t.regex.pattern,flags:t.regex.flags}),gn.tokens.push(i)),t}function W(){var e;return pn=!0,on=nn,ln=rn,un=an,g(),e=dn,cn=nn,fn=rn,hn=an,dn="undefined"!=typeof gn.tokens?j():M(),pn=!1,e}function K(){pn=!0,g(),on=nn,ln=rn,un=an,cn=nn,fn=rn,hn=an,dn="undefined"!=typeof gn.tokens?j():M(),pn=!1}function H(){this.line=fn,this.column=cn-hn}function V(){this.start=new H,this.end=null}function q(e){this.start={line:e.lineNumber,column:e.start-e.lineStart},this.end=null}function z(){gn.range&&(this.range=[cn,0]),gn.loc&&(this.loc=new V)}function _(e){gn.range&&(this.range=[e.start,0]),gn.loc&&(this.loc=new q(e))}function $(e){var t,n;for(t=0;t<gn.errors.length;t++)if(n=gn.errors[t],n.index===e.index&&n.message===e.message)return;gn.errors.push(e)}function G(e,t,n){var i=new Error("Line "+e+": "+n);return i.index=t,i.lineNumber=e,i.column=t-(pn?an:un)+1,i.description=n,i}function X(e){var n,i;throw n=Array.prototype.slice.call(arguments,1),i=e.replace(/%(\d)/g,function(e,i){return t(i<n.length,"Message reference must be in range"),n[i]}),G(ln,on,i)}function J(e){var n,i,r;if(n=Array.prototype.slice.call(arguments,1),i=e.replace(/%(\d)/g,function(e,i){return t(i<n.length,"Message reference must be in range"),n[i]}),r=G(rn,on,i),!gn.errors)throw r;$(r)}function Q(e,t){var n,i=t||Qt.UnexpectedToken;return e?(t||(i=e.type===_t.EOF?Qt.UnexpectedEOS:e.type===_t.Identifier?Qt.UnexpectedIdentifier:e.type===_t.NumericLiteral?Qt.UnexpectedNumber:e.type===_t.StringLiteral?Qt.UnexpectedString:e.type===_t.Template?Qt.UnexpectedTemplate:Qt.UnexpectedToken,e.type===_t.Keyword&&(c(e.value)?i=Qt.UnexpectedReserved:en&&f(e.value)&&(i=Qt.StrictReservedWord))),n=e.type===_t.Template?e.value.raw:e.value):n="ILLEGAL",i=i.replace("%0",n),e&&"number"==typeof e.lineNumber?G(e.lineNumber,e.start,i):G(pn?rn:ln,pn?nn:on,i)}function Y(e,t){throw Q(e,t)}function Z(e,t){var n=Q(e,t);if(!gn.errors)throw n;$(n)}function ee(e){var t=W();(t.type!==_t.Punctuator||t.value!==e)&&Y(t)}function te(){var e;gn.errors?(e=dn,e.type===_t.Punctuator&&","===e.value?W():e.type===_t.Punctuator&&";"===e.value?(W(),Z(e)):Z(e,Qt.UnexpectedToken)):ee(",")}function ne(e){var t=W();(t.type!==_t.Keyword||t.value!==e)&&Y(t)}function ie(e){return dn.type===_t.Punctuator&&dn.value===e}function re(e){return dn.type===_t.Keyword&&dn.value===e}function ae(e){return dn.type===_t.Identifier&&dn.value===e}function se(){var e;return dn.type!==_t.Punctuator?!1:(e=dn.value,"="===e||"*="===e||"/="===e||"%="===e||"+="===e||"-="===e||"<<="===e||">>="===e||">>>="===e||"&="===e||"^="===e||"|="===e)}function oe(){return 59===Zt.charCodeAt(cn)||ie(";")?void W():void(sn||(on=cn,ln=fn,un=hn,dn.type===_t.EOF||ie("}")||Y(dn)))}function le(e){var t,n=Sn,i=vn,r=xn;return Sn=!0,vn=!0,xn=null,t=e(),null!==xn&&Y(xn),Sn=n,vn=i,xn=r,t}function ue(e){var t,n=Sn,i=vn,r=xn;return Sn=!0,vn=!0,xn=null,t=e(),Sn=Sn&&n,vn=vn&&i,xn=r||xn,t}function ce(){var e,t,n=new z,i=[];for(ee("[");!ie("]");)if(ie(","))W(),i.push(null);else{if(ie("...")){t=new z,W(),e=Je(),i.push(t.finishRestElement(e));break}i.push(me()),ie("]")||ee(",")}return ee("]"),n.finishArrayPattern(i)}function fe(){var e,t,n=new z,i=ie("[");if(dn.type===_t.Identifier){if(e=Je(),ie("="))return W(),t=ze(),n.finishProperty("init",e,!1,new _(e).finishAssignmentPattern(e,t),!1,!1);if(!ie(":"))return n.finishProperty("init",e,!1,e,!1,!0)}else e=Se();return ee(":"),t=me(),n.finishProperty("init",e,i,t,!1,!1)}function he(){var e=new z,t=[];for(ee("{");!ie("}");)t.push(fe()),ie("}")||ee(",");return W(),e.finishObjectPattern(t)}function pe(){return dn.type===_t.Identifier?Je():ie("[")?ce():ie("{")?he():void Y(dn)}function me(){var e,t,n=dn;return e=pe(),ie("=")&&(W(),t=le(ze),e=new _(n).finishAssignmentPattern(e,t)),e}function de(){var e,t=[],n=new z;for(ee("[");!ie("]");)ie(",")?(W(),t.push(null)):ie("...")?(e=new z,W(),e.finishSpreadElement(ue(ze)),ie("]")||(vn=Sn=!1,ee(",")),t.push(e)):(t.push(ue(ze)),ie("]")||ee(","));return W(),n.finishArrayExpression(t)}function ye(e,t){var n,i;return vn=Sn=!1,n=en,i=le(wt),en&&t.firstRestricted&&Z(t.firstRestricted,t.message),en&&t.stricted&&Z(t.stricted,t.message),en=n,e.finishFunctionExpression(null,t.params,t.defaults,i)}function ge(){var e,t,n=new z;return e=Ct(),t=ye(n,e)}function Se(){var e,t,n=new z;switch(e=W(),e.type){case _t.StringLiteral:case _t.NumericLiteral:return en&&e.octal&&Z(e,Qt.StrictOctalLiteral),n.finishLiteral(e);case _t.Identifier:case _t.BooleanLiteral:case _t.NullLiteral:case _t.Keyword:return n.finishIdentifier(e.value);case _t.Punctuator:if("["===e.value)return t=le(ze),ee("]"),t}Y(e)}function ve(){switch(dn.type){case _t.Identifier:case _t.StringLiteral:case _t.BooleanLiteral:case _t.NullLiteral:case _t.NumericLiteral:case _t.Keyword:return!0;case _t.Punctuator:return"["===dn.value}return!1}function xe(e,t,n,i){var r,a,s;if(e.type===_t.Identifier){if("get"===e.value&&ve())return n=ie("["),t=Se(),s=new z,ee("("),ee(")"),r=ye(s,{params:[],defaults:[],stricted:null,firstRestricted:null,message:null}),i.finishProperty("get",t,n,r,!1,!1);if("set"===e.value&&ve())return n=ie("["),t=Se(),s=new z,ee("("),a={params:[],defaultCount:0,defaults:[],firstRestricted:null,paramSet:{}},ie(")")?Z(dn):(Et(a),0===a.defaultCount&&(a.defaults=[])),ee(")"),r=ye(s,a),i.finishProperty("set",t,n,r,!1,!1)}return ie("(")?(r=ge(),i.finishProperty("init",t,n,r,!0,!1)):null}function we(e,t,n){t===!1&&(e.type===Xt.Identifier&&"__proto__"===e.name||e.type===Xt.Literal&&"__proto__"===e.value)&&(n.value?J(Qt.DuplicateProtoProperty):n.value=!0)}function be(e){var t,n,i,r,a=dn,s=new z;return t=ie("["),n=Se(),(i=xe(a,n,t,s))?(we(i.key,i.computed,e),i):(we(n,t,e),ie(":")?(W(),r=ue(ze),s.finishProperty("init",n,t,r,!1,!1)):a.type===_t.Identifier?ie("=")?(xn=dn,W(),r=le(ze),s.finishProperty("init",n,t,new _(a).finishAssignmentPattern(n,r),!1,!0)):s.finishProperty("init",n,t,n,!1,!0):void Y(dn))}function Ee(){var e=[],t={value:!1},n=new z;for(ee("{");!ie("}");)e.push(be(t)),ie("}")||te();return ee("}"),n.finishObjectExpression(e)}function Ce(e){var t;switch(e.type){case Xt.Identifier:case Xt.MemberExpression:case Xt.RestElement:case Xt.AssignmentPattern:break;case Xt.SpreadElement:e.type=Xt.RestElement,Ce(e.argument);break;case Xt.ArrayExpression:for(e.type=Xt.ArrayPattern,t=0;t<e.elements.length;t++)null!==e.elements[t]&&Ce(e.elements[t]);break;case Xt.ObjectExpression:for(e.type=Xt.ObjectPattern,t=0;t<e.properties.length;t++)Ce(e.properties[t].value);break;case Xt.AssignmentExpression:e.type=Xt.AssignmentPattern,Ce(e.left)}}function ke(e){var t,n;return(dn.type!==_t.Template||e.head&&!dn.head)&&Y(),t=new z,n=W(),t.finishTemplateElement({raw:n.value.raw,cooked:n.value.cooked},n.tail)}function Ie(){var e,t,n,i=new z;for(e=ke({head:!0}),t=[e],n=[];!e.tail;)n.push(_e()),e=ke({head:!1}),t.push(e);return i.finishTemplateLiteral(t,n)}function Pe(){var e,t,n,i;if(ee("("),ie(")"))return W(),ie("=>")||ee("=>"),{type:Jt.ArrowParameterPlaceHolder,params:[]};if(n=dn,ie("..."))return e=it(),ee(")"),ie("=>")||ee("=>"),{type:Jt.ArrowParameterPlaceHolder,params:[e]};if(Sn=!0,e=ue(ze),ie(",")){for(vn=!1,t=[e];mn>cn&&ie(",");){if(W(),ie("...")){for(Sn||Y(dn),t.push(it()),ee(")"),ie("=>")||ee("=>"),Sn=!1,i=0;i<t.length;i++)Ce(t[i]);return{type:Jt.ArrowParameterPlaceHolder,params:t}}t.push(ue(ze))}e=new _(n).finishSequenceExpression(t)}if(ee(")"),ie("=>")){if(Sn||Y(dn),e.type===Xt.SequenceExpression)for(i=0;i<e.expressions.length;i++)Ce(e.expressions[i]);else Ce(e);e={type:Jt.ArrowParameterPlaceHolder,params:e.type===Xt.SequenceExpression?e.expressions:[e]}}return Sn=!1,e}function Ae(){var e,t,n,i;if(ie("("))return Sn=!1,ue(Pe);if(ie("["))return ue(de);if(ie("{"))return ue(Ee);if(e=dn.type,i=new z,e===_t.Identifier)n=i.finishIdentifier(W().value);else if(e===_t.StringLiteral||e===_t.NumericLiteral)vn=Sn=!1,en&&dn.octal&&Z(dn,Qt.StrictOctalLiteral),n=i.finishLiteral(W());else if(e===_t.Keyword){if(vn=Sn=!1,re("function"))return It();if(re("this"))return W(),i.finishThisExpression();if(re("class"))return Dt();Y(W())}else e===_t.BooleanLiteral?(vn=Sn=!1,t=W(),t.value="true"===t.value,n=i.finishLiteral(t)):e===_t.NullLiteral?(vn=Sn=!1,t=W(),t.value=null,n=i.finishLiteral(t)):ie("/")||ie("/=")?(vn=Sn=!1,nn=cn,t="undefined"!=typeof gn.tokens?O():F(),W(),n=i.finishLiteral(t)):e===_t.Template?n=Ie():Y(W());return n}function De(){var e=[];if(ee("("),!ie(")"))for(;mn>cn&&(e.push(le(ze)),!ie(")"));)te();return ee(")"),e}function Le(){var e,t=new z;return e=W(),U(e)||Y(e),t.finishIdentifier(e.value)}function Te(){return ee("."),Le()}function Ne(){var e;return ee("["),e=le(_e),ee("]"),e}function Re(){var e,t,n=new z;return ne("new"),e=le(Oe),t=ie("(")?De():[],vn=Sn=!1,n.finishNewExpression(e,t)}function Fe(){var e,t,n,i,r,a=yn.allowIn;for(r=dn,yn.allowIn=!0,re("super")&&yn.inFunctionBody?(t=new z,W(),t=t.finishSuper(),ie("(")||ie(".")||ie("[")||Y(dn)):t=ue(re("new")?Re:Ae);;)if(ie("."))Sn=!1,vn=!0,i=Te(),t=new _(r).finishMemberExpression(".",t,i);else if(ie("("))Sn=!1,vn=!1,n=De(),t=new _(r).finishCallExpression(t,n);else if(ie("["))Sn=!1,vn=!0,i=Ne(),t=new _(r).finishMemberExpression("[",t,i);else{if(dn.type!==_t.Template||!dn.head)break;e=Ie(),t=new _(r).finishTaggedTemplateExpression(t,e)}return yn.allowIn=a,t}function Oe(){var e,n,i,r;for(t(yn.allowIn,"callee of new expression always allow in keyword."),r=dn,re("super")&&yn.inFunctionBody?(n=new z,W(),n=n.finishSuper(),ie("[")||ie(".")||Y(dn)):n=ue(re("new")?Re:Ae);;)if(ie("["))Sn=!1,vn=!0,i=Ne(),n=new _(r).finishMemberExpression("[",n,i);else if(ie("."))Sn=!1,vn=!0,i=Te(),n=new _(r).finishMemberExpression(".",n,i);else{if(dn.type!==_t.Template||!dn.head)break;e=Ie(),n=new _(r).finishTaggedTemplateExpression(n,e)}return n}function Ue(){var e,t,n=dn;return e=ue(Fe),sn||dn.type!==_t.Punctuator||(ie("++")||ie("--"))&&(en&&e.type===Xt.Identifier&&h(e.name)&&J(Qt.StrictLHSPostfix),vn||J(Qt.InvalidLHSInAssignment),vn=Sn=!1,t=W(),e=new _(n).finishPostfixExpression(t.value,e)),e}function Be(){var e,t,n;return dn.type!==_t.Punctuator&&dn.type!==_t.Keyword?t=Ue():ie("++")||ie("--")?(n=dn,e=W(),t=ue(Be),en&&t.type===Xt.Identifier&&h(t.name)&&J(Qt.StrictLHSPrefix),vn||J(Qt.InvalidLHSInAssignment),t=new _(n).finishUnaryExpression(e.value,t),vn=Sn=!1):ie("+")||ie("-")||ie("~")||ie("!")?(n=dn,e=W(),t=ue(Be),t=new _(n).finishUnaryExpression(e.value,t),vn=Sn=!1):re("delete")||re("void")||re("typeof")?(n=dn,e=W(),t=ue(Be),t=new _(n).finishUnaryExpression(e.value,t),en&&"delete"===t.operator&&t.argument.type===Xt.Identifier&&J(Qt.StrictDelete),vn=Sn=!1):t=Ue(),t}function Me(e,t){var n=0;if(e.type!==_t.Punctuator&&e.type!==_t.Keyword)return 0;switch(e.value){case"||":n=1;break;case"&&":n=2;break;case"|":n=3;break;case"^":n=4;break;case"&":n=5;break;case"==":case"!=":case"===":case"!==":n=6;break;case"<":case">":case"<=":case">=":case"instanceof":n=7;break;case"in":n=t?7:0;break;case"<<":case">>":case">>>":n=8;break;case"+":case"-":n=9;break;case"*":case"/":case"%":n=11}return n}function je(){var e,t,n,i,r,a,s,o,l,u;if(e=dn,l=ue(Be),i=dn,r=Me(i,yn.allowIn),0===r)return l;for(vn=Sn=!1,i.prec=r,W(),t=[e,dn],s=le(Be),a=[l,i,s];(r=Me(dn,yn.allowIn))>0;){for(;a.length>2&&r<=a[a.length-2].prec;)s=a.pop(),o=a.pop().value,l=a.pop(),t.pop(),n=new _(t[t.length-1]).finishBinaryExpression(o,l,s),a.push(n);i=W(),i.prec=r,a.push(i),t.push(dn),n=le(Be),a.push(n)}for(u=a.length-1,n=a[u],t.pop();u>1;)n=new _(t.pop()).finishBinaryExpression(a[u-1].value,a[u-2],n),u-=2;return n}function We(){var e,t,n,i,r;return r=dn,e=ue(je),ie("?")&&(W(),t=yn.allowIn,yn.allowIn=!0,n=le(ze),yn.allowIn=t,ee(":"),i=le(ze),e=new _(r).finishConditionalExpression(e,n,i),vn=Sn=!1),e}function Ke(){return ie("{")?wt():le(ze)}function He(e,n){var i;switch(n.type){case Xt.Identifier:bt(e,n,n.name);break;case Xt.RestElement:He(e,n.argument);break;case Xt.AssignmentPattern:He(e,n.left);break;case Xt.ArrayPattern:for(i=0;i<n.elements.length;i++)null!==n.elements[i]&&He(e,n.elements[i]);break;default:for(t(n.type===Xt.ObjectPattern,"Invalid type"),i=0;i<n.properties.length;i++)He(e,n.properties[i].value)}}function Ve(e){var t,n,i,r,a,s,o,l;switch(a=[],s=0,r=[e],e.type){case Xt.Identifier:break;case Jt.ArrowParameterPlaceHolder:r=e.params;break;default:return null}for(o={paramSet:{}},t=0,n=r.length;n>t;t+=1)switch(i=r[t],i.type){case Xt.AssignmentPattern:r[t]=i.left,a.push(i.right),++s,He(o,i.left);break;default:He(o,i),r[t]=i,a.push(null)}return o.message===Qt.StrictParamDupe&&(l=en?o.stricted:o.firstRestricted,Y(l,o.message)),0===s&&(a=[]),{params:r,defaults:a,stricted:o.stricted,firstRestricted:o.firstRestricted,message:o.message}}function qe(e,t){var n,i;return sn&&Z(dn),ee("=>"),n=en,i=Ke(),en&&e.firstRestricted&&Y(e.firstRestricted,e.message),en&&e.stricted&&Z(e.stricted,e.message),en=n,t.finishArrowFunctionExpression(e.params,e.defaults,i,i.type!==Xt.BlockStatement)}function ze(){var e,t,n,i,r;return r=dn,e=dn,t=We(),t.type===Jt.ArrowParameterPlaceHolder||ie("=>")?(vn=Sn=!1,i=Ve(t),i?(xn=null,qe(i,new _(r))):t):(se()&&(vn||J(Qt.InvalidLHSInAssignment),en&&t.type===Xt.Identifier&&h(t.name)&&Z(e,Qt.StrictLHSAssignment),ie("=")?Ce(t):vn=Sn=!1,e=W(),n=le(ze),t=new _(r).finishAssignmentExpression(e.value,t,n),xn=null),t)}function _e(){var e,t,n=dn;if(e=le(ze),ie(",")){for(t=[e];mn>cn&&ie(",");)W(),t.push(le(ze));e=new _(n).finishSequenceExpression(t)}return e}function $e(){if(dn.type===_t.Keyword)switch(dn.value){case"export":return"module"!==tn&&Z(dn,Qt.IllegalExportDeclaration),Ot();case"import":return"module"!==tn&&Z(dn,Qt.IllegalImportDeclaration),Wt();case"const":case"let":return nt({inFor:!1});case"function":return kt(new z);case"class":return At()}return xt()}function Ge(){for(var e=[];mn>cn&&!ie("}");)e.push($e());return e}function Xe(){var e,t=new z;return ee("{"),e=Ge(),ee("}"),t.finishBlockStatement(e)}function Je(){var e,t=new z;return e=W(),e.type!==_t.Identifier&&(en&&e.type===_t.Keyword&&f(e.value)?Z(e,Qt.StrictReservedWord):Y(e)),t.finishIdentifier(e.value)}function Qe(){var e,t=null,n=new z;return e=pe(),en&&h(e.name)&&J(Qt.StrictVarName),ie("=")?(W(),t=le(ze)):e.type!==Xt.Identifier&&ee("="),n.finishVariableDeclarator(e,t)}function Ye(){var e=[];do{if(e.push(Qe()),!ie(","))break;W()}while(mn>cn);return e}function Ze(e){var t;return ne("var"),t=Ye(),oe(),e.finishVariableDeclaration(t)}function et(e,t){var n,i=null,r=new z;return n=pe(),en&&n.type===Xt.Identifier&&h(n.name)&&J(Qt.StrictVarName),"const"===e?re("in")||(ee("="),i=le(ze)):(!t.inFor&&n.type!==Xt.Identifier||ie("="))&&(ee("="),i=le(ze)),r.finishVariableDeclarator(n,i)}function tt(e,t){var n=[];do{if(n.push(et(e,t)),!ie(","))break;W()}while(mn>cn);return n}function nt(e){var n,i,r=new z;return n=W().value,t("let"===n||"const"===n,"Lexical declaration must be either let or const"),i=tt(n,e),oe(),r.finishLexicalDeclaration(i,n)}function it(){var e,t=new z;return W(),ie("{")&&X(Qt.ObjectPatternAsRestParameter),e=Je(),ie("=")&&X(Qt.DefaultRestParameter),ie(")")||X(Qt.ParameterAfterRestParameter),t.finishRestElement(e)}function rt(e){return ee(";"),e.finishEmptyStatement()}function at(e){var t=_e();return oe(),e.finishExpressionStatement(t)}function st(e){var t,n,i;return ne("if"),ee("("),t=_e(),ee(")"),n=xt(),re("else")?(W(),i=xt()):i=null,e.finishIfStatement(t,n,i)}function ot(e){var t,n,i;return ne("do"),i=yn.inIteration,yn.inIteration=!0,t=xt(),yn.inIteration=i,ne("while"),ee("("),n=_e(),ee(")"),ie(";")&&W(),e.finishDoWhileStatement(t,n)}function lt(e){var t,n,i;return ne("while"),ee("("),t=_e(),ee(")"),i=yn.inIteration,yn.inIteration=!0,n=xt(),yn.inIteration=i,e.finishWhileStatement(t,n)}function ut(e){var t,n,i,r,a,s,o,l,u,c,f,h=yn.allowIn;if(t=r=a=null,ne("for"),ee("("),ie(";"))W();else if(re("var"))t=new z,W(),yn.allowIn=!1,t=t.finishVariableDeclaration(Ye()),yn.allowIn=h,1===t.declarations.length&&re("in")?(W(),s=t,o=_e(),t=null):ee(";");else if(re("const")||re("let"))t=new z,l=W().value,yn.allowIn=!1,u=tt(l,{inFor:!0}),yn.allowIn=h,1===u.length&&null===u[0].init&&re("in")?(t=t.finishLexicalDeclaration(u,l),W(),s=t,o=_e(),t=null):(oe(),t=t.finishLexicalDeclaration(u,l));else if(i=dn,yn.allowIn=!1,t=ue(ze),yn.allowIn=h,re("in"))vn||J(Qt.InvalidLHSInForIn),W(),Ce(t),s=t,o=_e(),t=null;else{if(ie(",")){for(n=[t];ie(",");)W(),n.push(le(ze));t=new _(i).finishSequenceExpression(n)}ee(";")}return"undefined"==typeof s&&(ie(";")||(r=_e()),ee(";"),ie(")")||(a=_e())),ee(")"),f=yn.inIteration,yn.inIteration=!0,c=le(xt),yn.inIteration=f,"undefined"==typeof s?e.finishForStatement(t,r,a,c):e.finishForInStatement(s,o,c)}function ct(e){var t,n=null;return ne("continue"),59===Zt.charCodeAt(cn)?(W(),yn.inIteration||X(Qt.IllegalContinue),e.finishContinueStatement(null)):sn?(yn.inIteration||X(Qt.IllegalContinue),e.finishContinueStatement(null)):(dn.type===_t.Identifier&&(n=Je(),t="$"+n.name,Object.prototype.hasOwnProperty.call(yn.labelSet,t)||X(Qt.UnknownLabel,n.name)),oe(),null!==n||yn.inIteration||X(Qt.IllegalContinue),e.finishContinueStatement(n))}function ft(e){var t,n=null;return ne("break"),59===Zt.charCodeAt(on)?(W(),yn.inIteration||yn.inSwitch||X(Qt.IllegalBreak),e.finishBreakStatement(null)):sn?(yn.inIteration||yn.inSwitch||X(Qt.IllegalBreak),e.finishBreakStatement(null)):(dn.type===_t.Identifier&&(n=Je(),t="$"+n.name,Object.prototype.hasOwnProperty.call(yn.labelSet,t)||X(Qt.UnknownLabel,n.name)),oe(),null!==n||yn.inIteration||yn.inSwitch||X(Qt.IllegalBreak),e.finishBreakStatement(n))}function ht(e){var t=null;return ne("return"),yn.inFunctionBody||J(Qt.IllegalReturn),32===Zt.charCodeAt(on)&&l(Zt.charCodeAt(on+1))?(t=_e(),oe(),e.finishReturnStatement(t)):sn?e.finishReturnStatement(null):(ie(";")||ie("}")||dn.type===_t.EOF||(t=_e()),oe(),e.finishReturnStatement(t))}function pt(e){var t,n;return en&&J(Qt.StrictModeWith),ne("with"),ee("("),t=_e(),ee(")"),n=xt(),e.finishWithStatement(t,n)}function mt(){var e,t,n=[],i=new z;for(re("default")?(W(),e=null):(ne("case"),e=_e()),ee(":");mn>cn&&!(ie("}")||re("default")||re("case"));)t=$e(),n.push(t);return i.finishSwitchCase(e,n)}function dt(e){var t,n,i,r,a;if(ne("switch"),ee("("),t=_e(),ee(")"),ee("{"),n=[],ie("}"))return W(),e.finishSwitchStatement(t,n);for(r=yn.inSwitch,yn.inSwitch=!0,a=!1;mn>cn&&!ie("}");)i=mt(),null===i.test&&(a&&X(Qt.MultipleDefaultsInSwitch),a=!0),n.push(i);return yn.inSwitch=r,ee("}"),e.finishSwitchStatement(t,n)}function yt(e){var t;return ne("throw"),sn&&X(Qt.NewlineAfterThrow),t=_e(),oe(),e.finishThrowStatement(t)}function gt(){var e,t,n=new z;return ne("catch"),ee("("),ie(")")&&Y(dn),e=pe(),en&&h(e.name)&&J(Qt.StrictCatchVariable),ee(")"),t=Xe(),n.finishCatchClause(e,t)}function St(e){var t,n=null,i=null;return ne("try"),t=Xe(),re("catch")&&(n=gt()),re("finally")&&(W(),i=Xe()),n||i||X(Qt.NoCatchOrFinally),e.finishTryStatement(t,n,i)}function vt(e){return ne("debugger"),oe(),e.finishDebuggerStatement()}function xt(){var e,t,n,i,r=dn.type;if(r===_t.EOF&&Y(dn),r===_t.Punctuator&&"{"===dn.value)return Xe();if(vn=Sn=!0,i=new z,r===_t.Punctuator)switch(dn.value){case";":return rt(i);case"(":return at(i)}else if(r===_t.Keyword)switch(dn.value){case"break":return ft(i);case"continue":return ct(i);case"debugger":return vt(i);case"do":return ot(i);case"for":return ut(i);case"function":return kt(i);case"if":return st(i);case"return":return ht(i);case"switch":return dt(i);case"throw":return yt(i);case"try":return St(i);case"var":return Ze(i);case"while":return lt(i);case"with":return pt(i)}return e=_e(),e.type===Xt.Identifier&&ie(":")?(W(),n="$"+e.name,Object.prototype.hasOwnProperty.call(yn.labelSet,n)&&X(Qt.Redeclaration,"Label",e.name),yn.labelSet[n]=!0,t=xt(),delete yn.labelSet[n],i.finishLabeledStatement(e,t)):(oe(),i.finishExpressionStatement(e))}function wt(){var e,t,n,i,r,a,s,o,l,u=[],c=new z;for(ee("{");mn>cn&&dn.type===_t.StringLiteral&&(t=dn,e=$e(),u.push(e),e.expression.type===Xt.Literal);)n=Zt.slice(t.start+1,t.end-1),"use strict"===n?(en=!0,i&&Z(i,Qt.StrictOctalLiteral)):!i&&t.octal&&(i=t);for(r=yn.labelSet,a=yn.inIteration,s=yn.inSwitch,o=yn.inFunctionBody,l=yn.parenthesizedCount,yn.labelSet={},yn.inIteration=!1,yn.inSwitch=!1,yn.inFunctionBody=!0,yn.parenthesizedCount=0;mn>cn&&!ie("}");)u.push($e());return ee("}"),yn.labelSet=r,yn.inIteration=a,yn.inSwitch=s,yn.inFunctionBody=o,
yn.parenthesizedCount=l,c.finishBlockStatement(u)}function bt(e,t,n){var i="$"+n;en?(h(n)&&(e.stricted=t,e.message=Qt.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,i)&&(e.stricted=t,e.message=Qt.StrictParamDupe)):e.firstRestricted||(h(n)?(e.firstRestricted=t,e.message=Qt.StrictParamName):f(n)?(e.firstRestricted=t,e.message=Qt.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,i)&&(e.firstRestricted=t,e.message=Qt.StrictParamDupe)),e.paramSet[i]=!0}function Et(e){var t,n,i;return t=dn,"..."===t.value?(n=it(),bt(e,n.argument,n.argument.name),e.params.push(n),e.defaults.push(null),!1):(n=me(),bt(e,t,t.value),n.type===Xt.AssignmentPattern&&(i=n.right,n=n.left,++e.defaultCount),e.params.push(n),e.defaults.push(i),!ie(")"))}function Ct(e){var t;if(t={params:[],defaultCount:0,defaults:[],firstRestricted:e},ee("("),!ie(")"))for(t.paramSet={};mn>cn&&Et(t);)ee(",");return ee(")"),0===t.defaultCount&&(t.defaults=[]),{params:t.params,defaults:t.defaults,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}}function kt(e,t){var n,i,r,a,s,o,l,u=null,c=[],p=[];return ne("function"),t&&ie("(")||(i=dn,u=Je(),en?h(i.value)&&Z(i,Qt.StrictFunctionName):h(i.value)?(s=i,o=Qt.StrictFunctionName):f(i.value)&&(s=i,o=Qt.StrictReservedWord)),a=Ct(s),c=a.params,p=a.defaults,r=a.stricted,s=a.firstRestricted,a.message&&(o=a.message),l=en,n=wt(),en&&s&&Y(s,o),en&&r&&Z(r,o),en=l,e.finishFunctionDeclaration(u,c,p,n)}function It(){var e,t,n,i,r,a,s,o=null,l=[],u=[],c=new z;return ne("function"),ie("(")||(e=dn,o=Je(),en?h(e.value)&&Z(e,Qt.StrictFunctionName):h(e.value)?(n=e,i=Qt.StrictFunctionName):f(e.value)&&(n=e,i=Qt.StrictReservedWord)),r=Ct(n),l=r.params,u=r.defaults,t=r.stricted,n=r.firstRestricted,r.message&&(i=r.message),s=en,a=wt(),en&&n&&Y(n,i),en&&t&&Z(t,i),en=s,c.finishFunctionExpression(o,l,u,a)}function Pt(){var e,t,n,i,r,a,s,o=!1;for(e=new z,ee("{"),i=[];!ie("}");)ie(";")?W():(r=new z,t=dn,n=!1,a=ie("["),s=Se(),"static"===s.name&&ve()&&(t=dn,n=!0,a=ie("["),s=Se()),r=xe(t,s,a,r),r?(r["static"]=n,"init"===r.kind&&(r.kind="method"),n?r.computed||"prototype"!==(r.key.name||r.key.value.toString())||Y(t,Qt.StaticPrototype):r.computed||"constructor"!==(r.key.name||r.key.value.toString())||(("method"!==r.kind||!r.method||r.value.generator)&&Y(t,Qt.ConstructorSpecialMethod),o?Y(t,Qt.DuplicateConstructor):o=!0,r.kind="constructor"),r.type=Xt.MethodDefinition,delete r.method,delete r.shorthand,i.push(r)):Y(dn));return W(),e.finishClassBody(i)}function At(e){var t,n=null,i=null,r=new z,a=en;return en=!0,ne("class"),e&&dn.type!==_t.Identifier||(n=Je()),re("extends")&&(W(),i=le(Fe)),t=Pt(),en=a,r.finishClassDeclaration(n,i,t)}function Dt(){var e,t=null,n=null,i=new z,r=en;return en=!0,ne("class"),dn.type===_t.Identifier&&(t=Je()),re("extends")&&(W(),n=le(Fe)),e=Pt(),en=r,i.finishClassExpression(t,n,e)}function Lt(){var e=new z;return dn.type!==_t.StringLiteral&&X(Qt.InvalidModuleSpecifier),e.finishLiteral(W())}function Tt(){var e,t,n,i=new z;return re("default")?(n=new z,W(),t=n.finishIdentifier("default")):t=Je(),ae("as")&&(W(),e=Le()),i.finishExportSpecifier(t,e)}function Nt(e){var t,n=null,i=null,r=[];if(dn.type===_t.Keyword)switch(dn.value){case"let":case"const":case"var":case"class":case"function":return n=$e(),e.finishExportNamedDeclaration(n,r,null)}if(ee("{"),!ie("}"))do t=t||re("default"),r.push(Tt());while(ie(",")&&W());return ee("}"),ae("from")?(W(),i=Lt(),oe()):t?X(dn.value?Qt.UnexpectedToken:Qt.MissingFromClause,dn.value):oe(),e.finishExportNamedDeclaration(n,r,i)}function Rt(e){var t=null,n=null;return ne("default"),re("function")?(t=kt(new z,!0),e.finishExportDefaultDeclaration(t)):re("class")?(t=At(!0),e.finishExportDefaultDeclaration(t)):(ae("from")&&X(Qt.UnexpectedToken,dn.value),n=ie("{")?Ee():ie("[")?de():ze(),oe(),e.finishExportDefaultDeclaration(n))}function Ft(e){var t;return ee("*"),ae("from")||X(dn.value?Qt.UnexpectedToken:Qt.MissingFromClause,dn.value),W(),t=Lt(),oe(),e.finishExportAllDeclaration(t)}function Ot(){var e=new z;return yn.inFunctionBody&&X(Qt.IllegalExportDeclaration),ne("export"),re("default")?Rt(e):ie("*")?Ft(e):Nt(e)}function Ut(){var e,t,n=new z;return t=Le(),ae("as")&&(W(),e=Je()),n.finishImportSpecifier(e,t)}function Bt(){var e=[];if(ee("{"),!ie("}"))do e.push(Ut());while(ie(",")&&W());return ee("}"),e}function Mt(){var e,t=new z;return e=Le(),t.finishImportDefaultSpecifier(e)}function jt(){var e,t=new z;return ee("*"),ae("as")||X(Qt.NoAsAfterImportNamespace),W(),e=Le(),t.finishImportNamespaceSpecifier(e)}function Wt(){var e,t,n=new z;return yn.inFunctionBody&&X(Qt.IllegalImportDeclaration),ne("import"),e=[],dn.type===_t.StringLiteral?(t=Lt(),oe(),n.finishImportDeclaration(e,t)):(!re("default")&&U(dn)&&(e.push(Mt()),ie(",")&&W()),ie("*")?e.push(jt()):ie("{")&&(e=e.concat(Bt())),ae("from")||X(dn.value?Qt.UnexpectedToken:Qt.MissingFromClause,dn.value),W(),t=Lt(),oe(),n.finishImportDeclaration(e,t))}function Kt(){for(var e,t,n,i,r=[];mn>cn&&(t=dn,t.type===_t.StringLiteral)&&(e=$e(),r.push(e),e.expression.type===Xt.Literal);)n=Zt.slice(t.start+1,t.end-1),"use strict"===n?(en=!0,i&&Z(i,Qt.StrictOctalLiteral)):!i&&t.octal&&(i=t);for(;mn>cn&&(e=$e(),"undefined"!=typeof e);)r.push(e);return r}function Ht(){var e,t;return K(),t=new z,e=Kt(),t.finishProgram(e)}function Vt(){var e,t,n,i=[];for(e=0;e<gn.tokens.length;++e)t=gn.tokens[e],n={type:t.type,value:t.value},t.regex&&(n.regex={pattern:t.regex.pattern,flags:t.regex.flags}),gn.range&&(n.range=t.range),gn.loc&&(n.loc=t.loc),i.push(n);gn.tokens=i}function qt(e,t){var n,i;n=String,"string"==typeof e||e instanceof String||(e=n(e)),Zt=e,nn=0,rn=Zt.length>0?1:0,an=0,cn=nn,fn=rn,hn=an,mn=Zt.length,dn=null,yn={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1,curlyStack:[]},gn={},t=t||{},t.tokens=!0,gn.tokens=[],gn.tokenize=!0,gn.openParenToken=-1,gn.openCurlyToken=-1,gn.range="boolean"==typeof t.range&&t.range,gn.loc="boolean"==typeof t.loc&&t.loc,"boolean"==typeof t.comment&&t.comment&&(gn.comments=[]),"boolean"==typeof t.tolerant&&t.tolerant&&(gn.errors=[]);try{if(K(),dn.type===_t.EOF)return gn.tokens;for(W();dn.type!==_t.EOF;)try{W()}catch(r){if(gn.errors){$(r);break}throw r}Vt(),i=gn.tokens,"undefined"!=typeof gn.comments&&(i.comments=gn.comments),"undefined"!=typeof gn.errors&&(i.errors=gn.errors)}catch(a){throw a}finally{gn={}}return i}function zt(e,t){var n,i;i=String,"string"==typeof e||e instanceof String||(e=i(e)),Zt=e,nn=0,rn=Zt.length>0?1:0,an=0,cn=nn,fn=rn,hn=an,mn=Zt.length,dn=null,yn={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1,curlyStack:[]},tn="script",en=!1,gn={},"undefined"!=typeof t&&(gn.range="boolean"==typeof t.range&&t.range,gn.loc="boolean"==typeof t.loc&&t.loc,gn.attachComment="boolean"==typeof t.attachComment&&t.attachComment,gn.loc&&null!==t.source&&void 0!==t.source&&(gn.source=i(t.source)),"boolean"==typeof t.tokens&&t.tokens&&(gn.tokens=[]),"boolean"==typeof t.comment&&t.comment&&(gn.comments=[]),"boolean"==typeof t.tolerant&&t.tolerant&&(gn.errors=[]),gn.attachComment&&(gn.range=!0,gn.comments=[],gn.bottomRightStack=[],gn.trailingComments=[],gn.leadingComments=[]),"module"===t.sourceType&&(tn=t.sourceType,en=!0));try{n=Ht(),"undefined"!=typeof gn.comments&&(n.comments=gn.comments),"undefined"!=typeof gn.tokens&&(Vt(),n.tokens=gn.tokens),"undefined"!=typeof gn.errors&&(n.errors=gn.errors)}catch(r){throw r}finally{gn={}}return n}var _t,$t,Gt,Xt,Jt,Qt,Yt,Zt,en,tn,nn,rn,an,sn,on,ln,un,cn,fn,hn,pn,mn,dn,yn,gn,Sn,vn,xn;_t={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9,Template:10},$t={},$t[_t.BooleanLiteral]="Boolean",$t[_t.EOF]="<end>",$t[_t.Identifier]="Identifier",$t[_t.Keyword]="Keyword",$t[_t.NullLiteral]="Null",$t[_t.NumericLiteral]="Numeric",$t[_t.Punctuator]="Punctuator",$t[_t.StringLiteral]="String",$t[_t.RegularExpression]="RegularExpression",$t[_t.Template]="Template",Gt=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],Xt={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},Jt={ArrowParameterPlaceHolder:"ArrowParameterPlaceHolder"},Qt={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",DefaultRestParameter:"Unexpected token =",ObjectPatternAsRestParameter:"Unexpected token {",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ConstructorSpecialMethod:"Class constructor may not be an accessor",DuplicateConstructor:"A class may only have one constructor",StaticPrototype:"Classes may not have static property named prototype",MissingFromClause:"Unexpected token",NoAsAfterImportNamespace:"Unexpected token",InvalidModuleSpecifier:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalExportDeclaration:"Unexpected token"},Yt={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢲऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠ-ࢲࣤ-ॣ०-९ॱ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶ᳸᳹ᴀ-᷵᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚝꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︭︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},_.prototype=z.prototype={processComment:function(){var e,t,n,i,r,a=gn.bottomRightStack,s=a[a.length-1];if(!(this.type===Xt.Program&&this.body.length>0)){if(gn.trailingComments.length>0){for(n=[],i=gn.trailingComments.length-1;i>=0;--i)r=gn.trailingComments[i],r.range[0]>=this.range[1]&&(n.unshift(r),gn.trailingComments.splice(i,1));gn.trailingComments=[]}else s&&s.trailingComments&&s.trailingComments[0].range[0]>=this.range[1]&&(n=s.trailingComments,delete s.trailingComments);if(s)for(;s&&s.range[0]>=this.range[0];)e=s,s=a.pop();if(e)e.leadingComments&&e.leadingComments[e.leadingComments.length-1].range[1]<=this.range[0]&&(this.leadingComments=e.leadingComments,e.leadingComments=void 0);else if(gn.leadingComments.length>0)for(t=[],i=gn.leadingComments.length-1;i>=0;--i)r=gn.leadingComments[i],r.range[1]<=this.range[0]&&(t.unshift(r),gn.leadingComments.splice(i,1));t&&t.length>0&&(this.leadingComments=t),n&&n.length>0&&(this.trailingComments=n),a.push(this)}},finish:function(){gn.range&&(this.range[1]=on),gn.loc&&(this.loc.end={line:ln,column:on-un},gn.source&&(this.loc.source=gn.source)),gn.attachComment&&this.processComment()},finishArrayExpression:function(e){return this.type=Xt.ArrayExpression,this.elements=e,this.finish(),this},finishArrayPattern:function(e){return this.type=Xt.ArrayPattern,this.elements=e,this.finish(),this},finishArrowFunctionExpression:function(e,t,n,i){return this.type=Xt.ArrowFunctionExpression,this.id=null,this.params=e,this.defaults=t,this.body=n,this.generator=!1,this.expression=i,this.finish(),this},finishAssignmentExpression:function(e,t,n){return this.type=Xt.AssignmentExpression,this.operator=e,this.left=t,this.right=n,this.finish(),this},finishAssignmentPattern:function(e,t){return this.type=Xt.AssignmentPattern,this.left=e,this.right=t,this.finish(),this},finishBinaryExpression:function(e,t,n){return this.type="||"===e||"&&"===e?Xt.LogicalExpression:Xt.BinaryExpression,this.operator=e,this.left=t,this.right=n,this.finish(),this},finishBlockStatement:function(e){return this.type=Xt.BlockStatement,this.body=e,this.finish(),this},finishBreakStatement:function(e){return this.type=Xt.BreakStatement,this.label=e,this.finish(),this},finishCallExpression:function(e,t){return this.type=Xt.CallExpression,this.callee=e,this.arguments=t,this.finish(),this},finishCatchClause:function(e,t){return this.type=Xt.CatchClause,this.param=e,this.body=t,this.finish(),this},finishClassBody:function(e){return this.type=Xt.ClassBody,this.body=e,this.finish(),this},finishClassDeclaration:function(e,t,n){return this.type=Xt.ClassDeclaration,this.id=e,this.superClass=t,this.body=n,this.finish(),this},finishClassExpression:function(e,t,n){return this.type=Xt.ClassExpression,this.id=e,this.superClass=t,this.body=n,this.finish(),this},finishConditionalExpression:function(e,t,n){return this.type=Xt.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=n,this.finish(),this},finishContinueStatement:function(e){return this.type=Xt.ContinueStatement,this.label=e,this.finish(),this},finishDebuggerStatement:function(){return this.type=Xt.DebuggerStatement,this.finish(),this},finishDoWhileStatement:function(e,t){return this.type=Xt.DoWhileStatement,this.body=e,this.test=t,this.finish(),this},finishEmptyStatement:function(){return this.type=Xt.EmptyStatement,this.finish(),this},finishExpressionStatement:function(e){return this.type=Xt.ExpressionStatement,this.expression=e,this.finish(),this},finishForStatement:function(e,t,n,i){return this.type=Xt.ForStatement,this.init=e,this.test=t,this.update=n,this.body=i,this.finish(),this},finishForInStatement:function(e,t,n){return this.type=Xt.ForInStatement,this.left=e,this.right=t,this.body=n,this.each=!1,this.finish(),this},finishFunctionDeclaration:function(e,t,n,i){return this.type=Xt.FunctionDeclaration,this.id=e,this.params=t,this.defaults=n,this.body=i,this.generator=!1,this.expression=!1,this.finish(),this},finishFunctionExpression:function(e,t,n,i){return this.type=Xt.FunctionExpression,this.id=e,this.params=t,this.defaults=n,this.body=i,this.generator=!1,this.expression=!1,this.finish(),this},finishIdentifier:function(e){return this.type=Xt.Identifier,this.name=e,this.finish(),this},finishIfStatement:function(e,t,n){return this.type=Xt.IfStatement,this.test=e,this.consequent=t,this.alternate=n,this.finish(),this},finishLabeledStatement:function(e,t){return this.type=Xt.LabeledStatement,this.label=e,this.body=t,this.finish(),this},finishLiteral:function(e){return this.type=Xt.Literal,this.value=e.value,this.raw=Zt.slice(e.start,e.end),e.regex&&(this.regex=e.regex),this.finish(),this},finishMemberExpression:function(e,t,n){return this.type=Xt.MemberExpression,this.computed="["===e,this.object=t,this.property=n,this.finish(),this},finishNewExpression:function(e,t){return this.type=Xt.NewExpression,this.callee=e,this.arguments=t,this.finish(),this},finishObjectExpression:function(e){return this.type=Xt.ObjectExpression,this.properties=e,this.finish(),this},finishObjectPattern:function(e){return this.type=Xt.ObjectPattern,this.properties=e,this.finish(),this},finishPostfixExpression:function(e,t){return this.type=Xt.UpdateExpression,this.operator=e,this.argument=t,this.prefix=!1,this.finish(),this},finishProgram:function(e){return this.type=Xt.Program,this.body=e,"module"===tn&&(this.sourceType=tn),this.finish(),this},finishProperty:function(e,t,n,i,r,a){return this.type=Xt.Property,this.key=t,this.computed=n,this.value=i,this.kind=e,this.method=r,this.shorthand=a,this.finish(),this},finishRestElement:function(e){return this.type=Xt.RestElement,this.argument=e,this.finish(),this},finishReturnStatement:function(e){return this.type=Xt.ReturnStatement,this.argument=e,this.finish(),this},finishSequenceExpression:function(e){return this.type=Xt.SequenceExpression,this.expressions=e,this.finish(),this},finishSpreadElement:function(e){return this.type=Xt.SpreadElement,this.argument=e,this.finish(),this},finishSwitchCase:function(e,t){return this.type=Xt.SwitchCase,this.test=e,this.consequent=t,this.finish(),this},finishSuper:function(){return this.type=Xt.Super,this.finish(),this},finishSwitchStatement:function(e,t){return this.type=Xt.SwitchStatement,this.discriminant=e,this.cases=t,this.finish(),this},finishTaggedTemplateExpression:function(e,t){return this.type=Xt.TaggedTemplateExpression,this.tag=e,this.quasi=t,this.finish(),this},finishTemplateElement:function(e,t){return this.type=Xt.TemplateElement,this.value=e,this.tail=t,this.finish(),this},finishTemplateLiteral:function(e,t){return this.type=Xt.TemplateLiteral,this.quasis=e,this.expressions=t,this.finish(),this},finishThisExpression:function(){return this.type=Xt.ThisExpression,this.finish(),this},finishThrowStatement:function(e){return this.type=Xt.ThrowStatement,this.argument=e,this.finish(),this},finishTryStatement:function(e,t,n){return this.type=Xt.TryStatement,this.block=e,this.guardedHandlers=[],this.handlers=t?[t]:[],this.handler=t,this.finalizer=n,this.finish(),this},finishUnaryExpression:function(e,t){return this.type="++"===e||"--"===e?Xt.UpdateExpression:Xt.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0,this.finish(),this},finishVariableDeclaration:function(e){return this.type=Xt.VariableDeclaration,this.declarations=e,this.kind="var",this.finish(),this},finishLexicalDeclaration:function(e,t){return this.type=Xt.VariableDeclaration,this.declarations=e,this.kind=t,this.finish(),this},finishVariableDeclarator:function(e,t){return this.type=Xt.VariableDeclarator,this.id=e,this.init=t,this.finish(),this},finishWhileStatement:function(e,t){return this.type=Xt.WhileStatement,this.test=e,this.body=t,this.finish(),this},finishWithStatement:function(e,t){return this.type=Xt.WithStatement,this.object=e,this.body=t,this.finish(),this},finishExportSpecifier:function(e,t){return this.type=Xt.ExportSpecifier,this.exported=t||e,this.local=e,this.finish(),this},finishImportDefaultSpecifier:function(e){return this.type=Xt.ImportDefaultSpecifier,this.local=e,this.finish(),this},finishImportNamespaceSpecifier:function(e){return this.type=Xt.ImportNamespaceSpecifier,this.local=e,this.finish(),this},finishExportNamedDeclaration:function(e,t,n){return this.type=Xt.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=n,this.finish(),this},finishExportDefaultDeclaration:function(e){return this.type=Xt.ExportDefaultDeclaration,this.declaration=e,this.finish(),this},finishExportAllDeclaration:function(e){return this.type=Xt.ExportAllDeclaration,this.source=e,this.finish(),this},finishImportSpecifier:function(e,t){return this.type=Xt.ImportSpecifier,this.local=e||t,this.imported=t,this.finish(),this},finishImportDeclaration:function(e,t){return this.type=Xt.ImportDeclaration,this.specifiers=e,this.source=t,this.finish(),this}},e.version="2.2.0",e.tokenize=qt,e.parse=zt,e.Syntax=function(){var e,t={};"function"==typeof Object.create&&(t=Object.create(null));for(e in Xt)Xt.hasOwnProperty(e)&&(t[e]=Xt[e]);return"function"==typeof Object.freeze&&Object.freeze(t),t}()});

},{}],52:[function(require,module,exports){
"use strict";var _={cloneDeep:require("lodash-compat/lang/cloneDeep"),each:require("lodash-compat/collection/each"),indexOf:require("lodash-compat/array/indexOf"),isArray:require("lodash-compat/lang/isArray"),isFunction:require("lodash-compat/lang/isFunction"),isPlainObject:require("lodash-compat/lang/isPlainObject"),isString:require("lodash-compat/lang/isString"),isUndefined:require("lodash-compat/lang/isUndefined"),keys:require("lodash-compat/object/keys"),map:require("lodash-compat/collection/map")},async=require("async"),request=require("superagent"),traverse=require("traverse"),remoteCache={},supportedSchemes=["http","https"],getRemoteJson=function(e,r,t){var n,i,o=e.split("#")[0],s=remoteCache[o];_.isUndefined(s)?(i=request.get(e).set("user-agent","whitlockjc/json-refs"),_.isUndefined(r.prepareRequest)||r.prepareRequest(i,e),_.isFunction(i.buffer)&&i.buffer(!0),i.end(function(i,a){if(i)n=i;else if(a.error)n=a.error;else if(_.isUndefined(r.processContent))try{s=JSON.parse(a.text)}catch(u){n=u}else try{s=r.processContent(a.text,e,a)}catch(u){n=u}remoteCache[o]=s,t(n,s)})):t(n,s)};module.exports.clearCache=function(){remoteCache={}};var isJsonReference=module.exports.isJsonReference=function(e){return _.isPlainObject(e)&&_.isString(e.$ref)},pathToPointer=module.exports.pathToPointer=function(e){if(_.isUndefined(e))throw new Error("path is required");if(!_.isArray(e))throw new Error("path must be an array");var r="#";return e.length>0&&(r+="/"+_.map(e,function(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}).join("/")),r},findRefs=module.exports.findRefs=function(e){if(_.isUndefined(e))throw new Error("json is required");if(!_.isPlainObject(e))throw new Error("json must be an object");return traverse(e).reduce(function(e){var r=this.node;return"$ref"===this.key&&isJsonReference(this.parent.node)&&(e[pathToPointer(this.path)]=r),e},{})},isRemotePointer=module.exports.isRemotePointer=function(e){if(_.isUndefined(e))throw new Error("ptr is required");if(!_.isString(e))throw new Error("ptr must be a string");return/^(([a-zA-Z0-9+.-]+):\/\/|\.{1,2}\/)/.test(e)},pathFromPointer=module.exports.pathFromPointer=function(e){if(_.isUndefined(e))throw new Error("ptr is required");if(!_.isString(e))throw new Error("ptr must be a string");var r=[];return isRemotePointer(e)?r=e:"#"===e.charAt(0)&&"#"!==e&&(r=_.map(e.substring(1).split("/"),function(e){return e.replace(/~0/g,"~").replace(/~1/g,"/")}),r.length>1&&r.shift()),r},resolveRefs=module.exports.resolveRefs=function e(r,t,n){if(arguments.length<3&&(n=arguments[1],t={}),_.isUndefined(r))throw new Error("json is required");if(!_.isPlainObject(r))throw new Error("json must be an object");if(!_.isPlainObject(t))throw new Error("options must be an object");if(_.isUndefined(n))throw new Error("done is required");if(!_.isFunction(n))throw new Error("done must be a function");if(!_.isUndefined(t.prepareRequest)&&!_.isFunction(t.prepareRequest))throw new Error("options.prepareRequest must be a function");if(!_.isUndefined(t.processContent)&&!_.isFunction(t.processContent))throw new Error("options.processContent must be a function");var i,o=findRefs(r),s=function(e){return e.map(function(){this.circular&&this.update(traverse(this.node).map(function(){this.circular&&this.parent.remove()}))})},a={};if(Object.keys(o).length>0){i=traverse(_.cloneDeep(r));var u=function(e,r,t,n){var i,o,s,u={ref:t},c=!1;t=-1===t.indexOf("#")?"#":t.substring(t.indexOf("#")),o=pathFromPointer(n),i=o.slice(0,o.length-1),0===i.length?(c=!_.isUndefined(r.value),s=r.value,e.value=s):(c=!r.has(pathFromPointer(t)),s=r.get(pathFromPointer(t)),e.set(i,s)),c||(u.value=s),a[n]=u},c={};_.each(o,function(e,r){isRemotePointer(e)?c[r]=e:u(i,i,e,r)}),async.map(_.keys(c),function(r,n){var o=c[r],s=o.split(":")[0];"."===o.charAt(0)||-1===_.indexOf(supportedSchemes,s)?n():getRemoteJson(o,t,function(s,a){s?n(s):e(a,t,function(e,t){delete c[r],e?n(e):(u(i,traverse(t),o,r),n())})})},function(e){e?n(e):n(void 0,s(i),a)})}else n(void 0,r,a)};

},{"async":53,"lodash-compat/array/indexOf":133,"lodash-compat/collection/each":135,"lodash-compat/collection/map":137,"lodash-compat/lang/cloneDeep":190,"lodash-compat/lang/isArray":192,"lodash-compat/lang/isFunction":193,"lodash-compat/lang/isPlainObject":196,"lodash-compat/lang/isString":197,"lodash-compat/lang/isUndefined":199,"lodash-compat/object/keys":200,"superagent":54,"traverse":57}],53:[function(require,module,exports){
(function (process){
!function(){function n(n){var e=!1;return function(){if(e)throw new Error("Callback was already called.");e=!0,n.apply(t,arguments)}}var t,e,r={};t=this,null!=t&&(e=t.async),r.noConflict=function(){return t.async=e,r};var u=Object.prototype.toString,i=Array.isArray||function(n){return"[object Array]"===u.call(n)},c=function(n,t){if(n.forEach)return n.forEach(t);for(var e=0;e<n.length;e+=1)t(n[e],e,n)},a=function(n,t){if(n.map)return n.map(t);var e=[];return c(n,function(n,r,u){e.push(t(n,r,u))}),e},o=function(n,t,e){return n.reduce?n.reduce(t,e):(c(n,function(n,r,u){e=t(e,n,r,u)}),e)},l=function(n){if(Object.keys)return Object.keys(n);var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t};"undefined"!=typeof process&&process.nextTick?(r.nextTick=process.nextTick,"undefined"!=typeof setImmediate?r.setImmediate=function(n){setImmediate(n)}:r.setImmediate=r.nextTick):"function"==typeof setImmediate?(r.nextTick=function(n){setImmediate(n)},r.setImmediate=r.nextTick):(r.nextTick=function(n){setTimeout(n,0)},r.setImmediate=r.nextTick),r.each=function(t,e,r){function u(n){n?(r(n),r=function(){}):(i+=1,i>=t.length&&r())}if(r=r||function(){},!t.length)return r();var i=0;c(t,function(t){e(t,n(u))})},r.forEach=r.each,r.eachSeries=function(n,t,e){if(e=e||function(){},!n.length)return e();var r=0,u=function(){t(n[r],function(t){t?(e(t),e=function(){}):(r+=1,r>=n.length?e():u())})};u()},r.forEachSeries=r.eachSeries,r.eachLimit=function(n,t,e,r){var u=f(t);u.apply(null,[n,e,r])},r.forEachLimit=r.eachLimit;var f=function(n){return function(t,e,r){if(r=r||function(){},!t.length||0>=n)return r();var u=0,i=0,c=0;!function a(){if(u>=t.length)return r();for(;n>c&&i<t.length;)i+=1,c+=1,e(t[i-1],function(n){n?(r(n),r=function(){}):(u+=1,c-=1,u>=t.length?r():a())})}()}},s=function(n){return function(){var t=Array.prototype.slice.call(arguments);return n.apply(null,[r.each].concat(t))}},p=function(n,t){return function(){var e=Array.prototype.slice.call(arguments);return t.apply(null,[f(n)].concat(e))}},d=function(n){return function(){var t=Array.prototype.slice.call(arguments);return n.apply(null,[r.eachSeries].concat(t))}},y=function(n,t,e,r){if(t=a(t,function(n,t){return{index:t,value:n}}),r){var u=[];n(t,function(n,t){e(n.value,function(e,r){u[n.index]=r,t(e)})},function(n){r(n,u)})}else n(t,function(n,t){e(n.value,function(n){t(n)})})};r.map=s(y),r.mapSeries=d(y),r.mapLimit=function(n,t,e,r){return m(t)(n,e,r)};var m=function(n){return p(n,y)};r.reduce=function(n,t,e,u){r.eachSeries(n,function(n,r){e(t,n,function(n,e){t=e,r(n)})},function(n){u(n,t)})},r.inject=r.reduce,r.foldl=r.reduce,r.reduceRight=function(n,t,e,u){var i=a(n,function(n){return n}).reverse();r.reduce(i,t,e,u)},r.foldr=r.reduceRight;var v=function(n,t,e,r){var u=[];t=a(t,function(n,t){return{index:t,value:n}}),n(t,function(n,t){e(n.value,function(e){e&&u.push(n),t()})},function(n){r(a(u.sort(function(n,t){return n.index-t.index}),function(n){return n.value}))})};r.filter=s(v),r.filterSeries=d(v),r.select=r.filter,r.selectSeries=r.filterSeries;var h=function(n,t,e,r){var u=[];t=a(t,function(n,t){return{index:t,value:n}}),n(t,function(n,t){e(n.value,function(e){e||u.push(n),t()})},function(n){r(a(u.sort(function(n,t){return n.index-t.index}),function(n){return n.value}))})};r.reject=s(h),r.rejectSeries=d(h);var g=function(n,t,e,r){n(t,function(n,t){e(n,function(e){e?(r(n),r=function(){}):t()})},function(n){r()})};r.detect=s(g),r.detectSeries=d(g),r.some=function(n,t,e){r.each(n,function(n,r){t(n,function(n){n&&(e(!0),e=function(){}),r()})},function(n){e(!1)})},r.any=r.some,r.every=function(n,t,e){r.each(n,function(n,r){t(n,function(n){n||(e(!1),e=function(){}),r()})},function(n){e(!0)})},r.all=r.every,r.sortBy=function(n,t,e){r.map(n,function(n,e){t(n,function(t,r){t?e(t):e(null,{value:n,criteria:r})})},function(n,t){if(n)return e(n);var r=function(n,t){var e=n.criteria,r=t.criteria;return r>e?-1:e>r?1:0};e(null,a(t.sort(r),function(n){return n.value}))})},r.auto=function(n,t){t=t||function(){};var e=l(n),u=e.length;if(!u)return t();var a={},f=[],s=function(n){f.unshift(n)},p=function(n){for(var t=0;t<f.length;t+=1)if(f[t]===n)return void f.splice(t,1)},d=function(){u--,c(f.slice(0),function(n){n()})};s(function(){if(!u){var n=t;t=function(){},n(null,a)}}),c(e,function(e){var u=i(n[e])?n[e]:[n[e]],f=function(n){var u=Array.prototype.slice.call(arguments,1);if(u.length<=1&&(u=u[0]),n){var i={};c(l(a),function(n){i[n]=a[n]}),i[e]=u,t(n,i),t=function(){}}else a[e]=u,r.setImmediate(d)},y=u.slice(0,Math.abs(u.length-1))||[],m=function(){return o(y,function(n,t){return n&&a.hasOwnProperty(t)},!0)&&!a.hasOwnProperty(e)};if(m())u[u.length-1](f,a);else{var v=function(){m()&&(p(v),u[u.length-1](f,a))};s(v)}})},r.retry=function(n,t,e){var u=5,i=[];"function"==typeof n&&(e=t,t=n,n=u),n=parseInt(n,10)||u;var c=function(u,c){for(var a=function(n,t){return function(e){n(function(n,r){e(!n||t,{err:n,result:r})},c)}};n;)i.push(a(t,!(n-=1)));r.series(i,function(n,t){t=t[t.length-1],(u||e)(t.err,t.result)})};return e?c():c},r.waterfall=function(n,t){if(t=t||function(){},!i(n)){var e=new Error("First argument to waterfall must be an array of functions");return t(e)}if(!n.length)return t();var u=function(n){return function(e){if(e)t.apply(null,arguments),t=function(){};else{var i=Array.prototype.slice.call(arguments,1),c=n.next();i.push(c?u(c):t),r.setImmediate(function(){n.apply(null,i)})}}};u(r.iterator(n))()};var k=function(n,t,e){if(e=e||function(){},i(t))n.map(t,function(n,t){n&&n(function(n){var e=Array.prototype.slice.call(arguments,1);e.length<=1&&(e=e[0]),t.call(null,n,e)})},e);else{var r={};n.each(l(t),function(n,e){t[n](function(t){var u=Array.prototype.slice.call(arguments,1);u.length<=1&&(u=u[0]),r[n]=u,e(t)})},function(n){e(n,r)})}};r.parallel=function(n,t){k({map:r.map,each:r.each},n,t)},r.parallelLimit=function(n,t,e){k({map:m(t),each:f(t)},n,e)},r.series=function(n,t){if(t=t||function(){},i(n))r.mapSeries(n,function(n,t){n&&n(function(n){var e=Array.prototype.slice.call(arguments,1);e.length<=1&&(e=e[0]),t.call(null,n,e)})},t);else{var e={};r.eachSeries(l(n),function(t,r){n[t](function(n){var u=Array.prototype.slice.call(arguments,1);u.length<=1&&(u=u[0]),e[t]=u,r(n)})},function(n){t(n,e)})}},r.iterator=function(n){var t=function(e){var r=function(){return n.length&&n[e].apply(null,arguments),r.next()};return r.next=function(){return e<n.length-1?t(e+1):null},r};return t(0)},r.apply=function(n){var t=Array.prototype.slice.call(arguments,1);return function(){return n.apply(null,t.concat(Array.prototype.slice.call(arguments)))}};var A=function(n,t,e,r){var u=[];n(t,function(n,t){e(n,function(n,e){u=u.concat(e||[]),t(n)})},function(n){r(n,u)})};r.concat=s(A),r.concatSeries=d(A),r.whilst=function(n,t,e){n()?t(function(u){return u?e(u):void r.whilst(n,t,e)}):e()},r.doWhilst=function(n,t,e){n(function(u){if(u)return e(u);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?r.doWhilst(n,t,e):e()})},r.until=function(n,t,e){n()?e():t(function(u){return u?e(u):void r.until(n,t,e)})},r.doUntil=function(n,t,e){n(function(u){if(u)return e(u);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?e():r.doUntil(n,t,e)})},r.queue=function(t,e){function u(n,t,e,u){return n.started||(n.started=!0),i(t)||(t=[t]),0==t.length?r.setImmediate(function(){n.drain&&n.drain()}):void c(t,function(t){var i={data:t,callback:"function"==typeof u?u:null};e?n.tasks.unshift(i):n.tasks.push(i),n.saturated&&n.tasks.length===n.concurrency&&n.saturated(),r.setImmediate(n.process)})}void 0===e&&(e=1);var a=0,o={tasks:[],concurrency:e,saturated:null,empty:null,drain:null,started:!1,paused:!1,push:function(n,t){u(o,n,!1,t)},kill:function(){o.drain=null,o.tasks=[]},unshift:function(n,t){u(o,n,!0,t)},process:function(){if(!o.paused&&a<o.concurrency&&o.tasks.length){var e=o.tasks.shift();o.empty&&0===o.tasks.length&&o.empty(),a+=1;var r=function(){a-=1,e.callback&&e.callback.apply(e,arguments),o.drain&&o.tasks.length+a===0&&o.drain(),o.process()},u=n(r);t(e.data,u)}},length:function(){return o.tasks.length},running:function(){return a},idle:function(){return o.tasks.length+a===0},pause:function(){o.paused!==!0&&(o.paused=!0,o.process())},resume:function(){o.paused!==!1&&(o.paused=!1,o.process())}};return o},r.priorityQueue=function(n,t){function e(n,t){return n.priority-t.priority}function u(n,t,e){for(var r=-1,u=n.length-1;u>r;){var i=r+(u-r+1>>>1);e(t,n[i])>=0?r=i:u=i-1}return r}function a(n,t,a,o){return n.started||(n.started=!0),i(t)||(t=[t]),0==t.length?r.setImmediate(function(){n.drain&&n.drain()}):void c(t,function(t){var i={data:t,priority:a,callback:"function"==typeof o?o:null};n.tasks.splice(u(n.tasks,i,e)+1,0,i),n.saturated&&n.tasks.length===n.concurrency&&n.saturated(),r.setImmediate(n.process)})}var o=r.queue(n,t);return o.push=function(n,t,e){a(o,n,t,e)},delete o.unshift,o},r.cargo=function(n,t){var e=!1,u=[],o={tasks:u,payload:t,saturated:null,empty:null,drain:null,drained:!0,push:function(n,e){i(n)||(n=[n]),c(n,function(n){u.push({data:n,callback:"function"==typeof e?e:null}),o.drained=!1,o.saturated&&u.length===t&&o.saturated()}),r.setImmediate(o.process)},process:function l(){if(!e){if(0===u.length)return o.drain&&!o.drained&&o.drain(),void(o.drained=!0);var r="number"==typeof t?u.splice(0,t):u.splice(0,u.length),i=a(r,function(n){return n.data});o.empty&&o.empty(),e=!0,n(i,function(){e=!1;var n=arguments;c(r,function(t){t.callback&&t.callback.apply(null,n)}),l()})}},length:function(){return u.length},running:function(){return e}};return o};var x=function(n){return function(t){var e=Array.prototype.slice.call(arguments,1);t.apply(null,e.concat([function(t){var e=Array.prototype.slice.call(arguments,1);"undefined"!=typeof console&&(t?console.error&&console.error(t):console[n]&&c(e,function(t){console[n](t)}))}]))}};r.log=x("log"),r.dir=x("dir"),r.memoize=function(n,t){var e={},u={};t=t||function(n){return n};var i=function(){var i=Array.prototype.slice.call(arguments),c=i.pop(),a=t.apply(null,i);a in e?r.nextTick(function(){c.apply(null,e[a])}):a in u?u[a].push(c):(u[a]=[c],n.apply(null,i.concat([function(){e[a]=arguments;var n=u[a];delete u[a];for(var t=0,r=n.length;r>t;t++)n[t].apply(null,arguments)}])))};return i.memo=e,i.unmemoized=n,i},r.unmemoize=function(n){return function(){return(n.unmemoized||n).apply(null,arguments)}},r.times=function(n,t,e){for(var u=[],i=0;n>i;i++)u.push(i);return r.map(u,t,e)},r.timesSeries=function(n,t,e){for(var u=[],i=0;n>i;i++)u.push(i);return r.mapSeries(u,t,e)},r.seq=function(){var n=arguments;return function(){var t=this,e=Array.prototype.slice.call(arguments),u=e.pop();r.reduce(n,e,function(n,e,r){e.apply(t,n.concat([function(){var n=arguments[0],t=Array.prototype.slice.call(arguments,1);r(n,t)}]))},function(n,e){u.apply(t,[n].concat(e))})}},r.compose=function(){return r.seq.apply(null,Array.prototype.reverse.call(arguments))};var S=function(n,t){var e=function(){var e=this,r=Array.prototype.slice.call(arguments),u=r.pop();return n(t,function(n,t){n.apply(e,r.concat([t]))},u)};if(arguments.length>2){var r=Array.prototype.slice.call(arguments,2);return e.apply(this,r)}return e};r.applyEach=s(S),r.applyEachSeries=d(S),r.forever=function(n,t){function e(r){if(r){if(t)return t(r);throw r}n(e)}e()},"undefined"!=typeof module&&module.exports?module.exports=r:"undefined"!=typeof define&&define.amd?define([],function(){return r}):t.async=r}();

}).call(this,require('_process'))
},{"_process":16}],54:[function(require,module,exports){
function noop(){}function isHost(t){var e={}.toString.call(t);switch(e){case"[object File]":case"[object Blob]":case"[object FormData]":return!0;default:return!1}}function getXHR(){if(root.XMLHttpRequest&&("file:"!=root.location.protocol||!root.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(t){}return!1}function isObject(t){return t===Object(t)}function serialize(t){if(!isObject(t))return t;var e=[];for(var r in t)null!=t[r]&&e.push(encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return e.join("&")}function parseString(t){for(var e,r,s={},i=t.split("&"),o=0,n=i.length;n>o;++o)r=i[o],e=r.split("="),s[decodeURIComponent(e[0])]=decodeURIComponent(e[1]);return s}function parseHeader(t){var e,r,s,i,o=t.split(/\r?\n/),n={};o.pop();for(var u=0,a=o.length;a>u;++u)r=o[u],e=r.indexOf(":"),s=r.slice(0,e).toLowerCase(),i=trim(r.slice(e+1)),n[s]=i;return n}function type(t){return t.split(/ *; */).shift()}function params(t){return reduce(t.split(/ *; */),function(t,e){var r=e.split(/ *= */),s=r.shift(),i=r.shift();return s&&i&&(t[s]=i),t},{})}function Response(t,e){e=e||{},this.req=t,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method?this.xhr.responseText:null,this.setStatusProperties(this.xhr.status),this.header=this.headers=parseHeader(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this.setHeaderProperties(this.header),this.body="HEAD"!=this.req.method?this.parseBody(this.text):null}function Request(t,e){var r=this;Emitter.call(this),this._query=this._query||[],this.method=t,this.url=e,this.header={},this._header={},this.on("end",function(){var t=null,e=null;try{e=new Response(r)}catch(s){t=new Error("Parser is unable to parse the response"),t.parse=!0,t.original=s}r.callback(t,e)})}function request(t,e){return"function"==typeof e?new Request("GET",t).end(e):1==arguments.length?new Request("GET",t):new Request(t,e)}var Emitter=require("emitter"),reduce=require("reduce"),root="undefined"==typeof window?this:window,trim="".trim?function(t){return t.trim()}:function(t){return t.replace(/(^\s*|\s*$)/g,"")};request.serializeObject=serialize,request.parseString=parseString,request.types={html:"text/html",json:"application/json",xml:"application/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},request.serialize={"application/x-www-form-urlencoded":serialize,"application/json":JSON.stringify},request.parse={"application/x-www-form-urlencoded":parseString,"application/json":JSON.parse},Response.prototype.get=function(t){return this.header[t.toLowerCase()]},Response.prototype.setHeaderProperties=function(t){var e=this.header["content-type"]||"";this.type=type(e);var r=params(e);for(var s in r)this[s]=r[s]},Response.prototype.parseBody=function(t){var e=request.parse[this.type];return e&&t&&t.length?e(t):null},Response.prototype.setStatusProperties=function(t){var e=t/100|0;this.status=t,this.statusType=e,this.info=1==e,this.ok=2==e,this.clientError=4==e,this.serverError=5==e,this.error=4==e||5==e?this.toError():!1,this.accepted=202==t,this.noContent=204==t||1223==t,this.badRequest=400==t,this.unauthorized=401==t,this.notAcceptable=406==t,this.notFound=404==t,this.forbidden=403==t},Response.prototype.toError=function(){var t=this.req,e=t.method,r=t.url,s="cannot "+e+" "+r+" ("+this.status+")",i=new Error(s);return i.status=this.status,i.method=e,i.url=r,i},request.Response=Response,Emitter(Request.prototype),Request.prototype.use=function(t){return t(this),this},Request.prototype.timeout=function(t){return this._timeout=t,this},Request.prototype.clearTimeout=function(){return this._timeout=0,clearTimeout(this._timer),this},Request.prototype.abort=function(){return this.aborted?void 0:(this.aborted=!0,this.xhr.abort(),this.clearTimeout(),this.emit("abort"),this)},Request.prototype.set=function(t,e){if(isObject(t)){for(var r in t)this.set(r,t[r]);return this}return this._header[t.toLowerCase()]=e,this.header[t]=e,this},Request.prototype.unset=function(t){return delete this._header[t.toLowerCase()],delete this.header[t],this},Request.prototype.getHeader=function(t){return this._header[t.toLowerCase()]},Request.prototype.type=function(t){return this.set("Content-Type",request.types[t]||t),this},Request.prototype.accept=function(t){return this.set("Accept",request.types[t]||t),this},Request.prototype.auth=function(t,e){var r=btoa(t+":"+e);return this.set("Authorization","Basic "+r),this},Request.prototype.query=function(t){return"string"!=typeof t&&(t=serialize(t)),t&&this._query.push(t),this},Request.prototype.field=function(t,e){return this._formData||(this._formData=new FormData),this._formData.append(t,e),this},Request.prototype.attach=function(t,e,r){return this._formData||(this._formData=new FormData),this._formData.append(t,e,r),this},Request.prototype.send=function(t){var e=isObject(t),r=this.getHeader("Content-Type");if(e&&isObject(this._data))for(var s in t)this._data[s]=t[s];else"string"==typeof t?(r||this.type("form"),r=this.getHeader("Content-Type"),"application/x-www-form-urlencoded"==r?this._data=this._data?this._data+"&"+t:t:this._data=(this._data||"")+t):this._data=t;return e?(r||this.type("json"),this):this},Request.prototype.callback=function(t,e){var r=this._callback;return this.clearTimeout(),2==r.length?r(t,e):t?this.emit("error",t):void r(e)},Request.prototype.crossDomainError=function(){var t=new Error("Origin is not allowed by Access-Control-Allow-Origin");t.crossDomain=!0,this.callback(t)},Request.prototype.timeoutError=function(){var t=this._timeout,e=new Error("timeout of "+t+"ms exceeded");e.timeout=t,this.callback(e)},Request.prototype.withCredentials=function(){return this._withCredentials=!0,this},Request.prototype.end=function(t){var e=this,r=this.xhr=getXHR(),s=this._query.join("&"),i=this._timeout,o=this._formData||this._data;if(this._callback=t||noop,r.onreadystatechange=function(){return 4==r.readyState?0==r.status?e.aborted?e.timeoutError():e.crossDomainError():void e.emit("end"):void 0},r.upload&&(r.upload.onprogress=function(t){t.percent=t.loaded/t.total*100,e.emit("progress",t)}),i&&!this._timer&&(this._timer=setTimeout(function(){e.abort()},i)),s&&(s=request.serializeObject(s),this.url+=~this.url.indexOf("?")?"&"+s:"?"+s),r.open(this.method,this.url,!0),this._withCredentials&&(r.withCredentials=!0),"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof o&&!isHost(o)){var n=request.serialize[this.getHeader("Content-Type")];n&&(o=n(o))}for(var u in this.header)null!=this.header[u]&&r.setRequestHeader(u,this.header[u]);return this.emit("request",this),r.send(o),this},request.Request=Request,request.get=function(t,e,r){var s=request("GET",t);return"function"==typeof e&&(r=e,e=null),e&&s.query(e),r&&s.end(r),s},request.head=function(t,e,r){var s=request("HEAD",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.del=function(t,e){var r=request("DELETE",t);return e&&r.end(e),r},request.patch=function(t,e,r){var s=request("PATCH",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.post=function(t,e,r){var s=request("POST",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.put=function(t,e,r){var s=request("PUT",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},module.exports=request;

},{"emitter":55,"reduce":56}],55:[function(require,module,exports){
function Emitter(t){return t?mixin(t):void 0}function mixin(t){for(var e in Emitter.prototype)t[e]=Emitter.prototype[e];return t}module.exports=Emitter,Emitter.prototype.on=Emitter.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks[t]=this._callbacks[t]||[]).push(e),this},Emitter.prototype.once=function(t,e){function i(){r.off(t,i),e.apply(this,arguments)}var r=this;return this._callbacks=this._callbacks||{},i.fn=e,this.on(t,i),this},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var i=this._callbacks[t];if(!i)return this;if(1==arguments.length)return delete this._callbacks[t],this;for(var r,s=0;s<i.length;s++)if(r=i[s],r===e||r.fn===e){i.splice(s,1);break}return this},Emitter.prototype.emit=function(t){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),i=this._callbacks[t];if(i){i=i.slice(0);for(var r=0,s=i.length;s>r;++r)i[r].apply(this,e)}return this},Emitter.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks[t]||[]},Emitter.prototype.hasListeners=function(t){return!!this.listeners(t).length};

},{}],56:[function(require,module,exports){
module.exports=function(l,n,e){for(var r=0,t=l.length,u=3==arguments.length?e:l[r++];t>r;)u=n.call(null,u,l[r],++r,l);return u};

},{}],57:[function(require,module,exports){
function Traverse(e){this.value=e}function walk(e,t,r){var o=[],n=[],a=!0;return function i(e){function c(){if("object"==typeof l.node&&null!==l.node){l.keys&&l.node_===l.node||(l.keys=objectKeys(l.node)),l.isLeaf=0==l.keys.length;for(var t=0;t<n.length;t++)if(n[t].node_===e){l.circular=n[t];break}}else l.isLeaf=!0,l.keys=null;l.notLeaf=!l.isLeaf,l.notRoot=!l.isRoot}var s=r?copy(e):e,u={},f=!0,l={node:s,node_:e,path:[].concat(o),parent:n[n.length-1],parents:n,key:o.slice(-1)[0],isRoot:0===o.length,level:o.length,circular:null,update:function(e,t){l.isRoot||(l.parent.node[l.key]=e),l.node=e,t&&(f=!1)},"delete":function(e){delete l.parent.node[l.key],e&&(f=!1)},remove:function(e){isArray(l.parent.node)?l.parent.node.splice(l.key,1):delete l.parent.node[l.key],e&&(f=!1)},keys:null,before:function(e){u.before=e},after:function(e){u.after=e},pre:function(e){u.pre=e},post:function(e){u.post=e},stop:function(){a=!1},block:function(){f=!1}};if(!a)return l;c();var p=t.call(l,l.node);return void 0!==p&&l.update&&l.update(p),u.before&&u.before.call(l,l.node),f?("object"!=typeof l.node||null===l.node||l.circular||(n.push(l),c(),forEach(l.keys,function(e,t){o.push(e),u.pre&&u.pre.call(l,l.node[e],e);var n=i(l.node[e]);r&&hasOwnProperty.call(l.node,e)&&(l.node[e]=n.node),n.isLast=t==l.keys.length-1,n.isFirst=0==t,u.post&&u.post.call(l,n),o.pop()}),n.pop()),u.after&&u.after.call(l,l.node),l):l}(e).node}function copy(e){if("object"==typeof e&&null!==e){var t;if(isArray(e))t=[];else if(isDate(e))t=new Date(e.getTime?e.getTime():e);else if(isRegExp(e))t=new RegExp(e);else if(isError(e))t={message:e.message};else if(isBoolean(e))t=new Boolean(e);else if(isNumber(e))t=new Number(e);else if(isString(e))t=new String(e);else if(Object.create&&Object.getPrototypeOf)t=Object.create(Object.getPrototypeOf(e));else if(e.constructor===Object)t={};else{var r=e.constructor&&e.constructor.prototype||e.__proto__||{},o=function(){};o.prototype=r,t=new o}return forEach(objectKeys(e),function(r){t[r]=e[r]}),t}return e}function toS(e){return Object.prototype.toString.call(e)}function isDate(e){return"[object Date]"===toS(e)}function isRegExp(e){return"[object RegExp]"===toS(e)}function isError(e){return"[object Error]"===toS(e)}function isBoolean(e){return"[object Boolean]"===toS(e)}function isNumber(e){return"[object Number]"===toS(e)}function isString(e){return"[object String]"===toS(e)}var traverse=module.exports=function(e){return new Traverse(e)};Traverse.prototype.get=function(e){for(var t=this.value,r=0;r<e.length;r++){var o=e[r];if(!t||!hasOwnProperty.call(t,o)){t=void 0;break}t=t[o]}return t},Traverse.prototype.has=function(e){for(var t=this.value,r=0;r<e.length;r++){var o=e[r];if(!t||!hasOwnProperty.call(t,o))return!1;t=t[o]}return!0},Traverse.prototype.set=function(e,t){for(var r=this.value,o=0;o<e.length-1;o++){var n=e[o];hasOwnProperty.call(r,n)||(r[n]={}),r=r[n]}return r[e[o]]=t,t},Traverse.prototype.map=function(e){return walk(this.value,e,!0)},Traverse.prototype.forEach=function(e){return this.value=walk(this.value,e,!1),this.value},Traverse.prototype.reduce=function(e,t){var r=1===arguments.length,o=r?this.value:t;return this.forEach(function(t){this.isRoot&&r||(o=e.call(this,o,t))}),o},Traverse.prototype.paths=function(){var e=[];return this.forEach(function(t){e.push(this.path)}),e},Traverse.prototype.nodes=function(){var e=[];return this.forEach(function(t){e.push(this.node)}),e},Traverse.prototype.clone=function(){var e=[],t=[];return function r(o){for(var n=0;n<e.length;n++)if(e[n]===o)return t[n];if("object"==typeof o&&null!==o){var a=copy(o);return e.push(o),t.push(a),forEach(objectKeys(o),function(e){a[e]=r(o[e])}),e.pop(),t.pop(),a}return o}(this.value)};var objectKeys=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t},isArray=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},forEach=function(e,t){if(e.forEach)return e.forEach(t);for(var r=0;r<e.length;r++)t(e[r],r,e)};forEach(objectKeys(Traverse.prototype),function(e){traverse[e]=function(t){var r=[].slice.call(arguments,1),o=new Traverse(t);return o[e].apply(o,r)}});var hasOwnProperty=Object.hasOwnProperty||function(e,t){return t in e};

},{}],58:[function(require,module,exports){
"use strict";function generate(e,r){var t=deref();try{return Array.isArray(r)?traverse(t(e,r,!0)):(t.refs=r||{},traverse(t(e,!0)))}catch(a){throw a.path?new Error(a.message+" in /"+a.path.join("/")):a}}var container=require("./util/container"),traverse=require("./util/traverse"),formats=require("./util/formats"),deref=require("deref");generate.formats=formats,generate.extend=container.set,module.exports=generate;

},{"./util/container":67,"./util/formats":69,"./util/traverse":74,"deref":76}],59:[function(require,module,exports){
"use strict";function unique(r,e,t,i){function s(r){var e=JSON.stringify(r);-1===n.indexOf(e)&&(n.push(e),a.push(r))}var a=[],n=[];e.forEach(s);for(var o=100;a.length!==e.length&&(s(traverse(t.items||i,r)),o--););return a}var random=require("../util/random"),traverse=require("../util/traverse"),hasProps=require("../util/has-props"),ParseError=require("../util/error");module.exports=function(r,e){var t=[];if(!r.items&&!r.additionalItems){if(hasProps(r,"minItems","maxItems","uniqueItems"))throw new ParseError("missing items for "+JSON.stringify(r),e);return t}if(Array.isArray(r.items))return Array.prototype.concat.apply(t,r.items.map(function(r,t){return traverse(r,e.concat(["items",t]))}));for(var i=random(r.minItems,r.maxItems,1,5),s="object"==typeof r.additionalItems?r.additionalItems:{},a=t.length;i>a;a+=1)t.push(traverse(r.items||s,e.concat(["items",a])));return r.uniqueItems?unique(e.concat(["items"]),t,r,s):t};

},{"../util/error":68,"../util/has-props":70,"../util/random":73,"../util/traverse":74}],60:[function(require,module,exports){
"use strict";module.exports=function(){return Math.random()>.5};

},{}],61:[function(require,module,exports){
"use strict";var number=require("./number");module.exports=function(r){return r.hasPrecision=!1,Math.floor(number(r))};

},{"./number":63}],62:[function(require,module,exports){
"use strict";module.exports=function(){return null};

},{}],63:[function(require,module,exports){
"use strict";var MIN_INTEGER=-1e8,MAX_INTEGER=1e8,string=require("./string"),random=require("../util/random");module.exports=function(m){if(m.faker||m.chance)return string(m);var i="undefined"==typeof m.minimum?MIN_INTEGER:m.minimum,e="undefined"==typeof m.maximum?MAX_INTEGER:m.maximum;if(m.exclusiveMinimum&&m.minimum&&(i+=1),m.exclusiveMaximum&&m.maximum&&(e-=1),m.multipleOf){for(var r=random(Math.floor(i/m.multipleOf),Math.floor(e/m.multipleOf))*m.multipleOf;i>r;)r+=m.multipleOf;return r}return m.hasPrecision?random(!1,i,e):random(Math.random()>.5,i,e)};

},{"../util/random":73,"./string":65}],64:[function(require,module,exports){
"use strict";var container=require("../util/container"),random=require("../util/random"),traverse=require("../util/traverse"),hasProps=require("../util/has-props"),faker=container.get("faker"),RandExp=container.get("randexp"),randexp=RandExp.randexp,ParseError=require("../util/error");module.exports=function(r,e){var t={};if(!(r.properties||r.patternProperties||r.additionalProperties)){if(hasProps(r,"minProperties","maxProperties","dependencies","required"))throw new ParseError("missing properties for "+JSON.stringify(r),e);return t}var i=r.required||[],o=r.properties?Object.keys(r.properties):[];i.forEach(function(e){r.properties&&r.properties[e]&&(t[e]=r.properties[e])});var p=o.filter(function(r){return-1===i.indexOf(r)});r.patternProperties&&(p=Array.prototype.concat.apply(p,Object.keys(r.patternProperties)));var a=random(r.minProperties,r.maxProperties,0,p.length);random.shuffle(p).slice(0,a).forEach(function(e){r.properties&&r.properties[e]?t[e]=r.properties[e]:t[randexp(e)]=r.patternProperties[e]});var n=Object.keys(t).length,s="object"==typeof r.additionalProperties?r.additionalProperties:{};return a>n&&faker.lorem.words(a-n).forEach(function(r){t[r+randexp("\\w{1,10}")]=s}),traverse(t,e.concat(["properties"]))};

},{"../util/container":67,"../util/error":68,"../util/has-props":70,"../util/random":73,"../util/traverse":74}],65:[function(require,module,exports){
"use strict";function get(e,r){for(var n=r.split(".");n.length;){var a=n.shift();if(!e[a])break;e=e[a]}return e}function generate(e){if(e.use){var r=[],n=e.key;"object"==typeof n&&(n=Object.keys(n)[0],Array.isArray(e.key[n])?r=e.key[n]:r.push(e.key[n]));var a=get(e.gen,n);if("function"!=typeof a)throw new Error("unknown "+e.use+"-generator for "+JSON.stringify(e.key));return a.apply(e.gen,r)}switch(e.format){case"date-time":return new Date(random(0,1e14)).toISOString();case"email":case"hostname":case"ipv6":case"uri":return randexp(regexps[e.format]).replace(/\{(\w+)\}/,function(e,r){return randexp(regexps[r])});case"ipv4":return[0,0,0,0].map(function(){return random(0,255)}).join(".");default:var t=formats(e.format);if("function"!=typeof t)throw new Error("unknown generator for "+JSON.stringify(e.format));var o={faker:faker,chance:chance,randexp:randexp};return t(o,e)}}var container=require("../util/container"),faker=container.get("faker"),Chance=container.get("chance"),RandExp=container.get("randexp"),chance=new Chance,randexp=RandExp.randexp,random=require("../util/random"),formats=require("../util/formats"),regexps={email:"[a-zA-Z\\d][a-zA-Z\\d-]{1,13}[a-zA-Z\\d]@{hostname}",hostname:"[a-zA-Z]{1,33}\\.[a-z]{2,4}",ipv6:"[abcdef\\d]{4}(:[abcdef\\d]{4}){7}",uri:"[a-zA-Z\\d_][\\w\\/\\d_-]{1,40}"};module.exports=function(e){if(e.faker||e.chance)return generate({use:e.faker?"faker":"chance",gen:e.faker?faker:chance,key:e.faker||e.chance});if(e.format)return generate(e);if(e.pattern)return randexp(e.pattern);if(e.minLength||e.maxLength){var r=Math.max(0,e.minLength||0),n=random(r,e.maxLength);return randexp(".{"+r+","+n+"}")}return faker.lorem.words(random(1,5)).join(" ")};

},{"../util/container":67,"../util/formats":69,"../util/random":73}],66:[function(require,module,exports){
"use strict";function combine(o){var r=Array.prototype.slice.call(arguments,1);r.forEach(function(r){for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(o[t]=r[t])})}module.exports=combine;

},{}],67:[function(require,module,exports){
"use strict";var container={faker:require("faker"),chance:require("chance"),randexp:require("randexp")};module.exports={set:function(e,n){if("undefined"==typeof container[e])throw new ReferenceError('"'+e+"\" dependency doesn't exist.");container[e]=n(container[e])},get:function(e){return container[e]}};

},{"chance":75,"faker":82,"randexp":126}],68:[function(require,module,exports){
"use strict";function ParseError(r,e){this.message=r,this.path=e,this.name="ParseError"}ParseError.prototype=Error.prototype,module.exports=ParseError;

},{}],69:[function(require,module,exports){
"use strict";var registry={};module.exports=function(r,e){if(e)registry[r]=e;else if("object"==typeof r)for(var t in r)registry[t]=r[t];else if(r)return registry[r];return registry};

},{}],70:[function(require,module,exports){
"use strict";module.exports=function(e){return Array.prototype.slice.call(arguments,1).filter(function(t){return"undefined"!=typeof e[t]}).length>0};

},{}],71:[function(require,module,exports){
"use strict";function mayHaveType(e,r){return Object.keys(e).filter(function(e){return r.indexOf(e)>-1}).length>0}var inferredProperties={array:["additionalItems","items","maxItems","minItems","uniqueItems"],integer:["exclusiveMaximum","exclusiveMinimum","maximum","minimum","multipleOf"],object:["additionalProperties","dependencies","maxProperties","minProperties","patternProperties","properties","required"],string:["maxLength","menlength","pattern"]};inferredProperties.number=inferredProperties.integer,module.exports=function(e){for(var r in inferredProperties)if(mayHaveType(e,inferredProperties[r]))return r};

},{}],72:[function(require,module,exports){
"use strict";module.exports={array:require("../types/array"),"boolean":require("../types/boolean"),integer:require("../types/integer"),number:require("../types/number"),"null":require("../types/null"),object:require("../types/object"),string:require("../types/string")};

},{"../types/array":59,"../types/boolean":60,"../types/integer":61,"../types/null":62,"../types/number":63,"../types/object":64,"../types/string":65}],73:[function(require,module,exports){
"use strict";var container=require("./container"),faker=container.get("faker"),random=module.exports=function(n,r,e,a){var o=!0;return"boolean"==typeof n&&(o=n,n=arguments[1],r=arguments[2],e=arguments[3],a=arguments[4]),e="undefined"==typeof e?random.MIN_NUMBER:e,a="undefined"==typeof a?random.MAX_NUMBER:a,n="undefined"==typeof n?e:n,r="undefined"==typeof r?a:r,n>r&&(r+=n),faker.random.number({min:n,max:Math.max(r,n+1),precision:o?1:Math.random()})};random.shuffle=function(n){for(var r=n.slice(),e=n.length;e>0;){var a=Math.floor(Math.random()*e),o=r[--e];r[e]=r[a],r[a]=o}return r},random.pick=function(n){return n[Math.floor(Math.random()*n.length)]},random.MIN_NUMBER=-100,random.MAX_NUMBER=100;

},{"./container":67}],74:[function(require,module,exports){
"use strict";function reduce(r){var e=r.allOf||r.anyOf||r.oneOf;if(e&&e.length){(r.oneOf||r.anyOf)&&e.length&&(e=[random.pick(e)]),delete r.allOf,delete r.anyOf,delete r.oneOf;var n={};for(e.forEach(function(r){combine(n,r)}),combine(r,n);r.allOf||r.anyOf||r.oneOf;)reduce(r)}else for(var i in r){var a=r[i];"object"==typeof a&&"enum"!==i&&"required"!==i&&reduce(a)}}function traverse(r,e){var n=require("./primitives"),i={};if(Array.isArray(r)&&(i=[]),e=e||[],reduce(r),Array.isArray(r["enum"]))return random.pick(r["enum"]);var a=r.type;if(Array.isArray(a)?a=random.pick(a):"undefined"==typeof a&&(a=inferredType(r)||a),"string"==typeof a){if(!n[a])throw new ParseError("unknown primitive "+JSON.stringify(a),e.concat(["type"]));try{return n[a](r,e)}catch(o){if("undefined"==typeof o.path)throw new ParseError(o.message,e);throw o}}for(var t in r){var f=r[t];"object"==typeof f?i[t]=traverse(f,e.concat([t])):i[t]=f}return i}var random=require("./random"),combine=require("./combine"),ParseError=require("./error"),inferredType=require("./inferred");module.exports=traverse;

},{"./combine":66,"./error":68,"./inferred":71,"./primitives":72,"./random":73}],75:[function(require,module,exports){
(function (Buffer){
!function(){function a(e){if(!(this instanceof a))return null==e?new a:new a(e);if("function"==typeof e)return this.random=e,this;var n;arguments.length&&(this.seed=0);for(var i=0;i<arguments.length;i++){if(n=0,"string"==typeof arguments[i])for(var t=0;t<arguments[i].length;t++)n+=(arguments[i].length-t)*arguments[i].charCodeAt(t);else n=arguments[i];this.seed+=(arguments.length-i)*n}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function e(a,e){if(a||(a={}),e)for(var n in e)"undefined"==typeof a[n]&&(a[n]=e[n]);return a}function n(a,e){if(a)throw new RangeError(e)}function i(a){return function(){return this.natural(a)}}function t(a,e){for(var n,i=f(a),t=0,r=i.length;r>t;t++)n=i[t],e[n]=a[n]||e[n]}function r(a,e){for(var n=0,i=a.length;i>n;n++)e[n]=a[n]}function o(a,e){var n=Array.isArray(a),i=e||(n?new Array(a.length):{});return n?r(a,i):t(a,i),i}var s=9007199254740992,m=-s,l="0123456789",h="abcdefghijklmnopqrstuvwxyz",b=h.toUpperCase(),c=l+"abcdef",u=Array.prototype.slice;a.prototype.VERSION="0.7.5";var d=function(){throw new Error("No Base64 encoder available.")};!function(){"function"==typeof btoa?d=btoa:"function"==typeof Buffer&&(d=function(a){return new Buffer(a).toString("base64")})}(),a.prototype.bool=function(a){return a=e(a,{likelihood:50}),n(a.likelihood<0||a.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<a.likelihood},a.prototype.character=function(a){a=e(a),n(a.alpha&&a.symbols,"Chance: Cannot specify both alpha and symbols.");var i,t,r="!@#$%^&*()[]";return i="lower"===a.casing?h:"upper"===a.casing?b:h+b,t=a.pool?a.pool:a.alpha?i:a.symbols?r:i+l+r,t.charAt(this.natural({max:t.length-1}))},a.prototype.floating=function(a){a=e(a,{fixed:4}),n(a.fixed&&a.precision,"Chance: Cannot specify both fixed and precision.");var i,t=Math.pow(10,a.fixed),r=s/t,o=-r;n(a.min&&a.fixed&&a.min<o,"Chance: Min specified is out of range with fixed. Min should be, at least, "+o),n(a.max&&a.fixed&&a.max>r,"Chance: Max specified is out of range with fixed. Max should be, at most, "+r),a=e(a,{min:o,max:r}),i=this.integer({min:a.min*t,max:a.max*t});var m=(i/t).toFixed(a.fixed);return parseFloat(m)},a.prototype.integer=function(a){return a=e(a,{min:m,max:s}),n(a.min>a.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(a.max-a.min+1)+a.min)},a.prototype.natural=function(a){return a=e(a,{min:0,max:s}),n(a.min<0,"Chance: Min cannot be less than zero."),this.integer(a)},a.prototype.string=function(a){a=e(a,{length:this.natural({min:5,max:20})}),n(a.length<0,"Chance: Length cannot be less than zero.");var i=a.length,t=this.n(this.character,i,a);return t.join("")},a.prototype.capitalize=function(a){return a.charAt(0).toUpperCase()+a.substr(1)},a.prototype.mixin=function(e){for(var n in e)a.prototype[n]=e[n];return this},a.prototype.unique=function(a,i,t){n("function"!=typeof a,"Chance: The first argument must be a function."),t=e(t,{comparator:function(a,e){return-1!==a.indexOf(e)}});for(var r,o=[],s=0,m=50*i,l=u.call(arguments,2);o.length<i;)if(r=a.apply(this,l),t.comparator(o,r)||(o.push(r),s=0),++s>m)throw new RangeError("Chance: num is likely too large for sample set");return o},a.prototype.n=function(a,e){n("function"!=typeof a,"Chance: The first argument must be a function."),"undefined"==typeof e&&(e=1);var i=e,t=[],r=u.call(arguments,2);for(i=Math.max(0,i),null;i--;null)t.push(a.apply(this,r));return t},a.prototype.pad=function(a,e,n){return n=n||"0",a+="",a.length>=e?a:new Array(e-a.length+1).join(n)+a},a.prototype.pick=function(a,e){if(0===a.length)throw new RangeError("Chance: Cannot pick() from an empty array");return e&&1!==e?this.shuffle(a).slice(0,e):a[this.natural({max:a.length-1})]},a.prototype.shuffle=function(a){for(var e=a.slice(0),n=[],i=0,t=Number(e.length),r=0;t>r;r++)i=this.natural({max:e.length-1}),n[r]=e[i],e.splice(i,1);return n},a.prototype.weighted=function(a,e){if(a.length!==e.length)throw new RangeError("Chance: length of array and weights must match");for(var n=e.length-1;n>=0;--n)e[n]<=0&&(a.splice(n,1),e.splice(n,1));if(e.some(function(a){return 1>a})){var i=e.reduce(function(a,e){return a>e?e:a},e[0]),t=1/i;e=e.map(function(a){return a*t})}var r,o=e.reduce(function(a,e){return a+e},0),s=this.natural({min:1,max:o}),m=0;return e.some(function(e,n){return m+e>=s?(r=a[n],!0):(m+=e,!1)}),r},a.prototype.paragraph=function(a){a=e(a);var n=a.sentences||this.natural({min:3,max:7}),i=this.n(this.sentence,n);return i.join(" ")},a.prototype.sentence=function(a){a=e(a);var n,i=a.words||this.natural({min:12,max:18}),t=this.n(this.word,i);return n=t.join(" "),n=this.capitalize(n)+"."},a.prototype.syllable=function(a){a=e(a);for(var n,i=a.length||this.natural({min:2,max:3}),t="bcdfghjklmnprstvwz",r="aeiou",o=t+r,s="",m=0;i>m;m++)n=this.character(0===m?{pool:o}:-1===t.indexOf(n)?{pool:t}:{pool:r}),s+=n;return s},a.prototype.word=function(a){a=e(a),n(a.syllables&&a.length,"Chance: Cannot specify both syllables AND length.");var i=a.syllables||this.natural({min:1,max:3}),t="";if(a.length){do t+=this.syllable();while(t.length<a.length);t=t.substring(0,a.length)}else for(var r=0;i>r;r++)t+=this.syllable();return t},a.prototype.age=function(a){a=e(a);var n;switch(a.type){case"child":n={min:1,max:12};break;case"teen":n={min:13,max:19};break;case"adult":n={min:18,max:65};break;case"senior":n={min:65,max:100};break;case"all":n={min:1,max:100};break;default:n={min:18,max:65}}return this.natural(n)},a.prototype.birthday=function(a){return a=e(a,{year:(new Date).getFullYear()-this.age(a)}),this.date(a)},a.prototype.cpf=function(){var a=this.n(this.natural,9,{max:9}),e=2*a[8]+3*a[7]+4*a[6]+5*a[5]+6*a[4]+7*a[3]+8*a[2]+9*a[1]+10*a[0];e=11-e%11,e>=10&&(e=0);var n=2*e+3*a[8]+4*a[7]+5*a[6]+6*a[5]+7*a[4]+8*a[3]+9*a[2]+10*a[1]+11*a[0];return n=11-n%11,n>=10&&(n=0),""+a[0]+a[1]+a[2]+"."+a[3]+a[4]+a[5]+"."+a[6]+a[7]+a[8]+"-"+e+n},a.prototype.first=function(a){return a=e(a,{gender:this.gender()}),this.pick(this.get("firstNames")[a.gender.toLowerCase()])},a.prototype.gender=function(){return this.pick(["Male","Female"])},a.prototype.last=function(){return this.pick(this.get("lastNames"))},a.prototype.mrz=function(a){var n=function(a){var e="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),n=[7,3,1],i=0;return"string"!=typeof a&&(a=a.toString()),a.split("").forEach(function(a,t){var r=e.indexOf(a);a=-1!==r?0===r?0:r+9:parseInt(a,10),a*=n[t%n.length],i+=a}),i%10},i=function(a){var e=function(a){return new Array(a+1).join("<")},i=["P<",a.issuer,a.last.toUpperCase(),"<<",a.first.toUpperCase(),e(39-(a.last.length+a.first.length+2)),a.passportNumber,n(a.passportNumber),a.nationality,a.dob,n(a.dob),a.gender,a.expiry,n(a.expiry),e(14),n(e(14))].join("");return i+n(i.substr(44,10)+i.substr(57,7)+i.substr(65,7))},t=this;return a=e(a,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:function(){var a=t.birthday({type:"adult"});return[a.getFullYear().toString().substr(2),t.pad(a.getMonth()+1,2),t.pad(a.getDate(),2)].join("")}(),expiry:function(){var a=new Date;return[(a.getFullYear()+5).toString().substr(2),t.pad(a.getMonth()+1,2),t.pad(a.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"}),i(a)},a.prototype.name=function(a){a=e(a);var n,i=this.first(a),t=this.last();return n=a.middle?i+" "+this.first(a)+" "+t:a.middle_initial?i+" "+this.character({alpha:!0,casing:"upper"})+". "+t:i+" "+t,a.prefix&&(n=this.prefix(a)+" "+n),a.suffix&&(n=n+" "+this.suffix(a)),n},a.prototype.name_prefixes=function(a){a=a||"all",a=a.toLowerCase();var e=[{name:"Doctor",abbreviation:"Dr."}];return("male"===a||"all"===a)&&e.push({name:"Mister",abbreviation:"Mr."}),("female"===a||"all"===a)&&(e.push({name:"Miss",abbreviation:"Miss"}),e.push({name:"Misses",abbreviation:"Mrs."})),e},a.prototype.prefix=function(a){return this.name_prefix(a)},a.prototype.name_prefix=function(a){return a=e(a,{gender:"all"}),a.full?this.pick(this.name_prefixes(a.gender)).name:this.pick(this.name_prefixes(a.gender)).abbreviation},a.prototype.ssn=function(a){a=e(a,{ssnFour:!1,dashes:!0});var n,i="1234567890",t=a.dashes?"-":"";return n=a.ssnFour?this.string({pool:i,length:4}):this.string({pool:i,length:3})+t+this.string({pool:i,length:2})+t+this.string({pool:i,length:4})},a.prototype.name_suffixes=function(){var a=[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}];return a},a.prototype.suffix=function(a){return this.name_suffix(a)},a.prototype.name_suffix=function(a){return a=e(a),a.full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},a.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},a.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},a.prototype.wp8_anid2=function(){return d(this.hash({length:32}))},a.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},a.prototype.bb_pin=function(){return this.hash({length:8})},a.prototype.avatar=function(a){var n=null,i="//www.gravatar.com/avatar/",t={http:"http",https:"https"},r={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"},o={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"},s={g:"g",pg:"pg",r:"r",x:"x"},m={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(a)if("string"==typeof a)m.email=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else m.email=this.email(),a={};return m=e(a,m),m.email||(m.email=this.email()),m.protocol=t[m.protocol]?m.protocol+":":"",m.size=parseInt(m.size,0)?m.size:"",m.rating=s[m.rating]?m.rating:"",m.fallback=o[m.fallback]?m.fallback:"",m.fileExtension=r[m.fileExtension]?m.fileExtension:"",n=m.protocol+i+this.bimd5.md5(m.email)+(m.fileExtension?"."+m.fileExtension:"")+(m.size||m.rating||m.fallback?"?":"")+(m.size?"&s="+m.size.toString():"")+(m.rating?"&r="+m.rating:"")+(m.fallback?"&d="+m.fallback:"")},a.prototype.color=function(a){function n(a,e){return[a,a,a].join(e||"")}a=e(a,{format:this.pick(["hex","shorthex","rgb","rgba","0x"]),grayscale:!1,casing:"lower"});var i,t=a.grayscale;if("hex"===a.format)i="#"+(t?n(this.hash({length:2})):this.hash({length:6}));else if("shorthex"===a.format)i="#"+(t?n(this.hash({length:1})):this.hash({length:3}));else if("rgb"===a.format)i=t?"rgb("+n(this.natural({max:255}),",")+")":"rgb("+this.natural({max:255})+","+this.natural({max:255})+","+this.natural({max:255})+")";else if("rgba"===a.format)i=t?"rgba("+n(this.natural({max:255}),",")+","+this.floating({min:0,max:1})+")":"rgba("+this.natural({max:255})+","+this.natural({max:255})+","+this.natural({max:255})+","+this.floating({min:0,max:1})+")";else{if("0x"!==a.format)throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", or "0x".');i="0x"+(t?n(this.hash({length:2})):this.hash({length:6}))}return"upper"===a.casing&&(i=i.toUpperCase()),i},a.prototype.domain=function(a){return a=e(a),this.word()+"."+(a.tld||this.tld())},a.prototype.email=function(a){return a=e(a),this.word({length:a.length})+"@"+(a.domain||this.domain())},a.prototype.fbid=function(){return parseInt("10000"+this.natural({max:1e11}),10)},a.prototype.google_analytics=function(){var a=this.pad(this.natural({max:999999}),6),e=this.pad(this.natural({max:99}),2);return"UA-"+a+"-"+e},a.prototype.hashtag=function(){return"#"+this.word()},a.prototype.ip=function(){return this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({max:255})},a.prototype.ipv6=function(){var a=this.n(this.hash,8,{length:4});return a.join(":")},a.prototype.klout=function(){return this.natural({min:1,max:99})},a.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io"]},a.prototype.tld=function(){return this.pick(this.tlds())},a.prototype.twitter=function(){return"@"+this.word()},a.prototype.url=function(a){a=e(a,{protocol:"http",domain:this.domain(a),domain_prefix:"",path:this.word(),extensions:[]});var n=a.extensions.length>0?"."+this.pick(a.extensions):"",i=a.domain_prefix?a.domain_prefix+"."+a.domain:a.domain;return a.protocol+"://"+i+"/"+a.path+n},a.prototype.address=function(a){return a=e(a),this.natural({min:5,max:2e3})+" "+this.street(a)},a.prototype.altitude=function(a){return a=e(a,{fixed:5,min:0,max:8848}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},a.prototype.areacode=function(a){a=e(a,{parens:!0});var n=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return a.parens?"("+n+")":n},a.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},a.prototype.coordinates=function(a){return this.latitude(a)+", "+this.longitude(a)},a.prototype.countries=function(){return this.get("countries")},a.prototype.country=function(a){a=e(a);var n=this.pick(this.countries());return a.full?n.name:n.abbreviation},a.prototype.depth=function(a){return a=e(a,{fixed:5,min:-2550,max:0}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},a.prototype.geohash=function(a){return a=e(a,{length:7}),this.string({length:a.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},a.prototype.geojson=function(a){return this.latitude(a)+", "+this.longitude(a)+", "+this.altitude(a)},a.prototype.latitude=function(a){return a=e(a,{fixed:5,min:-90,max:90}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},a.prototype.longitude=function(a){return a=e(a,{fixed:5,min:-180,max:180}),this.floating({min:a.min,max:a.max,fixed:a.fixed})},a.prototype.phone=function(a){var n,i=this,t=function(a){var e=[];return a.sections.forEach(function(a){e.push(i.string({pool:"0123456789",length:a}))}),a.area+e.join(" ")};a=e(a,{formatted:!0,country:"us",mobile:!1}),a.formatted||(a.parens=!1);var r;switch(a.country){case"fr":a.mobile?(n=this.pick(["06","07"])+i.string({pool:"0123456789",length:8}),r=a.formatted?n.match(/../g).join(" "):n):(n=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+i.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+i.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+i.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+i.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+i.string({pool:"0123456789",length:6}),"09"+i.string({pool:"0123456789",length:8})]),r=a.formatted?n.match(/../g).join(" "):n);break;case"uk":a.mobile?(n=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),r=a.formatted?t(n):t(n).replace(" ","")):(n=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[5]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[5]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[5]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[5]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[5]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[5]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[5]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[5]}]),r=a.formatted?t(n):t(n).replace(" ","","g"));break;case"us":var o=this.areacode(a).toString(),s=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),m=this.natural({min:1e3,max:9999}).toString();r=a.formatted?o+" "+s+"-"+m:o+s+m}return r},a.prototype.postal=function(){var a=this.character({pool:"XVTSRPNKLMHJGECBA"}),e=a+this.natural({max:9})+this.character({alpha:!0,casing:"upper"}),n=this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9});return e+" "+n},a.prototype.provinces=function(){return this.get("provinces")},a.prototype.province=function(a){return a&&a.full?this.pick(this.provinces()).name:this.pick(this.provinces()).abbreviation},a.prototype.state=function(a){return a&&a.full?this.pick(this.states(a)).name:this.pick(this.states(a)).abbreviation},a.prototype.states=function(a){a=e(a);var n,i=this.get("us_states_and_dc"),t=this.get("territories"),r=this.get("armed_forces");return n=i,a.territories&&(n=n.concat(t)),a.armed_forces&&(n=n.concat(r)),n},a.prototype.street=function(a){a=e(a);var n=this.word({syllables:2});return n=this.capitalize(n),n+=" ",n+=a.short_suffix?this.street_suffix().abbreviation:this.street_suffix().name},a.prototype.street_suffix=function(){return this.pick(this.street_suffixes())},a.prototype.street_suffixes=function(){return this.get("street_suffixes")},a.prototype.zip=function(a){var e=this.n(this.natural,5,{max:9});return a&&a.plusfour===!0&&(e.push("-"),e=e.concat(this.n(this.natural,4,{max:9}))),e.join("")},a.prototype.ampm=function(){return this.bool()?"am":"pm"},a.prototype.date=function(a){var n,i;if(a&&(a.min||a.max)){a=e(a,{american:!0,string:!1});var t="undefined"!=typeof a.min?a.min.getTime():1,r="undefined"!=typeof a.max?a.max.getTime():864e13;i=new Date(this.natural({min:t,max:r}))}else{var o=this.month({raw:!0}),s=o.days;a&&a.month&&(s=this.get("months")[(a.month%12+12)%12].days),a=e(a,{year:parseInt(this.year(),10),month:o.numeric-1,day:this.natural({min:1,max:s}),hour:this.hour(),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),i=new Date(a.year,a.month,a.day,a.hour,a.minute,a.second,a.millisecond)}return n=a.american?i.getMonth()+1+"/"+i.getDate()+"/"+i.getFullYear():i.getDate()+"/"+(i.getMonth()+1)+"/"+i.getFullYear(),a.string?n:i},a.prototype.hammertime=function(a){return this.date(a).getTime()},a.prototype.hour=function(a){return a=e(a,{min:1,max:a&&a.twentyfour?24:12}),n(a.min<1,"Chance: Min cannot be less than 1."),n(a.twentyfour&&a.max>24,"Chance: Max cannot be greater than 24 for twentyfour option."),n(!a.twentyfour&&a.max>12,"Chance: Max cannot be greater than 12."),n(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},a.prototype.millisecond=function(){return this.natural({max:999})},a.prototype.minute=a.prototype.second=function(a){return a=e(a,{min:0,max:59}),n(a.min<0,"Chance: Min cannot be less than 0."),n(a.max>59,"Chance: Max cannot be greater than 59."),n(a.min>a.max,"Chance: Min cannot be greater than Max."),this.natural({min:a.min,max:a.max})},a.prototype.month=function(a){a=e(a,{min:1,max:12}),n(a.min<1,"Chance: Min cannot be less than 1."),n(a.max>12,"Chance: Max cannot be greater than 12."),n(a.min>a.max,"Chance: Min cannot be greater than Max.");var i=this.pick(this.months().slice(a.min-1,a.max));return a.raw?i:i.name},a.prototype.months=function(){return this.get("months")},a.prototype.second=function(){return this.natural({max:59})},a.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},a.prototype.year=function(a){return a=e(a,{min:(new Date).getFullYear()}),a.max="undefined"!=typeof a.max?a.max:a.min+100,this.natural(a).toString()},a.prototype.cc=function(a){a=e(a);var n,i,t;return n=this.cc_type(a.type?{name:a.type,raw:!0}:{raw:!0}),i=n.prefix.split(""),t=n.length-n.prefix.length-1,i=i.concat(this.n(this.integer,t,{min:0,max:9})),i.push(this.luhn_calculate(i.join(""))),i.join("")},a.prototype.cc_types=function(){return this.get("cc_types")},a.prototype.cc_type=function(a){a=e(a);var n=this.cc_types(),i=null;if(a.name){for(var t=0;t<n.length;t++)if(n[t].name===a.name||n[t].short_name===a.name){i=n[t];break}if(null===i)throw new RangeError("Credit card type '"+a.name+"'' is not supported")}else i=this.pick(n);return a.raw?i:i.name},a.prototype.currency_types=function(){return this.get("currency_types")},a.prototype.currency=function(){return this.pick(this.currency_types())},a.prototype.currency_pair=function(a){var e=this.unique(this.currency,2,{comparator:function(a,e){return a.reduce(function(a,n){return a||n.code===e.code},!1)}});return a?e[0].code+"/"+e[1].code:e},a.prototype.dollar=function(a){a=e(a,{max:1e4,min:0});var n=this.floating({min:a.min,max:a.max,fixed:2}).toString(),i=n.split(".")[1];return void 0===i?n+=".00":i.length<2&&(n+="0"),0>n?"-$"+n.replace("-",""):"$"+n},a.prototype.exp=function(a){a=e(a);var n={};return n.year=this.exp_year(),n.year===(new Date).getFullYear()?n.month=this.exp_month({future:!0}):n.month=this.exp_month(),a.raw?n:n.month+"/"+n.year},a.prototype.exp_month=function(a){a=e(a);var n,i,t=(new Date).getMonth();if(a.future){do n=this.month({raw:!0}).numeric,i=parseInt(n,10);while(t>i)}else n=this.month({raw:!0}).numeric;return n},a.prototype.exp_year=function(){return this.year({max:(new Date).getFullYear()+10})},a.prototype.d4=i({min:1,max:4}),a.prototype.d6=i({min:1,max:6}),a.prototype.d8=i({min:1,max:8}),a.prototype.d10=i({min:1,max:10}),a.prototype.d12=i({min:1,max:12}),a.prototype.d20=i({min:1,max:20}),a.prototype.d30=i({min:1,max:30}),a.prototype.d100=i({min:1,max:100}),a.prototype.rpg=function(a,n){if(n=e(n),a){var i=a.toLowerCase().split("d"),t=[];if(2!==i.length||!parseInt(i[0],10)||!parseInt(i[1],10))throw new Error("Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var r=i[0];r>0;r--)t[r-1]=this.natural({min:1,max:i[1]});return"undefined"!=typeof n.sum&&n.sum?t.reduce(function(a,e){return a+e}):t}throw new RangeError("A type of die roll must be included")},a.prototype.guid=function(a){a=e(a,{version:5});var n="abcdef1234567890",i="ab89",t=this.string({pool:n,length:8})+"-"+this.string({pool:n,length:4})+"-"+a.version+this.string({pool:n,length:3})+"-"+this.string({pool:i,length:1})+this.string({pool:n,length:3})+"-"+this.string({pool:n,length:12});return t},a.prototype.hash=function(a){a=e(a,{length:40,casing:"lower"});var n="upper"===a.casing?c.toUpperCase():c;return this.string({pool:n,length:a.length})},a.prototype.luhn_check=function(a){var e=a.toString(),n=+e.substring(e.length-1);return n===this.luhn_calculate(+e.substring(0,e.length-1))},a.prototype.luhn_calculate=function(a){for(var e,n=a.toString().split("").reverse(),i=0,t=0,r=n.length;r>t;++t)e=+n[t],t%2===0&&(e*=2,e>9&&(e-=9)),i+=e;return 9*i%10},a.prototype.md5=function(a){var n={str:"",key:null,raw:!1};if(a)if("string"==typeof a)n.str=a,a={};else{if("object"!=typeof a)return null;if("Array"===a.constructor)return null}else n.str=this.string(),a={};if(n=e(a,n),!n.str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(n.str,n.key,n.raw)};var p={firstNames:{male:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],female:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","John","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"]},lastNames:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],
countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua and Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia and Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Bouvet Island",abbreviation:"BV"},{name:"Brazil",abbreviation:"BR"},{name:"British Antarctic Territory",abbreviation:"BQ"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canton and Enderbury Islands",abbreviation:"CT"},{name:"Cape Verde",abbreviation:"CV"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos [Keeling] Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Côte d’Ivoire",abbreviation:"CI"},{name:"Denmark",abbreviation:"DK"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Dronning Maud Land",abbreviation:"NQ"},{name:"East Germany",abbreviation:"DD"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"French Southern and Antarctic Territories",abbreviation:"FQ"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Heard Island and McDonald Islands",abbreviation:"HM"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Johnston Island",abbreviation:"JT"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Metropolitan France",abbreviation:"FX"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Midway Islands",abbreviation:"MI"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar [Burma]",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"Netherlands Antilles",abbreviation:"AN"},{name:"Neutral Zone",abbreviation:"NT"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"North Vietnam",abbreviation:"VD"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pacific Islands Trust Territory",abbreviation:"PC"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Panama Canal Zone",abbreviation:"PZ"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"People's Democratic Republic of Yemen",abbreviation:"YD"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Réunion",abbreviation:"RE"},{name:"Saint Barthélemy",abbreviation:"BL"},{name:"Saint Helena",abbreviation:"SH"},{name:"Saint Kitts and Nevis",abbreviation:"KN"},{name:"Saint Lucia",abbreviation:"LC"},{name:"Saint Martin",abbreviation:"MF"},{name:"Saint Pierre and Miquelon",abbreviation:"PM"},{name:"Saint Vincent and the Grenadines",abbreviation:"VC"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Serbia and Montenegro",abbreviation:"CS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia and the South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard and Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"São Tomé and Príncipe",abbreviation:"ST"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad and Tobago",abbreviation:"TT"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks and Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Minor Outlying Islands",abbreviation:"UM"},{name:"U.S. Miscellaneous Pacific Islands",abbreviation:"PU"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"Union of Soviet Socialist Republics",abbreviation:"SU"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Unknown or Invalid Region",abbreviation:"ZZ"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wake Island",abbreviation:"WK"},{name:"Wallis and Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"},{name:"Åland Islands",abbreviation:"AX"}],provinces:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],street_suffixes:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}]},v=Object.prototype.hasOwnProperty,f=Object.keys||function(a){var e=[];for(var n in a)v.call(a,n)&&e.push(n);return e};a.prototype.get=function(a){return o(p[a])},a.prototype.mac_address=function(a){a=e(a),a.separator||(a.separator=a.networkVersion?".":":");var n="ABCDEF1234567890",i="";return i=a.networkVersion?this.n(this.string,3,{pool:n,length:4}).join(a.separator):this.n(this.string,6,{pool:n,length:2}).join(a.separator)},a.prototype.normal=function(a){a=e(a,{mean:0,dev:1});var n,i,t,r,o=a.mean,s=a.dev;do i=2*this.random()-1,t=2*this.random()-1,n=i*i+t*t;while(n>=1);return r=i*Math.sqrt(-2*Math.log(n)/n),s*r+o},a.prototype.radio=function(a){a=e(a,{side:"?"});var n="";switch(a.side.toLowerCase()){case"east":case"e":n="W";break;case"west":case"w":n="K";break;default:n=this.character({pool:"KW"})}return n+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},a.prototype.set=function(a,e){"string"==typeof a?p[a]=e:p=o(a,p)},a.prototype.tv=function(a){return this.radio(a)},a.prototype.cnpj=function(){var a=this.n(this.natural,8,{max:9}),e=2+6*a[7]+7*a[6]+8*a[5]+9*a[4]+2*a[3]+3*a[2]+4*a[1]+5*a[0];e=11-e%11,e>=10&&(e=0);var n=2*e+3+7*a[7]+8*a[6]+9*a[5]+2*a[4]+3*a[3]+4*a[2]+5*a[1]+6*a[0];return n=11-n%11,n>=10&&(n=0),""+a[0]+a[1]+"."+a[2]+a[3]+a[4]+"."+a[5]+a[6]+a[7]+"/0001-"+e+n},a.prototype.mersenne_twister=function(a){return new g(a)},a.prototype.blueimp_md5=function(){return new y};var g=function(a){void 0===a&&(a=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(a)};g.prototype.init_genrand=function(a){for(this.mt[0]=a>>>0,this.mti=1;this.mti<this.N;this.mti++)a=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&a)>>>16)<<16)+1812433253*(65535&a)+this.mti,this.mt[this.mti]>>>=0},g.prototype.init_by_array=function(a,e){var n,i,t=1,r=0;for(this.init_genrand(19650218),n=this.N>e?this.N:e;n;n--)i=this.mt[t-1]^this.mt[t-1]>>>30,this.mt[t]=(this.mt[t]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+a[r]+r,this.mt[t]>>>=0,t++,r++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1),r>=e&&(r=0);for(n=this.N-1;n;n--)i=this.mt[t-1]^this.mt[t-1]>>>30,this.mt[t]=(this.mt[t]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-t,this.mt[t]>>>=0,t++,t>=this.N&&(this.mt[0]=this.mt[this.N-1],t=1);this.mt[0]=2147483648},g.prototype.genrand_int32=function(){var a,e=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;for(this.mti===this.N+1&&this.init_genrand(5489),n=0;n<this.N-this.M;n++)a=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^a>>>1^e[1&a];for(;n<this.N-1;n++)a=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^a>>>1^e[1&a];a=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^a>>>1^e[1&a],this.mti=0}return a=this.mt[this.mti++],a^=a>>>11,a^=a<<7&2636928640,a^=a<<15&4022730752,a^=a>>>18,a>>>0},g.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},g.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},g.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},g.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},g.prototype.genrand_res53=function(){var a=this.genrand_int32()>>>5,e=this.genrand_int32()>>>6;return(67108864*a+e)*(1/9007199254740992)};var y=function(){};y.prototype.VERSION="1.0.1",y.prototype.safe_add=function(a,e){var n=(65535&a)+(65535&e),i=(a>>16)+(e>>16)+(n>>16);return i<<16|65535&n},y.prototype.bit_roll=function(a,e){return a<<e|a>>>32-e},y.prototype.md5_cmn=function(a,e,n,i,t,r){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(e,a),this.safe_add(i,r)),t),n)},y.prototype.md5_ff=function(a,e,n,i,t,r,o){return this.md5_cmn(e&n|~e&i,a,e,t,r,o)},y.prototype.md5_gg=function(a,e,n,i,t,r,o){return this.md5_cmn(e&i|n&~i,a,e,t,r,o)},y.prototype.md5_hh=function(a,e,n,i,t,r,o){return this.md5_cmn(e^n^i,a,e,t,r,o)},y.prototype.md5_ii=function(a,e,n,i,t,r,o){return this.md5_cmn(n^(e|~i),a,e,t,r,o)},y.prototype.binl_md5=function(a,e){a[e>>5]|=128<<e%32,a[(e+64>>>9<<4)+14]=e;var n,i,t,r,o,s=1732584193,m=-271733879,l=-1732584194,h=271733878;for(n=0;n<a.length;n+=16)i=s,t=m,r=l,o=h,s=this.md5_ff(s,m,l,h,a[n],7,-680876936),h=this.md5_ff(h,s,m,l,a[n+1],12,-389564586),l=this.md5_ff(l,h,s,m,a[n+2],17,606105819),m=this.md5_ff(m,l,h,s,a[n+3],22,-1044525330),s=this.md5_ff(s,m,l,h,a[n+4],7,-176418897),h=this.md5_ff(h,s,m,l,a[n+5],12,1200080426),l=this.md5_ff(l,h,s,m,a[n+6],17,-1473231341),m=this.md5_ff(m,l,h,s,a[n+7],22,-45705983),s=this.md5_ff(s,m,l,h,a[n+8],7,1770035416),h=this.md5_ff(h,s,m,l,a[n+9],12,-1958414417),l=this.md5_ff(l,h,s,m,a[n+10],17,-42063),m=this.md5_ff(m,l,h,s,a[n+11],22,-1990404162),s=this.md5_ff(s,m,l,h,a[n+12],7,1804603682),h=this.md5_ff(h,s,m,l,a[n+13],12,-40341101),l=this.md5_ff(l,h,s,m,a[n+14],17,-1502002290),m=this.md5_ff(m,l,h,s,a[n+15],22,1236535329),s=this.md5_gg(s,m,l,h,a[n+1],5,-165796510),h=this.md5_gg(h,s,m,l,a[n+6],9,-1069501632),l=this.md5_gg(l,h,s,m,a[n+11],14,643717713),m=this.md5_gg(m,l,h,s,a[n],20,-373897302),s=this.md5_gg(s,m,l,h,a[n+5],5,-701558691),h=this.md5_gg(h,s,m,l,a[n+10],9,38016083),l=this.md5_gg(l,h,s,m,a[n+15],14,-660478335),m=this.md5_gg(m,l,h,s,a[n+4],20,-405537848),s=this.md5_gg(s,m,l,h,a[n+9],5,568446438),h=this.md5_gg(h,s,m,l,a[n+14],9,-1019803690),l=this.md5_gg(l,h,s,m,a[n+3],14,-187363961),m=this.md5_gg(m,l,h,s,a[n+8],20,1163531501),s=this.md5_gg(s,m,l,h,a[n+13],5,-1444681467),h=this.md5_gg(h,s,m,l,a[n+2],9,-51403784),l=this.md5_gg(l,h,s,m,a[n+7],14,1735328473),m=this.md5_gg(m,l,h,s,a[n+12],20,-1926607734),s=this.md5_hh(s,m,l,h,a[n+5],4,-378558),h=this.md5_hh(h,s,m,l,a[n+8],11,-2022574463),l=this.md5_hh(l,h,s,m,a[n+11],16,1839030562),m=this.md5_hh(m,l,h,s,a[n+14],23,-35309556),s=this.md5_hh(s,m,l,h,a[n+1],4,-1530992060),h=this.md5_hh(h,s,m,l,a[n+4],11,1272893353),l=this.md5_hh(l,h,s,m,a[n+7],16,-155497632),m=this.md5_hh(m,l,h,s,a[n+10],23,-1094730640),s=this.md5_hh(s,m,l,h,a[n+13],4,681279174),h=this.md5_hh(h,s,m,l,a[n],11,-358537222),l=this.md5_hh(l,h,s,m,a[n+3],16,-722521979),m=this.md5_hh(m,l,h,s,a[n+6],23,76029189),s=this.md5_hh(s,m,l,h,a[n+9],4,-640364487),h=this.md5_hh(h,s,m,l,a[n+12],11,-421815835),l=this.md5_hh(l,h,s,m,a[n+15],16,530742520),m=this.md5_hh(m,l,h,s,a[n+2],23,-995338651),s=this.md5_ii(s,m,l,h,a[n],6,-198630844),h=this.md5_ii(h,s,m,l,a[n+7],10,1126891415),l=this.md5_ii(l,h,s,m,a[n+14],15,-1416354905),m=this.md5_ii(m,l,h,s,a[n+5],21,-57434055),s=this.md5_ii(s,m,l,h,a[n+12],6,1700485571),h=this.md5_ii(h,s,m,l,a[n+3],10,-1894986606),l=this.md5_ii(l,h,s,m,a[n+10],15,-1051523),m=this.md5_ii(m,l,h,s,a[n+1],21,-2054922799),s=this.md5_ii(s,m,l,h,a[n+8],6,1873313359),h=this.md5_ii(h,s,m,l,a[n+15],10,-30611744),l=this.md5_ii(l,h,s,m,a[n+6],15,-1560198380),m=this.md5_ii(m,l,h,s,a[n+13],21,1309151649),s=this.md5_ii(s,m,l,h,a[n+4],6,-145523070),h=this.md5_ii(h,s,m,l,a[n+11],10,-1120210379),l=this.md5_ii(l,h,s,m,a[n+2],15,718787259),m=this.md5_ii(m,l,h,s,a[n+9],21,-343485551),s=this.safe_add(s,i),m=this.safe_add(m,t),l=this.safe_add(l,r),h=this.safe_add(h,o);return[s,m,l,h]},y.prototype.binl2rstr=function(a){var e,n="";for(e=0;e<32*a.length;e+=8)n+=String.fromCharCode(a[e>>5]>>>e%32&255);return n},y.prototype.rstr2binl=function(a){var e,n=[];for(n[(a.length>>2)-1]=void 0,e=0;e<n.length;e+=1)n[e]=0;for(e=0;e<8*a.length;e+=8)n[e>>5]|=(255&a.charCodeAt(e/8))<<e%32;return n},y.prototype.rstr_md5=function(a){return this.binl2rstr(this.binl_md5(this.rstr2binl(a),8*a.length))},y.prototype.rstr_hmac_md5=function(a,e){var n,i,t=this.rstr2binl(a),r=[],o=[];for(r[15]=o[15]=void 0,t.length>16&&(t=this.binl_md5(t,8*a.length)),n=0;16>n;n+=1)r[n]=909522486^t[n],o[n]=1549556828^t[n];return i=this.binl_md5(r.concat(this.rstr2binl(e)),512+8*e.length),this.binl2rstr(this.binl_md5(o.concat(i),640))},y.prototype.rstr2hex=function(a){var e,n,i="0123456789abcdef",t="";for(n=0;n<a.length;n+=1)e=a.charCodeAt(n),t+=i.charAt(e>>>4&15)+i.charAt(15&e);return t},y.prototype.str2rstr_utf8=function(a){return unescape(encodeURIComponent(a))},y.prototype.raw_md5=function(a){return this.rstr_md5(this.str2rstr_utf8(a))},y.prototype.hex_md5=function(a){return this.rstr2hex(this.raw_md5(a))},y.prototype.raw_hmac_md5=function(a,e){return this.rstr_hmac_md5(this.str2rstr_utf8(a),this.str2rstr_utf8(e))},y.prototype.hex_hmac_md5=function(a,e){return this.rstr2hex(this.raw_hmac_md5(a,e))},y.prototype.md5=function(a,e,n){return e?n?this.raw_hmac_md5(e,a):this.hex_hmac_md5(e,a):n?this.raw_md5(a):this.hex_md5(a)},"undefined"!=typeof exports&&("undefined"!=typeof module&&module.exports&&(exports=module.exports=a),exports.Chance=a),"function"==typeof define&&define.amd&&define([],function(){return a}),"undefined"!=typeof importScripts&&(chance=new a),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=a,window.chance=new a)}();

}).call(this,require("buffer").Buffer)
},{"buffer":12}],76:[function(require,module,exports){
"use strict";var $=require("./util/uri-helpers");$.findByRef=require("./util/find-reference"),$.resolveSchema=require("./util/resolve-schema"),$.normalizeSchema=require("./util/normalize-schema");var instance=module.exports=function(){function e(r,i,t,n){function a(i){if("string"==typeof i.id){var t=$.resolveURL(r,i.id).replace(/\/#?$/,"");if(t.indexOf("#")>-1){var n=t.split("#");t="/"===n[1].charAt()?n[0]:n[1]||n[0]}e.refs[t]||(e.refs[t]=i)}}return"object"==typeof r&&(n=t,t=i,i=r,r=void 0),Array.isArray(t)||(n=!!t,t=[]),t.concat([i]).forEach(function(e){i=$.normalizeSchema(r,e,a),a(i)}),$.resolveSchema(i,e.refs,n)}return e.refs={},e.util=$,e};instance.util=$;

},{"./util/find-reference":78,"./util/normalize-schema":79,"./util/resolve-schema":80,"./util/uri-helpers":81}],77:[function(require,module,exports){
"use strict";var clone=module.exports=function(r){function t(r,t){o[r]=clone(t)}if(!r||"object"!=typeof r)return r;var o=Array.isArray(r)?[]:{};return Array.isArray(o)?r.forEach(function(r,o){t(o,r)}):"[object Object]"===Object.prototype.toString.call(r)&&Object.keys(r).forEach(function(o){t(o,r[o])}),o};

},{}],78:[function(require,module,exports){
"use strict";function get(e,r){for(var n=r.split("#")[1],t=n.split("/").slice(1);t.length;){var f=decodeURIComponent(t.shift()).replace(/~1/g,"/").replace(/~0/g,"~");if("undefined"==typeof e[f])throw new Error("Reference not found: "+r);e=e[f]}return e}var $=require("./uri-helpers"),find=module.exports=function(e,r){var n=r[e]||r[e.split("#")[1]]||r[$.getDocumentURI(e)];if(n)n=e.indexOf("#/")>-1?get(n,e):n;else for(var t in r)if($.resolveURL(r[t].id,e)===r[t].id){n=r[t];break}if(!n)throw new Error("Reference not found: "+e);for(;n.$ref;)n=find(n.$ref,r);return n};

},{"./uri-helpers":81}],79:[function(require,module,exports){
"use strict";function expand(e,r,o){if(e){var n="string"==typeof e.id?e.id:"#";$.isURL(n)||(n=$.resolveURL(r===n?null:r,n)),"string"!=typeof e.$ref||$.isURL(e.$ref)||(e.$ref=$.resolveURL(n,e.$ref)),"string"==typeof e.id&&(e.id=r=n)}for(var i in e){var s=e[i];"object"==typeof s&&"enum"!==i&&"required"!==i&&expand(s,r,o)}"function"==typeof o&&o(e)}var $=require("./uri-helpers"),cloneObj=require("./clone-obj"),SCHEMA_URI=["http://json-schema.org/schema#","http://json-schema.org/draft-04/schema#"];module.exports=function(e,r,o){"object"==typeof e&&(o=r,r=e,e=null);var n=e||"",i=cloneObj(r);if(i.$schema&&-1===SCHEMA_URI.indexOf(i.$schema))throw new Error("Unsupported schema version (v4 only)");return n=$.resolveURL(i.$schema||SCHEMA_URI[0],n),expand(i,$.resolveURL(i.id,n),o),i.id=i.id||"#",i};

},{"./clone-obj":77,"./uri-helpers":81}],80:[function(require,module,exports){
"use strict";function clone(e,r,i,n){var t={};if(Array.isArray(e)&&(t=[]),$.isURL(e.$ref)){var f=find(e.$ref,r);if(f&&n){var o="string"==typeof f.id?f.id:"#";if(e=f,e.$ref!==o)return clone(f,r,!0,n);delete e.$ref}}for(var d in e){var u=e[d];"object"==typeof u&&"enum"!==d&&"required"!==d?t[d]=clone(u,r,!0,n):t[d]=u}return i&&("string"==typeof t.$schema&&delete t.$schema,"string"==typeof t.id&&delete t.id),t}var $=require("./uri-helpers"),find=require("./find-reference");module.exports=function(e,r,i){return clone(e,r,!1,i)};

},{"./find-reference":78,"./uri-helpers":81}],81:[function(require,module,exports){
"use strict";function URLUtils(t,s){var e=String(t).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@]*)(?::([^:@]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!e)throw new RangeError;var r=e[0]||"",h=e[1]||"",o=e[2]||"",n=e[3]||"",a=e[4]||"",i=e[5]||"",p=e[6]||"",c=e[7]||"",U=e[8]||"",u=e[9]||"";if(void 0!==s){var R=new URLUtils(s),m=""===h&&""===a&&""===o;m&&""===c&&""===U&&(U=R.search),m&&"/"!==c.charAt(0)&&(c=""!==c?R.pathname.slice(0,R.pathname.lastIndexOf("/")+1)+c:R.pathname);var f=[];c.replace(/\/?[^\/]+/g,function(t){"/.."===t?f.pop():f.push(t)}),c=f.join("")||"/",m&&(p=R.port,i=R.hostname,a=R.host,n=R.password,o=R.username),""===h&&(h=R.protocol),r=h+(""!==a?"//":"")+(""!==o?o+(""!==n?":"+n:"")+"@":"")+a+c+U+u}this.href=r,this.origin=h+(""!==a?"//"+a:""),this.protocol=h,this.username=o,this.password=n,this.host=a,this.hostname=i,this.port=p,this.pathname=c,this.search=U,this.hash=u}function isURL(t){return"string"==typeof t&&/^\w+:\/\//.test(t)?!0:void 0}function parseURI(t,s){return new URLUtils(t,s)}function resolveURL(t,s){return t=t||"http://json-schema.org/schema#",s=parseURI(s,t),t=parseURI(t),t.hash&&!s.hash?s.href+t.hash:s.href}function getDocumentURI(t){return"string"==typeof t&&t.split("#")[0]}module.exports={isURL:isURL,parseURI:parseURI,resolveURL:resolveURL,getDocumentURI:getDocumentURI};

},{}],82:[function(require,module,exports){
exports.name=require("./lib/name"),exports.address=require("./lib/address"),exports.phone=require("./lib/phone_number"),exports.internet=require("./lib/internet"),exports.company=require("./lib/company"),exports.image=require("./lib/image"),exports.lorem=require("./lib/lorem"),exports.helpers=require("./lib/helpers"),exports.date=require("./lib/date"),exports.random=require("./lib/random"),exports.finance=require("./lib/finance"),exports.hacker=require("./lib/hacker");var locales=exports.locales=require("./lib/locales");exports.locale="en",exports.localeFallback="en",exports.definitions={};var _definitions={name:["first_name","last_name","prefix","suffix"],address:["city_prefix","city_suffix","street_suffix","county","country","state","state_abbr"],company:["adjective","noun","descriptor","bs_adjective","bs_noun","bs_verb"],lorem:["words"],hacker:["abbreviation","adjective","noun","verb","ingverb"],phone_number:["formats"],finance:["account_type","transaction_type","currency"],internet:["avatar_uri","domain_suffix","free_email","password"]};Object.keys(_definitions).forEach(function(e){"undefined"==typeof exports.definitions[e]&&(exports.definitions[e]={}),_definitions[e].forEach(function(r){Object.defineProperty(exports.definitions[e],r,{get:function(){return"undefined"==typeof locales[exports.locale][e]||"undefined"==typeof locales[exports.locale][e][r]?locales[exports.localeFallback][e][r]:locales[exports.locale][e][r]}})})});

},{"./lib/address":83,"./lib/company":84,"./lib/date":85,"./lib/finance":86,"./lib/hacker":87,"./lib/helpers":88,"./lib/image":89,"./lib/internet":90,"./lib/locales":91,"./lib/lorem":119,"./lib/name":120,"./lib/phone_number":121,"./lib/random":122}],83:[function(require,module,exports){
var Helpers=require("./helpers"),faker=require("../index"),address={zipCode:function(){return Helpers.replaceSymbolWithNumber(faker.random.array_element(["#####","#####-####"]))},city:function(){var e;switch(faker.random.number(3)){case 0:e=faker.address.cityPrefix()+" "+faker.name.firstName()+faker.address.citySuffix();break;case 1:e=faker.address.cityPrefix()+" "+faker.name.firstName();break;case 2:e=faker.name.firstName()+faker.address.citySuffix();break;case 3:e=faker.name.lastName()+faker.address.citySuffix()}return e},cityPrefix:function(){return faker.random.array_element(faker.definitions.address.city_prefix)},citySuffix:function(){return faker.random.array_element(faker.definitions.address.city_suffix)},streetName:function(){var e;switch(faker.random.number(1)){case 0:e=faker.name.lastName()+" "+faker.address.streetSuffix();break;case 1:e=faker.name.firstName()+" "+faker.address.streetSuffix()}return e},streetAddress:function(e){void 0===e&&(e=!1);var r="";switch(faker.random.number(2)){case 0:r=Helpers.replaceSymbolWithNumber("#####")+" "+faker.address.streetName();break;case 1:r=Helpers.replaceSymbolWithNumber("####")+" "+faker.address.streetName();break;case 2:r=Helpers.replaceSymbolWithNumber("###")+" "+faker.address.streetName()}return e?r+" "+faker.address.secondaryAddress():r},streetSuffix:function(){return faker.random.array_element(faker.definitions.address.street_suffix)},secondaryAddress:function(){return Helpers.replaceSymbolWithNumber(faker.random.array_element(["Apt. ###","Suite ###"]))},county:function(){return faker.random.array_element(faker.definitions.address.county)},country:function(){return faker.random.array_element(faker.definitions.address.country)},state:function(e){return faker.random.array_element(faker.definitions.address.state)},stateAbbr:function(){return faker.random.array_element(faker.definitions.address.state_abbr)},latitude:function(){return(faker.random.number(18e5)/1e4-90).toFixed(4)},longitude:function(){return(faker.random.number(36e5)/1e4-180).toFixed(4)}};module.exports=address;

},{"../index":82,"./helpers":88}],84:[function(require,module,exports){
var faker=require("../index"),company={suffixes:function(){return["Inc","and Sons","LLC","Group","and Daughters"]},companyName:function(e){switch(e?e:faker.random.number(2)){case 0:return faker.name.lastName()+" "+faker.company.companySuffix();case 1:return faker.name.lastName()+"-"+faker.name.lastName();case 2:return faker.name.lastName()+", "+faker.name.lastName()+" and "+faker.name.lastName()}},companySuffix:function(){return faker.random.array_element(faker.company.suffixes())},catchPhrase:function(){return faker.company.catchPhraseAdjective()+" "+faker.company.catchPhraseDescriptor()+" "+faker.company.catchPhraseNoun()},bs:function(){return faker.company.bsAdjective()+" "+faker.company.bsBuzz()+" "+faker.company.bsNoun()},catchPhraseAdjective:function(){return faker.random.array_element(faker.definitions.company.adjective)},catchPhraseDescriptor:function(){return faker.random.array_element(faker.definitions.company.descriptor)},catchPhraseNoun:function(){return faker.random.array_element(faker.definitions.company.noun)},bsAdjective:function(){return faker.random.array_element(faker.definitions.company.bs_adjective)},bsBuzz:function(){return faker.random.array_element(faker.definitions.company.bs_verb)},bsNoun:function(){return faker.random.array_element(faker.definitions.company.bs_noun)}};module.exports=company;

},{"../index":82}],85:[function(require,module,exports){
var faker=require("../index"),date={past:function(e,r){var a=r?new Date(Date.parse(r)):new Date,n={min:1e3,max:365*(e||1)*24*3600*1e3},t=a.getTime();return t-=faker.random.number(n),a.setTime(t),a},future:function(e,r){var a=r?new Date(Date.parse(r)):new Date,n={min:1e3,max:365*(e||1)*24*3600*1e3},t=a.getTime();return t+=faker.random.number(n),a.setTime(t),a},between:function(e,r){var a=Date.parse(e),n=faker.random.number(Date.parse(r)-a),t=new Date(a+n);return t},recent:function(e){var r=new Date,a={min:1e3,max:24*(e||1)*3600*1e3},n=r.getTime();return n-=faker.random.number(a),r.setTime(n),r}};module.exports=date;

},{"../index":82}],86:[function(require,module,exports){
var Helpers=require("./helpers"),faker=require("../index"),finance={account:function(e){e=e||8;for(var n="",r=0;e>r;r++)n+="#";return e=null,Helpers.replaceSymbolWithNumber(n)},accountName:function(){return[Helpers.randomize(faker.definitions.finance.account_type),"Account"].join(" ")},mask:function(e,n,r){e=0!=e&&e&&"undefined"!=typeof e?e:4,n=null===n?!0:n,r=null===r?!0:r;for(var o="",t=0;e>t;t++)o+="#";return o=r?["...",o].join(""):o,o=n?["(",o,")"].join(""):o,o=Helpers.replaceSymbolWithNumber(o)},amount:function(e,n,r,o){return e=e||0,n=n||1e3,r=r||2,o=o||"",o+(Math.round((Math.random()*(n-e)+e)*Math.pow(10,r))/Math.pow(10,r)).toFixed(r)},transactionType:function(){return Helpers.randomize(faker.definitions.finance.transaction_type)},currencyCode:function(){return faker.random.object_element(faker.definitions.finance.currency).code},currencyName:function(){return faker.random.object_element(faker.definitions.finance.currency,"key")},currencySymbol:function(){for(var e;!e;)e=faker.random.object_element(faker.definitions.finance.currency).symbol;return e}};module.exports=finance;

},{"../index":82,"./helpers":88}],87:[function(require,module,exports){
var faker=require("../index"),hacker={abbreviation:function(){return faker.random.array_element(faker.definitions.hacker.abbreviation)},adjective:function(){return faker.random.array_element(faker.definitions.hacker.adjective)},noun:function(){return faker.random.array_element(faker.definitions.hacker.noun)},verb:function(){return faker.random.array_element(faker.definitions.hacker.verb)},ingverb:function(){return faker.random.array_element(faker.definitions.hacker.ingverb)},phrase:function(){var e={abbreviation:hacker.abbreviation(),adjective:hacker.adjective(),ingverb:hacker.ingverb(),noun:hacker.noun(),verb:hacker.verb()},n=faker.random.array_element(["If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!","Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"]);return faker.helpers.mustache(n,e)}};module.exports=hacker;

},{"../index":82}],88:[function(require,module,exports){
var faker=require("../index");exports.randomNumber=function(e){return faker.random.number(e)},exports.randomize=function(e){return e=e||["a","b","c"],faker.random.array_element(e)},exports.slugify=function(e){return e=e||"",e.replace(/ /g,"-").replace(/[^\w\.\-]+/g,"")},exports.replaceSymbolWithNumber=function(e,a){e=e||"",void 0===a&&(a="#");for(var r="",n=0;n<e.length;n++)r+=e.charAt(n)==a?faker.random.number(9):e.charAt(n);return r},exports.shuffle=function(e){e=e||["a","b","c"];for(var a,r,n=e.length-1;n;a=faker.random.number(n),r=e[--n],e[n]=e[a],e[a]=r);return e},exports.mustache=function(e,a){for(var r in a){var n=new RegExp("{{"+r+"}}","g");e=e.replace(n,a[r])}return e},exports.createCard=function(){return{name:faker.name.findName(),username:faker.internet.userName(),email:faker.internet.email(),address:{streetA:faker.address.streetName(),streetB:faker.address.streetAddress(),streetC:faker.address.streetAddress(!0),streetD:faker.address.secondaryAddress(),city:faker.address.city(),state:faker.address.state(),country:faker.address.country(),zipcode:faker.address.zipCode(),geo:{lat:faker.address.latitude(),lng:faker.address.longitude()}},phone:faker.phone.phoneNumber(),website:faker.internet.domainName(),company:{name:faker.company.companyName(),catchPhrase:faker.company.catchPhrase(),bs:faker.company.bs()},posts:[{words:faker.lorem.words(),sentence:faker.lorem.sentence(),sentences:faker.lorem.sentences(),paragraph:faker.lorem.paragraph()},{words:faker.lorem.words(),sentence:faker.lorem.sentence(),sentences:faker.lorem.sentences(),paragraph:faker.lorem.paragraph()},{words:faker.lorem.words(),sentence:faker.lorem.sentence(),sentences:faker.lorem.sentences(),paragraph:faker.lorem.paragraph()}],accountHistory:[faker.helpers.createTransaction(),faker.helpers.createTransaction(),faker.helpers.createTransaction()]}},exports.contextualCard=function(){var e=faker.name.firstName(),a=faker.internet.userName(e);return{name:e,username:a,avatar:faker.internet.avatar(),email:faker.internet.email(a),dob:faker.date.past(50,new Date("Sat Sep 20 1992 21:35:02 GMT+0200 (CEST)")),phone:faker.phone.phoneNumber(),address:{street:faker.address.streetName(!0),suite:faker.address.secondaryAddress(),city:faker.address.city(),zipcode:faker.address.zipCode(),geo:{lat:faker.address.latitude(),lng:faker.address.longitude()}},website:faker.internet.domainName(),company:{name:faker.company.companyName(),catchPhrase:faker.company.catchPhrase(),bs:faker.company.bs()}}},exports.userCard=function(){return{name:faker.name.findName(),username:faker.internet.userName(),email:faker.internet.email(),address:{street:faker.address.streetName(!0),suite:faker.address.secondaryAddress(),city:faker.address.city(),zipcode:faker.address.zipCode(),geo:{lat:faker.address.latitude(),lng:faker.address.longitude()}},phone:faker.phone.phoneNumber(),website:faker.internet.domainName(),company:{name:faker.company.companyName(),catchPhrase:faker.company.catchPhrase(),bs:faker.company.bs()}}},exports.createTransaction=function(){return{amount:faker.finance.amount(),date:new Date(2012,1,2),business:faker.company.companyName(),name:[faker.finance.accountName(),faker.finance.mask()].join(" "),type:exports.randomize(faker.definitions.finance.transaction_type),account:faker.finance.account()}};

},{"../index":82}],89:[function(require,module,exports){
var faker=require("../index"),image={image:function(){var e=["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"];return image[faker.random.array_element(e)]()},avatar:function(){return faker.internet.avatar()},imageUrl:function(e,r,a){var e=e||640,r=r||480,n="http://lorempixel.com/"+e+"/"+r;return"undefined"!=typeof a&&(n+="/"+a),n},"abstract":function(e,r){return faker.image.imageUrl(e,r,"abstract")},animals:function(e,r){return faker.image.imageUrl(e,r,"animals")},business:function(e,r){return faker.image.imageUrl(e,r,"business")},cats:function(e,r){return faker.image.imageUrl(e,r,"cats")},city:function(e,r){return faker.image.imageUrl(e,r,"city")},food:function(e,r){return faker.image.imageUrl(e,r,"food")},nightlife:function(e,r){return faker.image.imageUrl(e,r,"nightlife")},fashion:function(e,r){return faker.image.imageUrl(e,r,"fashion")},people:function(e,r){return faker.image.imageUrl(e,r,"people")},nature:function(e,r){return faker.image.imageUrl(e,r,"nature")},sports:function(e,r){return faker.image.imageUrl(e,r,"sports")},technics:function(e,r){return faker.image.imageUrl(e,r,"technics")},transport:function(e,r){return faker.image.imageUrl(e,r,"transport")}};module.exports=image;

},{"../index":82}],90:[function(require,module,exports){
var faker=require("../index"),password_generator=require("../vendor/password-generator.js"),random_ua=require("../vendor/user-agent"),internet={avatar:function(){return faker.random.array_element(faker.definitions.internet.avatar_uri)},email:function(e,r,n){return n=n||faker.random.array_element(faker.definitions.internet.free_email),faker.helpers.slugify(faker.internet.userName(e,r))+"@"+n},userName:function(e,r){var n;switch(e=e||faker.name.firstName(),r=r||faker.name.lastName(),faker.random.number(2)){case 0:n=e+faker.random.number(99);break;case 1:n=e+faker.random.array_element([".","_"])+r;break;case 2:n=e+faker.random.array_element([".","_"])+r+faker.random.number(99)}return n=n.replace(/'/g,""),n=n.replace(/ /g,"")},domainName:function(){return faker.internet.domainWord()+"."+faker.internet.domainSuffix()},domainSuffix:function(){return faker.random.array_element(faker.definitions.internet.domain_suffix)},domainWord:function(){return faker.name.firstName().replace(/([^A-Z0-9._%+-])/gi,"").toLowerCase()},ip:function(){for(var e=function(){return faker.random.number(255).toFixed(0)},r=[],n=0;4>n;n++)r[n]=e();return r.join(".")},userAgent:function(){return random_ua.generate()},color:function(e,r,n){e=e||0,r=r||0,n=n||0;var a=Math.floor((faker.random.number(256)+e)/2),t=Math.floor((faker.random.number(256)+r)/2),o=Math.floor((faker.random.number(256)+n)/2),i=a.toString(16),f=t.toString(16),u=o.toString(16);return"#"+(1===i.length?"0":"")+i+(1===f.length?"0":"")+f+(1===u.length?"0":"")+u},password:function(e,r,n,a){return e=e||15,"undefined"==typeof r&&(r=!1),password_generator(e,r,n,a)}};module.exports=internet;

},{"../index":82,"../vendor/password-generator.js":124,"../vendor/user-agent":125}],91:[function(require,module,exports){
var faker=require("../index");exports.de=require("./locales/de.js"),exports.de_AT=require("./locales/de_AT.js"),exports.de_CH=require("./locales/de_CH.js"),exports.en=require("./locales/en.js"),exports.en_AU=require("./locales/en_AU.js"),exports.en_BORK=require("./locales/en_BORK.js"),exports.en_CA=require("./locales/en_CA.js"),exports.en_GB=require("./locales/en_GB.js"),exports.en_IND=require("./locales/en_IND.js"),exports.en_US=require("./locales/en_US.js"),exports.en_au_ocker=require("./locales/en_au_ocker.js"),exports.es=require("./locales/es.js"),exports.fa=require("./locales/fa.js"),exports.fr=require("./locales/fr.js"),exports.it=require("./locales/it.js"),exports.ja=require("./locales/ja.js"),exports.ko=require("./locales/ko.js"),exports.nb_NO=require("./locales/nb_NO.js"),exports.nep=require("./locales/nep.js"),exports.nl=require("./locales/nl.js"),exports.pl=require("./locales/pl.js"),exports.pt_BR=require("./locales/pt_BR.js"),exports.ru=require("./locales/ru.js"),exports.sk=require("./locales/sk.js"),exports.sv=require("./locales/sv.js"),exports.vi=require("./locales/vi.js"),exports.zh_CN=require("./locales/zh_CN.js");

},{"../index":82,"./locales/de.js":92,"./locales/de_AT.js":93,"./locales/de_CH.js":94,"./locales/en.js":95,"./locales/en_AU.js":96,"./locales/en_BORK.js":97,"./locales/en_CA.js":98,"./locales/en_GB.js":99,"./locales/en_IND.js":100,"./locales/en_US.js":101,"./locales/en_au_ocker.js":102,"./locales/es.js":103,"./locales/fa.js":104,"./locales/fr.js":105,"./locales/it.js":106,"./locales/ja.js":107,"./locales/ko.js":108,"./locales/nb_NO.js":109,"./locales/nep.js":110,"./locales/nl.js":111,"./locales/pl.js":112,"./locales/pt_BR.js":113,"./locales/ru.js":114,"./locales/sk.js":115,"./locales/sv.js":116,"./locales/vi.js":117,"./locales/zh_CN.js":118}],92:[function(require,module,exports){
var de={};module.exports=de,de.title="German",de.address={city_prefix:["Nord","Ost","West","Süd","Neu","Alt","Bad"],city_suffix:["stadt","dorf","land","scheid","burg"],country:["Ägypten","Äquatorialguinea","Äthiopien","Österreich","Afghanistan","Albanien","Algerien","Amerikanisch-Samoa","Amerikanische Jungferninseln","Andorra","Angola","Anguilla","Antarktis","Antigua und Barbuda","Argentinien","Armenien","Aruba","Aserbaidschan","Australien","Bahamas","Bahrain","Bangladesch","Barbados","Belarus","Belgien","Belize","Benin","die Bermudas","Bhutan","Bolivien","Bosnien und Herzegowina","Botsuana","Bouvetinsel","Brasilien","Britische Jungferninseln","Britisches Territorium im Indischen Ozean","Brunei Darussalam","Bulgarien","Burkina Faso","Burundi","Chile","China","Cookinseln","Costa Rica","Dänemark","Demokratische Republik Kongo","Demokratische Volksrepublik Korea","Deutschland","Dominica","Dominikanische Republik","Dschibuti","Ecuador","El Salvador","Eritrea","Estland","Färöer","Falklandinseln","Fidschi","Finnland","Frankreich","Französisch-Guayana","Französisch-Polynesien","Französische Gebiete im südlichen Indischen Ozean","Gabun","Gambia","Georgien","Ghana","Gibraltar","Grönland","Grenada","Griechenland","Guadeloupe","Guam","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Heard und McDonaldinseln","Honduras","Hongkong","Indien","Indonesien","Irak","Iran","Irland","Island","Israel","Italien","Jamaika","Japan","Jemen","Jordanien","Jugoslawien","Kaimaninseln","Kambodscha","Kamerun","Kanada","Kap Verde","Kasachstan","Katar","Kenia","Kirgisistan","Kiribati","Kleinere amerikanische Überseeinseln","Kokosinseln","Kolumbien","Komoren","Kongo","Kroatien","Kuba","Kuwait","Laos","Lesotho","Lettland","Libanon","Liberia","Libyen","Liechtenstein","Litauen","Luxemburg","Macau","Madagaskar","Malawi","Malaysia","Malediven","Mali","Malta","ehemalige jugoslawische Republik Mazedonien","Marokko","Marshallinseln","Martinique","Mauretanien","Mauritius","Mayotte","Mexiko","Mikronesien","Monaco","Mongolei","Montserrat","Mosambik","Myanmar","Nördliche Marianen","Namibia","Nauru","Nepal","Neukaledonien","Neuseeland","Nicaragua","Niederländische Antillen","Niederlande","Niger","Nigeria","Niue","Norfolkinsel","Norwegen","Oman","Osttimor","Pakistan","Palau","Panama","Papua-Neuguinea","Paraguay","Peru","Philippinen","Pitcairninseln","Polen","Portugal","Puerto Rico","Réunion","Republik Korea","Republik Moldau","Ruanda","Rumänien","Russische Föderation","São Tomé und Príncipe","Südafrika","Südgeorgien und Südliche Sandwichinseln","Salomonen","Sambia","Samoa","San Marino","Saudi-Arabien","Schweden","Schweiz","Senegal","Seychellen","Sierra Leone","Simbabwe","Singapur","Slowakei","Slowenien","Somalien","Spanien","Sri Lanka","St. Helena","St. Kitts und Nevis","St. Lucia","St. Pierre und Miquelon","St. Vincent und die Grenadinen","Sudan","Surinam","Svalbard und Jan Mayen","Swasiland","Syrien","Türkei","Tadschikistan","Taiwan","Tansania","Thailand","Togo","Tokelau","Tonga","Trinidad und Tobago","Tschad","Tschechische Republik","Tunesien","Turkmenistan","Turks- und Caicosinseln","Tuvalu","Uganda","Ukraine","Ungarn","Uruguay","Usbekistan","Vanuatu","Vatikanstadt","Venezuela","Vereinigte Arabische Emirate","Vereinigte Staaten","Vereinigtes Königreich","Vietnam","Wallis und Futuna","Weihnachtsinsel","Westsahara","Zentralafrikanische Republik","Zypern"],street_root:["Ackerweg","Adalbert-Stifter-Str.","Adalbertstr.","Adolf-Baeyer-Str.","Adolf-Kaschny-Str.","Adolf-Reichwein-Str.","Adolfsstr.","Ahornweg","Ahrstr.","Akazienweg","Albert-Einstein-Str.","Albert-Schweitzer-Str.","Albertus-Magnus-Str.","Albert-Zarthe-Weg","Albin-Edelmann-Str.","Albrecht-Haushofer-Str.","Aldegundisstr.","Alexanderstr.","Alfred-Delp-Str.","Alfred-Kubin-Str.","Alfred-Stock-Str.","Alkenrather Str.","Allensteiner Str.","Alsenstr.","Alt Steinbücheler Weg","Alte Garten","Alte Heide","Alte Landstr.","Alte Ziegelei","Altenberger Str.","Altenhof","Alter Grenzweg","Altstadtstr.","Am Alten Gaswerk","Am Alten Schafstall","Am Arenzberg","Am Benthal","Am Birkenberg","Am Blauen Berg","Am Borsberg","Am Brungen","Am Büchelter Hof","Am Buttermarkt","Am Ehrenfriedhof","Am Eselsdamm","Am Falkenberg","Am Frankenberg","Am Gesundheitspark","Am Gierlichshof","Am Graben","Am Hagelkreuz","Am Hang","Am Heidkamp","Am Hemmelrather Hof","Am Hofacker","Am Hohen Ufer","Am Höllers Eck","Am Hühnerberg","Am Jägerhof","Am Junkernkamp","Am Kemperstiegel","Am Kettnersbusch","Am Kiesberg","Am Klösterchen","Am Knechtsgraben","Am Köllerweg","Am Köttersbach","Am Kreispark","Am Kronefeld","Am Küchenhof","Am Kühnsbusch","Am Lindenfeld","Am Märchen","Am Mittelberg","Am Mönchshof","Am Mühlenbach","Am Neuenhof","Am Nonnenbruch","Am Plattenbusch","Am Quettinger Feld","Am Rosenhügel","Am Sandberg","Am Scherfenbrand","Am Schokker","Am Silbersee","Am Sonnenhang","Am Sportplatz","Am Stadtpark","Am Steinberg","Am Telegraf","Am Thelenhof","Am Vogelkreuz","Am Vogelsang","Am Vogelsfeldchen","Am Wambacher Hof","Am Wasserturm","Am Weidenbusch","Am Weiher","Am Weingarten","Am Werth","Amselweg","An den Irlen","An den Rheinauen","An der Bergerweide","An der Dingbank","An der Evangelischen Kirche","An der Evgl. Kirche","An der Feldgasse","An der Fettehenne","An der Kante","An der Laach","An der Lehmkuhle","An der Lichtenburg","An der Luisenburg","An der Robertsburg","An der Schmitten","An der Schusterinsel","An der Steinrütsch","An St. Andreas","An St. Remigius","Andreasstr.","Ankerweg","Annette-Kolb-Str.","Apenrader Str.","Arnold-Ohletz-Str.","Atzlenbacher Str.","Auerweg","Auestr.","Auf dem Acker","Auf dem Blahnenhof","Auf dem Bohnbüchel","Auf dem Bruch","Auf dem End","Auf dem Forst","Auf dem Herberg","Auf dem Lehn","Auf dem Stein","Auf dem Weierberg","Auf dem Weiherhahn","Auf den Reien","Auf der Donnen","Auf der Grieße","Auf der Ohmer","Auf der Weide","Auf'm Berg","Auf'm Kamp","Augustastr.","August-Kekulé-Str.","A.-W.-v.-Hofmann-Str.","Bahnallee","Bahnhofstr.","Baltrumstr.","Bamberger Str.","Baumberger Str.","Bebelstr.","Beckers Kämpchen","Beerenstr.","Beethovenstr.","Behringstr.","Bendenweg","Bensberger Str.","Benzstr.","Bergische Landstr.","Bergstr.","Berliner Platz","Berliner Str.","Bernhard-Letterhaus-Str.","Bernhard-Lichtenberg-Str.","Bernhard-Ridder-Str.","Bernsteinstr.","Bertha-Middelhauve-Str.","Bertha-von-Suttner-Str.","Bertolt-Brecht-Str.","Berzeliusstr.","Bielertstr.","Biesenbach","Billrothstr.","Birkenbergstr.","Birkengartenstr.","Birkenweg","Bismarckstr.","Bitterfelder Str.","Blankenburg","Blaukehlchenweg","Blütenstr.","Boberstr.","Böcklerstr.","Bodelschwinghstr.","Bodestr.","Bogenstr.","Bohnenkampsweg","Bohofsweg","Bonifatiusstr.","Bonner Str.","Borkumstr.","Bornheimer Str.","Borsigstr.","Borussiastr.","Bracknellstr.","Brahmsweg","Brandenburger Str.","Breidenbachstr.","Breslauer Str.","Bruchhauser Str.","Brückenstr.","Brucknerstr.","Brüder-Bonhoeffer-Str.","Buchenweg","Bürgerbuschweg","Burgloch","Burgplatz","Burgstr.","Burgweg","Bürriger Weg","Burscheider Str.","Buschkämpchen","Butterheider Str.","Carl-Duisberg-Platz","Carl-Duisberg-Str.","Carl-Leverkus-Str.","Carl-Maria-von-Weber-Platz","Carl-Maria-von-Weber-Str.","Carlo-Mierendorff-Str.","Carl-Rumpff-Str.","Carl-von-Ossietzky-Str.","Charlottenburger Str.","Christian-Heß-Str.","Claasbruch","Clemens-Winkler-Str.","Concordiastr.","Cranachstr.","Dahlemer Str.","Daimlerstr.","Damaschkestr.","Danziger Str.","Debengasse","Dechant-Fein-Str.","Dechant-Krey-Str.","Deichtorstr.","Dhünnberg","Dhünnstr.","Dianastr.","Diedenhofener Str.","Diepental","Diepenthaler Str.","Dieselstr.","Dillinger Str.","Distelkamp","Dohrgasse","Domblick","Dönhoffstr.","Dornierstr.","Drachenfelsstr.","Dr.-August-Blank-Str.","Dresdener Str.","Driescher Hecke","Drosselweg","Dudweilerstr.","Dünenweg","Dünfelder Str.","Dünnwalder Grenzweg","Düppeler Str.","Dürerstr.","Dürscheider Weg","Düsseldorfer Str.","Edelrather Weg","Edmund-Husserl-Str.","Eduard-Spranger-Str.","Ehrlichstr.","Eichenkamp","Eichenweg","Eidechsenweg","Eifelstr.","Eifgenstr.","Eintrachtstr.","Elbestr.","Elisabeth-Langgässer-Str.","Elisabethstr.","Elisabeth-von-Thadden-Str.","Elisenstr.","Elsa-Brändström-Str.","Elsbachstr.","Else-Lasker-Schüler-Str.","Elsterstr.","Emil-Fischer-Str.","Emil-Nolde-Str.","Engelbertstr.","Engstenberger Weg","Entenpfuhl","Erbelegasse","Erftstr.","Erfurter Str.","Erich-Heckel-Str.","Erich-Klausener-Str.","Erich-Ollenhauer-Str.","Erlenweg","Ernst-Bloch-Str.","Ernst-Ludwig-Kirchner-Str.","Erzbergerstr.","Eschenallee","Eschenweg","Esmarchstr.","Espenweg","Euckenstr.","Eulengasse","Eulenkamp","Ewald-Flamme-Str.","Ewald-Röll-Str.","Fährstr.","Farnweg","Fasanenweg","Faßbacher Hof","Felderstr.","Feldkampstr.","Feldsiefer Weg","Feldsiefer Wiesen","Feldstr.","Feldtorstr.","Felix-von-Roll-Str.","Ferdinand-Lassalle-Str.","Fester Weg","Feuerbachstr.","Feuerdornweg","Fichtenweg","Fichtestr.","Finkelsteinstr.","Finkenweg","Fixheider Str.","Flabbenhäuschen","Flensburger Str.","Fliederweg","Florastr.","Florianweg","Flotowstr.","Flurstr.","Föhrenweg","Fontanestr.","Forellental","Fortunastr.","Franz-Esser-Str.","Franz-Hitze-Str.","Franz-Kail-Str.","Franz-Marc-Str.","Freiburger Str.","Freiheitstr.","Freiherr-vom-Stein-Str.","Freudenthal","Freudenthaler Weg","Fridtjof-Nansen-Str.","Friedenberger Str.","Friedensstr.","Friedhofstr.","Friedlandstr.","Friedlieb-Ferdinand-Runge-Str.","Friedrich-Bayer-Str.","Friedrich-Bergius-Platz","Friedrich-Ebert-Platz","Friedrich-Ebert-Str.","Friedrich-Engels-Str.","Friedrich-List-Str.","Friedrich-Naumann-Str.","Friedrich-Sertürner-Str.","Friedrichstr.","Friedrich-Weskott-Str.","Friesenweg","Frischenberg","Fritz-Erler-Str.","Fritz-Henseler-Str.","Fröbelstr.","Fürstenbergplatz","Fürstenbergstr.","Gabriele-Münter-Str.","Gartenstr.","Gebhardstr.","Geibelstr.","Gellertstr.","Georg-von-Vollmar-Str.","Gerhard-Domagk-Str.","Gerhart-Hauptmann-Str.","Gerichtsstr.","Geschwister-Scholl-Str.","Gezelinallee","Gierener Weg","Ginsterweg","Gisbert-Cremer-Str.","Glücksburger Str.","Gluckstr.","Gneisenaustr.","Goetheplatz","Goethestr.","Golo-Mann-Str.","Görlitzer Str.","Görresstr.","Graebestr.","Graf-Galen-Platz","Gregor-Mendel-Str.","Greifswalder Str.","Grillenweg","Gronenborner Weg","Große Kirchstr.","Grunder Wiesen","Grundermühle","Grundermühlenhof","Grundermühlenweg","Grüner Weg","Grunewaldstr.","Grünstr.","Günther-Weisenborn-Str.","Gustav-Freytag-Str.","Gustav-Heinemann-Str.","Gustav-Radbruch-Str.","Gut Reuschenberg","Gutenbergstr.","Haberstr.","Habichtgasse","Hafenstr.","Hagenauer Str.","Hahnenblecher","Halenseestr.","Halfenleimbach","Hallesche Str.","Halligstr.","Hamberger Str.","Hammerweg","Händelstr.","Hannah-Höch-Str.","Hans-Arp-Str.","Hans-Gerhard-Str.","Hans-Sachs-Str.","Hans-Schlehahn-Str.","Hans-von-Dohnanyi-Str.","Hardenbergstr.","Haselweg","Hauptstr.","Haus-Vorster-Str.","Hauweg","Havelstr.","Havensteinstr.","Haydnstr.","Hebbelstr.","Heckenweg","Heerweg","Hegelstr.","Heidberg","Heidehöhe","Heidestr.","Heimstättenweg","Heinrich-Böll-Str.","Heinrich-Brüning-Str.","Heinrich-Claes-Str.","Heinrich-Heine-Str.","Heinrich-Hörlein-Str.","Heinrich-Lübke-Str.","Heinrich-Lützenkirchen-Weg","Heinrichstr.","Heinrich-Strerath-Str.","Heinrich-von-Kleist-Str.","Heinrich-von-Stephan-Str.","Heisterbachstr.","Helenenstr.","Helmestr.","Hemmelrather Weg","Henry-T.-v.-Böttinger-Str.","Herderstr.","Heribertstr.","Hermann-Ehlers-Str.","Hermann-Hesse-Str.","Hermann-König-Str.","Hermann-Löns-Str.","Hermann-Milde-Str.","Hermann-Nörrenberg-Str.","Hermann-von-Helmholtz-Str.","Hermann-Waibel-Str.","Herzogstr.","Heymannstr.","Hindenburgstr.","Hirzenberg","Hitdorfer Kirchweg","Hitdorfer Str.","Höfer Mühle","Höfer Weg","Hohe Str.","Höhenstr.","Höltgestal","Holunderweg","Holzer Weg","Holzer Wiesen","Hornpottweg","Hubertusweg","Hufelandstr.","Hufer Weg","Humboldtstr.","Hummelsheim","Hummelweg","Humperdinckstr.","Hüscheider Gärten","Hüscheider Str.","Hütte","Ilmstr.","Im Bergischen Heim","Im Bruch","Im Buchenhain","Im Bühl","Im Burgfeld","Im Dorf","Im Eisholz","Im Friedenstal","Im Frohental","Im Grunde","Im Hederichsfeld","Im Jücherfeld","Im Kalkfeld","Im Kirberg","Im Kirchfeld","Im Kreuzbruch","Im Mühlenfeld","Im Nesselrader Kamp","Im Oberdorf","Im Oberfeld","Im Rosengarten","Im Rottland","Im Scheffengarten","Im Staderfeld","Im Steinfeld","Im Weidenblech","Im Winkel","Im Ziegelfeld","Imbach","Imbacher Weg","Immenweg","In den Blechenhöfen","In den Dehlen","In der Birkenau","In der Dasladen","In der Felderhütten","In der Hartmannswiese","In der Höhle","In der Schaafsdellen","In der Wasserkuhl","In der Wüste","In Holzhausen","Insterstr.","Jacob-Fröhlen-Str.","Jägerstr.","Jahnstr.","Jakob-Eulenberg-Weg","Jakobistr.","Jakob-Kaiser-Str.","Jenaer Str.","Johannes-Baptist-Str.","Johannes-Dott-Str.","Johannes-Popitz-Str.","Johannes-Wislicenus-Str.","Johannisburger Str.","Johann-Janssen-Str.","Johann-Wirtz-Weg","Josefstr.","Jüch","Julius-Doms-Str.","Julius-Leber-Str.","Kaiserplatz","Kaiserstr.","Kaiser-Wilhelm-Allee","Kalkstr.","Kämpchenstr.","Kämpenwiese","Kämper Weg","Kamptalweg","Kanalstr.","Kandinskystr.","Kantstr.","Kapellenstr.","Karl-Arnold-Str.","Karl-Bosch-Str.","Karl-Bückart-Str.","Karl-Carstens-Ring","Karl-Friedrich-Goerdeler-Str.","Karl-Jaspers-Str.","Karl-König-Str.","Karl-Krekeler-Str.","Karl-Marx-Str.","Karlstr.","Karl-Ulitzka-Str.","Karl-Wichmann-Str.","Karl-Wingchen-Str.","Käsenbrod","Käthe-Kollwitz-Str.","Katzbachstr.","Kerschensteinerstr.","Kiefernweg","Kieler Str.","Kieselstr.","Kiesweg","Kinderhausen","Kleiberweg","Kleine Kirchstr.","Kleingansweg","Kleinheider Weg","Klief","Kneippstr.","Knochenbergsweg","Kochergarten","Kocherstr.","Kockelsberg","Kolberger Str.","Kolmarer Str.","Kölner Gasse","Kölner Str.","Kolpingstr.","Königsberger Platz","Konrad-Adenauer-Platz","Köpenicker Str.","Kopernikusstr.","Körnerstr.","Köschenberg","Köttershof","Kreuzbroicher Str.","Kreuzkamp","Krummer Weg","Kruppstr.","Kuhlmannweg","Kump","Kumper Weg","Kunstfeldstr.","Küppersteger Str.","Kursiefen","Kursiefer Weg","Kurtekottenweg","Kurt-Schumacher-Ring","Kyllstr.","Langenfelder Str.","Längsleimbach","Lärchenweg","Legienstr.","Lehner Mühle","Leichlinger Str.","Leimbacher Hof","Leinestr.","Leineweberstr.","Leipziger Str.","Lerchengasse","Lessingstr.","Libellenweg","Lichstr.","Liebigstr.","Lindenstr.","Lingenfeld","Linienstr.","Lippe","Löchergraben","Löfflerstr.","Loheweg","Lohrbergstr.","Lohrstr.","Löhstr.","Lortzingstr.","Lötzener Str.","Löwenburgstr.","Lucasstr.","Ludwig-Erhard-Platz","Ludwig-Girtler-Str.","Ludwig-Knorr-Str.","Luisenstr.","Lupinenweg","Lurchenweg","Lützenkirchener Str.","Lycker Str.","Maashofstr.","Manforter Str.","Marc-Chagall-Str.","Maria-Dresen-Str.","Maria-Terwiel-Str.","Marie-Curie-Str.","Marienburger Str.","Mariendorfer Str.","Marienwerderstr.","Marie-Schlei-Str.","Marktplatz","Markusweg","Martin-Buber-Str.","Martin-Heidegger-Str.","Martin-Luther-Str.","Masurenstr.","Mathildenweg","Maurinusstr.","Mauspfad","Max-Beckmann-Str.","Max-Delbrück-Str.","Max-Ernst-Str.","Max-Holthausen-Platz","Max-Horkheimer-Str.","Max-Liebermann-Str.","Max-Pechstein-Str.","Max-Planck-Str.","Max-Scheler-Str.","Max-Schönenberg-Str.","Maybachstr.","Meckhofer Feld","Meisenweg","Memelstr.","Menchendahler Str.","Mendelssohnstr.","Merziger Str.","Mettlacher Str.","Metzer Str.","Michaelsweg","Miselohestr.","Mittelstr.","Mohlenstr.","Moltkestr.","Monheimer Str.","Montanusstr.","Montessoriweg","Moosweg","Morsbroicher Str.","Moselstr.","Moskauer Str.","Mozartstr.","Mühlenweg","Muhrgasse","Muldestr.","Mülhausener Str.","Mülheimer Str.","Münsters Gäßchen","Münzstr.","Müritzstr.","Myliusstr.","Nachtigallenweg","Nauener Str.","Neißestr.","Nelly-Sachs-Str.","Netzestr.","Neuendriesch","Neuenhausgasse","Neuenkamp","Neujudenhof","Neukronenberger Str.","Neustadtstr.","Nicolai-Hartmann-Str.","Niederblecher","Niederfeldstr.","Nietzschestr.","Nikolaus-Groß-Str.","Nobelstr.","Norderneystr.","Nordstr.","Ober dem Hof","Obere Lindenstr.","Obere Str.","Oberölbach","Odenthaler Str.","Oderstr.","Okerstr.","Olof-Palme-Str.","Ophovener Str.","Opladener Platz","Opladener Str.","Ortelsburger Str.","Oskar-Moll-Str.","Oskar-Schlemmer-Str.","Oststr.","Oswald-Spengler-Str.","Otto-Dix-Str.","Otto-Grimm-Str.","Otto-Hahn-Str.","Otto-Müller-Str.","Otto-Stange-Str.","Ottostr.","Otto-Varnhagen-Str.","Otto-Wels-Str.","Ottweilerstr.","Oulustr.","Overfeldweg","Pappelweg","Paracelsusstr.","Parkstr.","Pastor-Louis-Str.","Pastor-Scheibler-Str.","Pastorskamp","Paul-Klee-Str.","Paul-Löbe-Str.","Paulstr.","Peenestr.","Pescher Busch","Peschstr.","Pestalozzistr.","Peter-Grieß-Str.","Peter-Joseph-Lenné-Str.","Peter-Neuenheuser-Str.","Petersbergstr.","Peterstr.","Pfarrer-Jekel-Str.","Pfarrer-Klein-Str.","Pfarrer-Röhr-Str.","Pfeilshofstr.","Philipp-Ott-Str.","Piet-Mondrian-Str.","Platanenweg","Pommernstr.","Porschestr.","Poststr.","Potsdamer Str.","Pregelstr.","Prießnitzstr.","Pützdelle","Quarzstr.","Quettinger Str.","Rat-Deycks-Str.","Rathenaustr.","Ratherkämp","Ratiborer Str.","Raushofstr.","Regensburger Str.","Reinickendorfer Str.","Renkgasse","Rennbaumplatz","Rennbaumstr.","Reuschenberger Str.","Reusrather Str.","Reuterstr.","Rheinallee","Rheindorfer Str.","Rheinstr.","Rhein-Wupper-Platz","Richard-Wagner-Str.","Rilkestr.","Ringstr.","Robert-Blum-Str.","Robert-Koch-Str.","Robert-Medenwald-Str.","Rolandstr.","Romberg","Röntgenstr.","Roonstr.","Ropenstall","Ropenstaller Weg","Rosenthal","Rostocker Str.","Rotdornweg","Röttgerweg","Rückertstr.","Rudolf-Breitscheid-Str.","Rudolf-Mann-Platz","Rudolf-Stracke-Str.","Ruhlachplatz","Ruhlachstr.","Rüttersweg","Saalestr.","Saarbrücker Str.","Saarlauterner Str.","Saarstr.","Salamanderweg","Samlandstr.","Sanddornstr.","Sandstr.","Sauerbruchstr.","Schäfershütte","Scharnhorststr.","Scheffershof","Scheidemannstr.","Schellingstr.","Schenkendorfstr.","Schießbergstr.","Schillerstr.","Schlangenhecke","Schlebuscher Heide","Schlebuscher Str.","Schlebuschrath","Schlehdornstr.","Schleiermacherstr.","Schloßstr.","Schmalenbruch","Schnepfenflucht","Schöffenweg","Schöllerstr.","Schöne Aussicht","Schöneberger Str.","Schopenhauerstr.","Schubertplatz","Schubertstr.","Schulberg","Schulstr.","Schumannstr.","Schwalbenweg","Schwarzastr.","Sebastianusweg","Semmelweisstr.","Siebelplatz","Siemensstr.","Solinger Str.","Sonderburger Str.","Spandauer Str.","Speestr.","Sperberweg","Sperlingsweg","Spitzwegstr.","Sporrenberger Mühle","Spreestr.","St. Ingberter Str.","Starenweg","Stauffenbergstr.","Stefan-Zweig-Str.","Stegerwaldstr.","Steglitzer Str.","Steinbücheler Feld","Steinbücheler Str.","Steinstr.","Steinweg","Stephan-Lochner-Str.","Stephanusstr.","Stettiner Str.","Stixchesstr.","Stöckenstr.","Stralsunder Str.","Straßburger Str.","Stresemannplatz","Strombergstr.","Stromstr.","Stüttekofener Str.","Sudestr.","Sürderstr.","Syltstr.","Talstr.","Tannenbergstr.","Tannenweg","Taubenweg","Teitscheider Weg","Telegrafenstr.","Teltower Str.","Tempelhofer Str.","Theodor-Adorno-Str.","Theodor-Fliedner-Str.","Theodor-Gierath-Str.","Theodor-Haubach-Str.","Theodor-Heuss-Ring","Theodor-Storm-Str.","Theodorstr.","Thomas-Dehler-Str.","Thomas-Morus-Str.","Thomas-von-Aquin-Str.","Tönges Feld","Torstr.","Treptower Str.","Treuburger Str.","Uhlandstr.","Ulmenweg","Ulmer Str.","Ulrichstr.","Ulrich-von-Hassell-Str.","Umlag","Unstrutstr.","Unter dem Schildchen","Unterölbach","Unterstr.","Uppersberg","Van\\'t-Hoff-Str.","Veit-Stoß-Str.","Vereinsstr.","Viktor-Meyer-Str.","Vincent-van-Gogh-Str.","Virchowstr.","Voigtslach","Volhardstr.","Völklinger Str.","Von-Brentano-Str.","Von-Diergardt-Str.","Von-Eichendorff-Str.","Von-Ketteler-Str.","Von-Knoeringen-Str.","Von-Pettenkofer-Str.","Von-Siebold-Str.","Wacholderweg","Waldstr.","Walter-Flex-Str.","Walter-Hempel-Str.","Walter-Hochapfel-Str.","Walter-Nernst-Str.","Wannseestr.","Warnowstr.","Warthestr.","Weddigenstr.","Weichselstr.","Weidenstr.","Weidfeldstr.","Weiherfeld","Weiherstr.","Weinhäuser Str.","Weißdornweg","Weißenseestr.","Weizkamp","Werftstr.","Werkstättenstr.","Werner-Heisenberg-Str.","Werrastr.","Weyerweg","Widdauener Str.","Wiebertshof","Wiehbachtal","Wiembachallee","Wiesdorfer Platz","Wiesenstr.","Wilhelm-Busch-Str.","Wilhelm-Hastrich-Str.","Wilhelm-Leuschner-Str.","Wilhelm-Liebknecht-Str.","Wilhelmsgasse","Wilhelmstr.","Willi-Baumeister-Str.","Willy-Brandt-Ring","Winand-Rossi-Str.","Windthorststr.","Winkelweg","Winterberg","Wittenbergstr.","Wolf-Vostell-Str.","Wolkenburgstr.","Wupperstr.","Wuppertalstr.","Wüstenhof","Yitzhak-Rabin-Str.","Zauberkuhle","Zedernweg","Zehlendorfer Str.","Zehntenweg","Zeisigweg","Zeppelinstr.","Zschopaustr.","Zum Claashäuschen","Zündhütchenweg","Zur Alten Brauerei","Zur alten Fabrik"],building_number:["###","##","#","##a","##b","##c"],secondary_address:["Apt. ###","Zimmer ###","# OG"],postcode:["#####","#####"],state:["Baden-Württemberg","Bayern","Berlin","Brandenburg","Bremen","Hamburg","Hessen","Mecklenburg-Vorpommern","Niedersachsen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland","Sachsen","Sachsen-Anhalt","Schleswig-Holstein","Thüringen"],state_abbr:["BW","BY","BE","BB","HB","HH","HE","MV","NI","NW","RP","SL","SN","ST","SH","TH"],city:["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"],street_name:["#{street_root}"],street_address:["#{street_name} #{building_number}"],default_country:["Deutschland"]},de.company={suffix:["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"],legal_form:["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]},de.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","info","name","net","org","de","ch"]},de.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]},de.name={first_name:["Aaron","Abdul","Abdullah","Adam","Adrian","Adriano","Ahmad","Ahmed","Ahmet","Alan","Albert","Alessandro","Alessio","Alex","Alexander","Alfred","Ali","Amar","Amir","Amon","Andre","Andreas","Andrew","Angelo","Ansgar","Anthony","Anton","Antonio","Arda","Arian","Armin","Arne","Arno","Arthur","Artur","Arved","Arvid","Ayman","Baran","Baris","Bastian","Batuhan","Bela","Ben","Benedikt","Benjamin","Bennet","Bennett","Benno","Bent","Berat","Berkay","Bernd","Bilal","Bjarne","Björn","Bo","Boris","Brandon","Brian","Bruno","Bryan","Burak","Calvin","Can","Carl","Carlo","Carlos","Caspar","Cedric","Cedrik","Cem","Charlie","Chris","Christian","Christiano","Christoph","Christopher","Claas","Clemens","Colin","Collin","Conner","Connor","Constantin","Corvin","Curt","Damian","Damien","Daniel","Danilo","Danny","Darian","Dario","Darius","Darren","David","Davide","Davin","Dean","Deniz","Dennis","Denny","Devin","Diego","Dion","Domenic","Domenik","Dominic","Dominik","Dorian","Dustin","Dylan","Ecrin","Eddi","Eddy","Edgar","Edwin","Efe","Ege","Elia","Eliah","Elias","Elijah","Emanuel","Emil","Emilian","Emilio","Emir","Emirhan","Emre","Enes","Enno","Enrico","Eren","Eric","Erik","Etienne","Fabian","Fabien","Fabio","Fabrice","Falk","Felix","Ferdinand","Fiete","Filip","Finlay","Finley","Finn","Finnley","Florian","Francesco","Franz","Frederic","Frederick","Frederik","Friedrich","Fritz","Furkan","Fynn","Gabriel","Georg","Gerrit","Gian","Gianluca","Gino","Giuliano","Giuseppe","Gregor","Gustav","Hagen","Hamza","Hannes","Hanno","Hans","Hasan","Hassan","Hauke","Hendrik","Hennes","Henning","Henri","Henrick","Henrik","Henry","Hugo","Hussein","Ian","Ibrahim","Ilias","Ilja","Ilyas","Immanuel","Ismael","Ismail","Ivan","Iven","Jack","Jacob","Jaden","Jakob","Jamal","James","Jamie","Jan","Janek","Janis","Janne","Jannek","Jannes","Jannik","Jannis","Jano","Janosch","Jared","Jari","Jarne","Jarno","Jaron","Jason","Jasper","Jay","Jayden","Jayson","Jean","Jens","Jeremias","Jeremie","Jeremy","Jermaine","Jerome","Jesper","Jesse","Jim","Jimmy","Joe","Joel","Joey","Johann","Johannes","John","Johnny","Jon","Jona","Jonah","Jonas","Jonathan","Jonte","Joost","Jordan","Joris","Joscha","Joschua","Josef","Joseph","Josh","Joshua","Josua","Juan","Julian","Julien","Julius","Juri","Justin","Justus","Kaan","Kai","Kalle","Karim","Karl","Karlo","Kay","Keanu","Kenan","Kenny","Keno","Kerem","Kerim","Kevin","Kian","Kilian","Kim","Kimi","Kjell","Klaas","Klemens","Konrad","Konstantin","Koray","Korbinian","Kurt","Lars","Lasse","Laurence","Laurens","Laurenz","Laurin","Lean","Leander","Leandro","Leif","Len","Lenn","Lennard","Lennart","Lennert","Lennie","Lennox","Lenny","Leo","Leon","Leonard","Leonardo","Leonhard","Leonidas","Leopold","Leroy","Levent","Levi","Levin","Lewin","Lewis","Liam","Lian","Lias","Lino","Linus","Lio","Lion","Lionel","Logan","Lorenz","Lorenzo","Loris","Louis","Luan","Luc","Luca","Lucas","Lucian","Lucien","Ludwig","Luis","Luiz","Luk","Luka","Lukas","Luke","Lutz","Maddox","Mads","Magnus","Maik","Maksim","Malik","Malte","Manuel","Marc","Marcel","Marco","Marcus","Marek","Marian","Mario","Marius","Mark","Marko","Markus","Marlo","Marlon","Marten","Martin","Marvin","Marwin","Mateo","Mathis","Matis","Mats","Matteo","Mattes","Matthias","Matthis","Matti","Mattis","Maurice","Max","Maxim","Maximilian","Mehmet","Meik","Melvin","Merlin","Mert","Michael","Michel","Mick","Miguel","Mika","Mikail","Mike","Milan","Milo","Mio","Mirac","Mirco","Mirko","Mohamed","Mohammad","Mohammed","Moritz","Morten","Muhammed","Murat","Mustafa","Nathan","Nathanael","Nelson","Neo","Nevio","Nick","Niclas","Nico","Nicolai","Nicolas","Niels","Nikita","Niklas","Niko","Nikolai","Nikolas","Nils","Nino","Noah","Noel","Norman","Odin","Oke","Ole","Oliver","Omar","Onur","Oscar","Oskar","Pascal","Patrice","Patrick","Paul","Peer","Pepe","Peter","Phil","Philip","Philipp","Pierre","Piet","Pit","Pius","Quentin","Quirin","Rafael","Raik","Ramon","Raphael","Rasmus","Raul","Rayan","René","Ricardo","Riccardo","Richard","Rick","Rico","Robert","Robin","Rocco","Roman","Romeo","Ron","Ruben","Ryan","Said","Salih","Sam","Sami","Sammy","Samuel","Sandro","Santino","Sascha","Sean","Sebastian","Selim","Semih","Shawn","Silas","Simeon","Simon","Sinan","Sky","Stefan","Steffen","Stephan","Steve","Steven","Sven","Sönke","Sören","Taha","Tamino","Tammo","Tarik","Tayler","Taylor","Teo","Theo","Theodor","Thies","Thilo","Thomas","Thorben","Thore","Thorge","Tiago","Til","Till","Tillmann","Tim","Timm","Timo","Timon","Timothy","Tino","Titus","Tizian","Tjark","Tobias","Tom","Tommy","Toni","Tony","Torben","Tore","Tristan","Tyler","Tyron","Umut","Valentin","Valentino","Veit","Victor","Viktor","Vin","Vincent","Vito","Vitus","Wilhelm","Willi","William","Willy","Xaver","Yannic","Yannick","Yannik","Yannis","Yasin","Youssef","Yunus","Yusuf","Yven","Yves","Ömer","Aaliyah","Abby","Abigail","Ada","Adelina","Adriana","Aileen","Aimee","Alana","Alea","Alena","Alessa","Alessia","Alexa","Alexandra","Alexia","Alexis","Aleyna","Alia","Alica","Alice","Alicia","Alina","Alisa","Alisha","Alissa","Aliya","Aliyah","Allegra","Alma","Alyssa","Amalia","Amanda","Amelia","Amelie","Amina","Amira","Amy","Ana","Anabel","Anastasia","Andrea","Angela","Angelina","Angelique","Anja","Ann","Anna","Annabel","Annabell","Annabelle","Annalena","Anne","Anneke","Annelie","Annemarie","Anni","Annie","Annika","Anny","Anouk","Antonia","Arda","Ariana","Ariane","Arwen","Ashley","Asya","Aurelia","Aurora","Ava","Ayleen","Aylin","Ayse","Azra","Betty","Bianca","Bianka","Caitlin","Cara","Carina","Carla","Carlotta","Carmen","Carolin","Carolina","Caroline","Cassandra","Catharina","Catrin","Cecile","Cecilia","Celia","Celina","Celine","Ceyda","Ceylin","Chantal","Charleen","Charlotta","Charlotte","Chayenne","Cheyenne","Chiara","Christin","Christina","Cindy","Claire","Clara","Clarissa","Colleen","Collien","Cora","Corinna","Cosima","Dana","Daniela","Daria","Darleen","Defne","Delia","Denise","Diana","Dilara","Dina","Dorothea","Ecrin","Eda","Eileen","Ela","Elaine","Elanur","Elea","Elena","Eleni","Eleonora","Eliana","Elif","Elina","Elisa","Elisabeth","Ella","Ellen","Elli","Elly","Elsa","Emelie","Emely","Emilia","Emilie","Emily","Emma","Emmely","Emmi","Emmy","Enie","Enna","Enya","Esma","Estelle","Esther","Eva","Evelin","Evelina","Eveline","Evelyn","Fabienne","Fatima","Fatma","Felicia","Felicitas","Felina","Femke","Fenja","Fine","Finia","Finja","Finnja","Fiona","Flora","Florentine","Francesca","Franka","Franziska","Frederike","Freya","Frida","Frieda","Friederike","Giada","Gina","Giulia","Giuliana","Greta","Hailey","Hana","Hanna","Hannah","Heidi","Helen","Helena","Helene","Helin","Henriette","Henrike","Hermine","Ida","Ilayda","Imke","Ina","Ines","Inga","Inka","Irem","Isa","Isabel","Isabell","Isabella","Isabelle","Ivonne","Jacqueline","Jamie","Jamila","Jana","Jane","Janin","Janina","Janine","Janna","Janne","Jara","Jasmin","Jasmina","Jasmine","Jella","Jenna","Jennifer","Jenny","Jessica","Jessy","Jette","Jil","Jill","Joana","Joanna","Joelina","Joeline","Joelle","Johanna","Joleen","Jolie","Jolien","Jolin","Jolina","Joline","Jona","Jonah","Jonna","Josefin","Josefine","Josephin","Josephine","Josie","Josy","Joy","Joyce","Judith","Judy","Jule","Julia","Juliana","Juliane","Julie","Julienne","Julika","Julina","Juna","Justine","Kaja","Karina","Karla","Karlotta","Karolina","Karoline","Kassandra","Katarina","Katharina","Kathrin","Katja","Katrin","Kaya","Kayra","Kiana","Kiara","Kim","Kimberley","Kimberly","Kira","Klara","Korinna","Kristin","Kyra","Laila","Lana","Lara","Larissa","Laura","Laureen","Lavinia","Lea","Leah","Leana","Leandra","Leann","Lee","Leila","Lena","Lene","Leni","Lenia","Lenja","Lenya","Leona","Leoni","Leonie","Leonora","Leticia","Letizia","Levke","Leyla","Lia","Liah","Liana","Lili","Lilia","Lilian","Liliana","Lilith","Lilli","Lillian","Lilly","Lily","Lina","Linda","Lindsay","Line","Linn","Linnea","Lisa","Lisann","Lisanne","Liv","Livia","Liz","Lola","Loreen","Lorena","Lotta","Lotte","Louisa","Louise","Luana","Luca","Lucia","Lucie","Lucienne","Lucy","Luisa","Luise","Luka","Luna","Luzie","Lya","Lydia","Lyn","Lynn","Madeleine","Madita","Madleen","Madlen","Magdalena","Maike","Mailin","Maira","Maja","Malena","Malia","Malin","Malina","Mandy","Mara","Marah","Mareike","Maren","Maria","Mariam","Marie","Marieke","Mariella","Marika","Marina","Marisa","Marissa","Marit","Marla","Marleen","Marlen","Marlena","Marlene","Marta","Martha","Mary","Maryam","Mathilda","Mathilde","Matilda","Maxi","Maxima","Maxine","Maya","Mayra","Medina","Medine","Meike","Melanie","Melek","Melike","Melina","Melinda","Melis","Melisa","Melissa","Merle","Merve","Meryem","Mette","Mia","Michaela","Michelle","Mieke","Mila","Milana","Milena","Milla","Mina","Mira","Miray","Miriam","Mirja","Mona","Monique","Nadine","Nadja","Naemi","Nancy","Naomi","Natalia","Natalie","Nathalie","Neele","Nela","Nele","Nelli","Nelly","Nia","Nicole","Nika","Nike","Nikita","Nila","Nina","Nisa","Noemi","Nora","Olivia","Patricia","Patrizia","Paula","Paulina","Pauline","Penelope","Philine","Phoebe","Pia","Rahel","Rania","Rebecca","Rebekka","Riana","Rieke","Rike","Romina","Romy","Ronja","Rosa","Rosalie","Ruby","Sabrina","Sahra","Sally","Salome","Samantha","Samia","Samira","Sandra","Sandy","Sanja","Saphira","Sara","Sarah","Saskia","Selin","Selina","Selma","Sena","Sidney","Sienna","Silja","Sina","Sinja","Smilla","Sofia","Sofie","Sonja","Sophia","Sophie","Soraya","Stefanie","Stella","Stephanie","Stina","Sude","Summer","Susanne","Svea","Svenja","Sydney","Tabea","Talea","Talia","Tamara","Tamia","Tamina","Tanja","Tara","Tarja","Teresa","Tessa","Thalea","Thalia","Thea","Theresa","Tia","Tina","Tomke","Tuana","Valentina","Valeria","Valerie","Vanessa","Vera","Veronika","Victoria","Viktoria","Viola","Vivian","Vivien","Vivienne","Wibke","Wiebke","Xenia","Yara","Yaren","Yasmin","Ylvi","Ylvie","Yvonne","Zara","Zehra","Zeynep","Zoe","Zoey","Zoé"],
last_name:["Abel","Abicht","Abraham","Abramovic","Abt","Achilles","Achkinadze","Ackermann","Adam","Adams","Ade","Agostini","Ahlke","Ahrenberg","Ahrens","Aigner","Albert","Albrecht","Alexa","Alexander","Alizadeh","Allgeyer","Amann","Amberg","Anding","Anggreny","Apitz","Arendt","Arens","Arndt","Aryee","Aschenbroich","Assmus","Astafei","Auer","Axmann","Baarck","Bachmann","Badane","Bader","Baganz","Bahl","Bak","Balcer","Balck","Balkow","Balnuweit","Balzer","Banse","Barr","Bartels","Barth","Barylla","Baseda","Battke","Bauer","Bauermeister","Baumann","Baumeister","Bauschinger","Bauschke","Bayer","Beavogui","Beck","Beckel","Becker","Beckmann","Bedewitz","Beele","Beer","Beggerow","Beh","Behr","Behrenbruch","Belz","Bender","Benecke","Benner","Benninger","Benzing","Berends","Berger","Berner","Berning","Bertenbreiter","Best","Bethke","Betz","Beushausen","Beutelspacher","Beyer","Biba","Bichler","Bickel","Biedermann","Bieler","Bielert","Bienasch","Bienias","Biesenbach","Bigdeli","Birkemeyer","Bittner","Blank","Blaschek","Blassneck","Bloch","Blochwitz","Blockhaus","Blum","Blume","Bock","Bode","Bogdashin","Bogenrieder","Bohge","Bolm","Borgschulze","Bork","Bormann","Bornscheuer","Borrmann","Borsch","Boruschewski","Bos","Bosler","Bourrouag","Bouschen","Boxhammer","Boyde","Bozsik","Brand","Brandenburg","Brandis","Brandt","Brauer","Braun","Brehmer","Breitenstein","Bremer","Bremser","Brenner","Brettschneider","Breu","Breuer","Briesenick","Bringmann","Brinkmann","Brix","Broening","Brosch","Bruckmann","Bruder","Bruhns","Brunner","Bruns","Bräutigam","Brömme","Brüggmann","Buchholz","Buchrucker","Buder","Bultmann","Bunjes","Burger","Burghagen","Burkhard","Burkhardt","Burmeister","Busch","Buschbaum","Busemann","Buss","Busse","Bussmann","Byrd","Bäcker","Böhm","Bönisch","Börgeling","Börner","Böttner","Büchele","Bühler","Büker","Büngener","Bürger","Bürklein","Büscher","Büttner","Camara","Carlowitz","Carlsohn","Caspari","Caspers","Chapron","Christ","Cierpinski","Clarius","Cleem","Cleve","Co","Conrad","Cordes","Cornelsen","Cors","Cotthardt","Crews","Cronjäger","Crosskofp","Da","Dahm","Dahmen","Daimer","Damaske","Danneberg","Danner","Daub","Daubner","Daudrich","Dauer","Daum","Dauth","Dautzenberg","De","Decker","Deckert","Deerberg","Dehmel","Deja","Delonge","Demut","Dengler","Denner","Denzinger","Derr","Dertmann","Dethloff","Deuschle","Dieckmann","Diedrich","Diekmann","Dienel","Dies","Dietrich","Dietz","Dietzsch","Diezel","Dilla","Dingelstedt","Dippl","Dittmann","Dittmar","Dittmer","Dix","Dobbrunz","Dobler","Dohring","Dolch","Dold","Dombrowski","Donie","Doskoczynski","Dragu","Drechsler","Drees","Dreher","Dreier","Dreissigacker","Dressler","Drews","Duma","Dutkiewicz","Dyett","Dylus","Dächert","Döbel","Döring","Dörner","Dörre","Dück","Eberhard","Eberhardt","Ecker","Eckhardt","Edorh","Effler","Eggenmueller","Ehm","Ehmann","Ehrig","Eich","Eichmann","Eifert","Einert","Eisenlauer","Ekpo","Elbe","Eleyth","Elss","Emert","Emmelmann","Ender","Engel","Engelen","Engelmann","Eplinius","Erdmann","Erhardt","Erlei","Erm","Ernst","Ertl","Erwes","Esenwein","Esser","Evers","Everts","Ewald","Fahner","Faller","Falter","Farber","Fassbender","Faulhaber","Fehrig","Feld","Felke","Feller","Fenner","Fenske","Feuerbach","Fietz","Figl","Figura","Filipowski","Filsinger","Fincke","Fink","Finke","Fischer","Fitschen","Fleischer","Fleischmann","Floder","Florczak","Flore","Flottmann","Forkel","Forst","Frahmeke","Frank","Franke","Franta","Frantz","Franz","Franzis","Franzmann","Frauen","Frauendorf","Freigang","Freimann","Freimuth","Freisen","Frenzel","Frey","Fricke","Fried","Friedek","Friedenberg","Friedmann","Friedrich","Friess","Frisch","Frohn","Frosch","Fuchs","Fuhlbrügge","Fusenig","Fust","Förster","Gaba","Gabius","Gabler","Gadschiew","Gakstädter","Galander","Gamlin","Gamper","Gangnus","Ganzmann","Garatva","Gast","Gastel","Gatzka","Gauder","Gebhardt","Geese","Gehre","Gehrig","Gehring","Gehrke","Geiger","Geisler","Geissler","Gelling","Gens","Gerbennow","Gerdel","Gerhardt","Gerschler","Gerson","Gesell","Geyer","Ghirmai","Ghosh","Giehl","Gierisch","Giesa","Giesche","Gilde","Glatting","Goebel","Goedicke","Goldbeck","Goldfuss","Goldkamp","Goldkühle","Goller","Golling","Gollnow","Golomski","Gombert","Gotthardt","Gottschalk","Gotz","Goy","Gradzki","Graf","Grams","Grasse","Gratzky","Grau","Greb","Green","Greger","Greithanner","Greschner","Griem","Griese","Grimm","Gromisch","Gross","Grosser","Grossheim","Grosskopf","Grothaus","Grothkopp","Grotke","Grube","Gruber","Grundmann","Gruning","Gruszecki","Gröss","Grötzinger","Grün","Grüner","Gummelt","Gunkel","Gunther","Gutjahr","Gutowicz","Gutschank","Göbel","Göckeritz","Göhler","Görlich","Görmer","Götz","Götzelmann","Güldemeister","Günther","Günz","Gürbig","Haack","Haaf","Habel","Hache","Hackbusch","Hackelbusch","Hadfield","Hadwich","Haferkamp","Hahn","Hajek","Hallmann","Hamann","Hanenberger","Hannecker","Hanniske","Hansen","Hardy","Hargasser","Harms","Harnapp","Harter","Harting","Hartlieb","Hartmann","Hartwig","Hartz","Haschke","Hasler","Hasse","Hassfeld","Haug","Hauke","Haupt","Haverney","Heberstreit","Hechler","Hecht","Heck","Hedermann","Hehl","Heidelmann","Heidler","Heinemann","Heinig","Heinke","Heinrich","Heinze","Heiser","Heist","Hellmann","Helm","Helmke","Helpling","Hengmith","Henkel","Hennes","Henry","Hense","Hensel","Hentel","Hentschel","Hentschke","Hepperle","Herberger","Herbrand","Hering","Hermann","Hermecke","Herms","Herold","Herrmann","Herschmann","Hertel","Herweg","Herwig","Herzenberg","Hess","Hesse","Hessek","Hessler","Hetzler","Heuck","Heydemüller","Hiebl","Hildebrand","Hildenbrand","Hilgendorf","Hillard","Hiller","Hingsen","Hingst","Hinrichs","Hirsch","Hirschberg","Hirt","Hodea","Hoffman","Hoffmann","Hofmann","Hohenberger","Hohl","Hohn","Hohnheiser","Hold","Holdt","Holinski","Holl","Holtfreter","Holz","Holzdeppe","Holzner","Hommel","Honz","Hooss","Hoppe","Horak","Horn","Horna","Hornung","Hort","Howard","Huber","Huckestein","Hudak","Huebel","Hugo","Huhn","Hujo","Huke","Huls","Humbert","Huneke","Huth","Häber","Häfner","Höcke","Höft","Höhne","Hönig","Hördt","Hübenbecker","Hübl","Hübner","Hügel","Hüttcher","Hütter","Ibe","Ihly","Illing","Isak","Isekenmeier","Itt","Jacob","Jacobs","Jagusch","Jahn","Jahnke","Jakobs","Jakubczyk","Jambor","Jamrozy","Jander","Janich","Janke","Jansen","Jarets","Jaros","Jasinski","Jasper","Jegorov","Jellinghaus","Jeorga","Jerschabek","Jess","John","Jonas","Jossa","Jucken","Jung","Jungbluth","Jungton","Just","Jürgens","Kaczmarek","Kaesmacher","Kahl","Kahlert","Kahles","Kahlmeyer","Kaiser","Kalinowski","Kallabis","Kallensee","Kampf","Kampschulte","Kappe","Kappler","Karhoff","Karrass","Karst","Karsten","Karus","Kass","Kasten","Kastner","Katzinski","Kaufmann","Kaul","Kausemann","Kawohl","Kazmarek","Kedzierski","Keil","Keiner","Keller","Kelm","Kempe","Kemper","Kempter","Kerl","Kern","Kesselring","Kesselschläger","Kette","Kettenis","Keutel","Kick","Kiessling","Kinadeter","Kinzel","Kinzy","Kirch","Kirst","Kisabaka","Klaas","Klabuhn","Klapper","Klauder","Klaus","Kleeberg","Kleiber","Klein","Kleinert","Kleininger","Kleinmann","Kleinsteuber","Kleiss","Klemme","Klimczak","Klinger","Klink","Klopsch","Klose","Kloss","Kluge","Kluwe","Knabe","Kneifel","Knetsch","Knies","Knippel","Knobel","Knoblich","Knoll","Knorr","Knorscheidt","Knut","Kobs","Koch","Kochan","Kock","Koczulla","Koderisch","Koehl","Koehler","Koenig","Koester","Kofferschlager","Koha","Kohle","Kohlmann","Kohnle","Kohrt","Koj","Kolb","Koleiski","Kolokas","Komoll","Konieczny","Konig","Konow","Konya","Koob","Kopf","Kosenkow","Koster","Koszewski","Koubaa","Kovacs","Kowalick","Kowalinski","Kozakiewicz","Krabbe","Kraft","Kral","Kramer","Krauel","Kraus","Krause","Krauspe","Kreb","Krebs","Kreissig","Kresse","Kreutz","Krieger","Krippner","Krodinger","Krohn","Krol","Kron","Krueger","Krug","Kruger","Krull","Kruschinski","Krämer","Kröckert","Kröger","Krüger","Kubera","Kufahl","Kuhlee","Kuhnen","Kulimann","Kulma","Kumbernuss","Kummle","Kunz","Kupfer","Kupprion","Kuprion","Kurnicki","Kurrat","Kurschilgen","Kuschewitz","Kuschmann","Kuske","Kustermann","Kutscherauer","Kutzner","Kwadwo","Kähler","Käther","Köhler","Köhrbrück","Köhre","Kölotzei","König","Köpernick","Köseoglu","Kúhn","Kúhnert","Kühn","Kühnel","Kühnemund","Kühnert","Kühnke","Küsters","Küter","Laack","Lack","Ladewig","Lakomy","Lammert","Lamos","Landmann","Lang","Lange","Langfeld","Langhirt","Lanig","Lauckner","Lauinger","Laurén","Lausecker","Laux","Laws","Lax","Leberer","Lehmann","Lehner","Leibold","Leide","Leimbach","Leipold","Leist","Leiter","Leiteritz","Leitheim","Leiwesmeier","Lenfers","Lenk","Lenz","Lenzen","Leo","Lepthin","Lesch","Leschnik","Letzelter","Lewin","Lewke","Leyckes","Lg","Lichtenfeld","Lichtenhagen","Lichtl","Liebach","Liebe","Liebich","Liebold","Lieder","Lienshöft","Linden","Lindenberg","Lindenmayer","Lindner","Linke","Linnenbaum","Lippe","Lipske","Lipus","Lischka","Lobinger","Logsch","Lohmann","Lohre","Lohse","Lokar","Loogen","Lorenz","Losch","Loska","Lott","Loy","Lubina","Ludolf","Lufft","Lukoschek","Lutje","Lutz","Löser","Löwa","Lübke","Maak","Maczey","Madetzky","Madubuko","Mai","Maier","Maisch","Malek","Malkus","Mallmann","Malucha","Manns","Manz","Marahrens","Marchewski","Margis","Markowski","Marl","Marner","Marquart","Marschek","Martel","Marten","Martin","Marx","Marxen","Mathes","Mathies","Mathiszik","Matschke","Mattern","Matthes","Matula","Mau","Maurer","Mauroff","May","Maybach","Mayer","Mebold","Mehl","Mehlhorn","Mehlorn","Meier","Meisch","Meissner","Meloni","Melzer","Menga","Menne","Mensah","Mensing","Merkel","Merseburg","Mertens","Mesloh","Metzger","Metzner","Mewes","Meyer","Michallek","Michel","Mielke","Mikitenko","Milde","Minah","Mintzlaff","Mockenhaupt","Moede","Moedl","Moeller","Moguenara","Mohr","Mohrhard","Molitor","Moll","Moller","Molzan","Montag","Moormann","Mordhorst","Morgenstern","Morhelfer","Moritz","Moser","Motchebon","Motzenbbäcker","Mrugalla","Muckenthaler","Mues","Muller","Mulrain","Mächtig","Mäder","Möcks","Mögenburg","Möhsner","Möldner","Möllenbeck","Möller","Möllinger","Mörsch","Mühleis","Müller","Münch","Nabein","Nabow","Nagel","Nannen","Nastvogel","Nau","Naubert","Naumann","Ne","Neimke","Nerius","Neubauer","Neubert","Neuendorf","Neumair","Neumann","Neupert","Neurohr","Neuschwander","Newton","Ney","Nicolay","Niedermeier","Nieklauson","Niklaus","Nitzsche","Noack","Nodler","Nolte","Normann","Norris","Northoff","Nowak","Nussbeck","Nwachukwu","Nytra","Nöh","Oberem","Obergföll","Obermaier","Ochs","Oeser","Olbrich","Onnen","Ophey","Oppong","Orth","Orthmann","Oschkenat","Osei","Osenberg","Ostendarp","Ostwald","Otte","Otto","Paesler","Pajonk","Pallentin","Panzig","Paschke","Patzwahl","Paukner","Peselman","Peter","Peters","Petzold","Pfeiffer","Pfennig","Pfersich","Pfingsten","Pflieger","Pflügner","Philipp","Pichlmaier","Piesker","Pietsch","Pingpank","Pinnock","Pippig","Pitschugin","Plank","Plass","Platzer","Plauk","Plautz","Pletsch","Plotzitzka","Poehn","Poeschl","Pogorzelski","Pohl","Pohland","Pohle","Polifka","Polizzi","Pollmächer","Pomp","Ponitzsch","Porsche","Porth","Poschmann","Poser","Pottel","Prah","Prange","Prediger","Pressler","Preuk","Preuss","Prey","Priemer","Proske","Pusch","Pöche","Pöge","Raabe","Rabenstein","Rach","Radtke","Rahn","Ranftl","Rangen","Ranz","Rapp","Rath","Rau","Raubuch","Raukuc","Rautenkranz","Rehwagen","Reiber","Reichardt","Reichel","Reichling","Reif","Reifenrath","Reimann","Reinberg","Reinelt","Reinhardt","Reinke","Reitze","Renk","Rentz","Renz","Reppin","Restle","Restorff","Retzke","Reuber","Reumann","Reus","Reuss","Reusse","Rheder","Rhoden","Richards","Richter","Riedel","Riediger","Rieger","Riekmann","Riepl","Riermeier","Riester","Riethmüller","Rietmüller","Rietscher","Ringel","Ringer","Rink","Ripken","Ritosek","Ritschel","Ritter","Rittweg","Ritz","Roba","Rockmeier","Rodehau","Rodowski","Roecker","Roggatz","Rohländer","Rohrer","Rokossa","Roleder","Roloff","Roos","Rosbach","Roschinsky","Rose","Rosenauer","Rosenbauer","Rosenthal","Rosksch","Rossberg","Rossler","Roth","Rother","Ruch","Ruckdeschel","Rumpf","Rupprecht","Ruth","Ryjikh","Ryzih","Rädler","Räntsch","Rödiger","Röse","Röttger","Rücker","Rüdiger","Rüter","Sachse","Sack","Saflanis","Sagafe","Sagonas","Sahner","Saile","Sailer","Salow","Salzer","Salzmann","Sammert","Sander","Sarvari","Sattelmaier","Sauer","Sauerland","Saumweber","Savoia","Scc","Schacht","Schaefer","Schaffarzik","Schahbasian","Scharf","Schedler","Scheer","Schelk","Schellenbeck","Schembera","Schenk","Scherbarth","Scherer","Schersing","Scherz","Scheurer","Scheuring","Scheytt","Schielke","Schieskow","Schildhauer","Schilling","Schima","Schimmer","Schindzielorz","Schirmer","Schirrmeister","Schlachter","Schlangen","Schlawitz","Schlechtweg","Schley","Schlicht","Schlitzer","Schmalzle","Schmid","Schmidt","Schmidtchen","Schmitt","Schmitz","Schmuhl","Schneider","Schnelting","Schnieder","Schniedermeier","Schnürer","Schoberg","Scholz","Schonberg","Schondelmaier","Schorr","Schott","Schottmann","Schouren","Schrader","Schramm","Schreck","Schreiber","Schreiner","Schreiter","Schroder","Schröder","Schuermann","Schuff","Schuhaj","Schuldt","Schult","Schulte","Schultz","Schultze","Schulz","Schulze","Schumacher","Schumann","Schupp","Schuri","Schuster","Schwab","Schwalm","Schwanbeck","Schwandke","Schwanitz","Schwarthoff","Schwartz","Schwarz","Schwarzer","Schwarzkopf","Schwarzmeier","Schwatlo","Schweisfurth","Schwennen","Schwerdtner","Schwidde","Schwirkschlies","Schwuchow","Schäfer","Schäffel","Schäffer","Schäning","Schöckel","Schönball","Schönbeck","Schönberg","Schönebeck","Schönenberger","Schönfeld","Schönherr","Schönlebe","Schötz","Schüler","Schüppel","Schütz","Schütze","Seeger","Seelig","Sehls","Seibold","Seidel","Seiders","Seigel","Seiler","Seitz","Semisch","Senkel","Sewald","Siebel","Siebert","Siegling","Sielemann","Siemon","Siener","Sievers","Siewert","Sihler","Sillah","Simon","Sinnhuber","Sischka","Skibicki","Sladek","Slotta","Smieja","Soboll","Sokolowski","Soller","Sollner","Sommer","Somssich","Sonn","Sonnabend","Spahn","Spank","Spelmeyer","Spiegelburg","Spielvogel","Spinner","Spitzmüller","Splinter","Sporrer","Sprenger","Spöttel","Stahl","Stang","Stanger","Stauss","Steding","Steffen","Steffny","Steidl","Steigauf","Stein","Steinecke","Steinert","Steinkamp","Steinmetz","Stelkens","Stengel","Stengl","Stenzel","Stepanov","Stephan","Stern","Steuk","Stief","Stifel","Stoll","Stolle","Stolz","Storl","Storp","Stoutjesdijk","Stratmann","Straub","Strausa","Streck","Streese","Strege","Streit","Streller","Strieder","Striezel","Strogies","Strohschank","Strunz","Strutz","Stube","Stöckert","Stöppler","Stöwer","Stürmer","Suffa","Sujew","Sussmann","Suthe","Sutschet","Swillims","Szendrei","Sören","Sürth","Tafelmeier","Tang","Tasche","Taufratshofer","Tegethof","Teichmann","Tepper","Terheiden","Terlecki","Teufel","Theele","Thieke","Thimm","Thiomas","Thomas","Thriene","Thränhardt","Thust","Thyssen","Thöne","Tidow","Tiedtke","Tietze","Tilgner","Tillack","Timmermann","Tischler","Tischmann","Tittman","Tivontschik","Tonat","Tonn","Trampeli","Trauth","Trautmann","Travan","Treff","Tremmel","Tress","Tsamonikian","Tschiers","Tschirch","Tuch","Tucholke","Tudow","Tuschmo","Tächl","Többen","Töpfer","Uhlemann","Uhlig","Uhrig","Uibel","Uliczka","Ullmann","Ullrich","Umbach","Umlauft","Umminger","Unger","Unterpaintner","Urban","Urbaniak","Urbansky","Urhig","Vahlensieck","Van","Vangermain","Vater","Venghaus","Verniest","Verzi","Vey","Viellehner","Vieweg","Voelkel","Vogel","Vogelgsang","Vogt","Voigt","Vokuhl","Volk","Volker","Volkmann","Von","Vona","Vontein","Wachenbrunner","Wachtel","Wagner","Waibel","Wakan","Waldmann","Wallner","Wallstab","Walter","Walther","Walton","Walz","Wanner","Wartenberg","Waschbüsch","Wassilew","Wassiluk","Weber","Wehrsen","Weidlich","Weidner","Weigel","Weight","Weiler","Weimer","Weis","Weiss","Weller","Welsch","Welz","Welzel","Weniger","Wenk","Werle","Werner","Werrmann","Wessel","Wessinghage","Weyel","Wezel","Wichmann","Wickert","Wiebe","Wiechmann","Wiegelmann","Wierig","Wiese","Wieser","Wilhelm","Wilky","Will","Willwacher","Wilts","Wimmer","Winkelmann","Winkler","Winter","Wischek","Wischer","Wissing","Wittich","Wittl","Wolf","Wolfarth","Wolff","Wollenberg","Wollmann","Woytkowska","Wujak","Wurm","Wyludda","Wölpert","Wöschler","Wühn","Wünsche","Zach","Zaczkiewicz","Zahn","Zaituc","Zandt","Zanner","Zapletal","Zauber","Zeidler","Zekl","Zender","Zeuch","Zeyen","Zeyhle","Ziegler","Zimanyi","Zimmer","Zimmermann","Zinser","Zintl","Zipp","Zipse","Zschunke","Zuber","Zwiener","Zümsande","Östringer","Überacker"],prefix:["Hr.","Fr.","Dr.","Prof. Dr."],nobility_title_prefix:["zu","von","vom","von der"],name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{nobility_title_prefix} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]},de.phone_number={formats:["(0###) #########","(0####) #######","+49-###-#######","+49-####-########"]},de.cell_phone={formats:["+49-1##-#######","+49-1###-########"]};

},{}],93:[function(require,module,exports){
var de_AT={};module.exports=de_AT,de_AT.title="German (Austria)",de_AT.address={country:["Ägypten","Äquatorialguinea","Äthiopien","Österreich","Afghanistan","Albanien","Algerien","Amerikanisch-Samoa","Amerikanische Jungferninseln","Andorra","Angola","Anguilla","Antarktis","Antigua und Barbuda","Argentinien","Armenien","Aruba","Aserbaidschan","Australien","Bahamas","Bahrain","Bangladesch","Barbados","Belarus","Belgien","Belize","Benin","die Bermudas","Bhutan","Bolivien","Bosnien und Herzegowina","Botsuana","Bouvetinsel","Brasilien","Britische Jungferninseln","Britisches Territorium im Indischen Ozean","Brunei Darussalam","Bulgarien","Burkina Faso","Burundi","Chile","China","Cookinseln","Costa Rica","Dänemark","Demokratische Republik Kongo","Demokratische Volksrepublik Korea","Deutschland","Dominica","Dominikanische Republik","Dschibuti","Ecuador","El Salvador","Eritrea","Estland","Färöer","Falklandinseln","Fidschi","Finnland","Frankreich","Französisch-Guayana","Französisch-Polynesien","Französische Gebiete im südlichen Indischen Ozean","Gabun","Gambia","Georgien","Ghana","Gibraltar","Grönland","Grenada","Griechenland","Guadeloupe","Guam","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Heard und McDonaldinseln","Honduras","Hongkong","Indien","Indonesien","Irak","Iran","Irland","Island","Israel","Italien","Jamaika","Japan","Jemen","Jordanien","Jugoslawien","Kaimaninseln","Kambodscha","Kamerun","Kanada","Kap Verde","Kasachstan","Katar","Kenia","Kirgisistan","Kiribati","Kleinere amerikanische Überseeinseln","Kokosinseln","Kolumbien","Komoren","Kongo","Kroatien","Kuba","Kuwait","Laos","Lesotho","Lettland","Libanon","Liberia","Libyen","Liechtenstein","Litauen","Luxemburg","Macau","Madagaskar","Malawi","Malaysia","Malediven","Mali","Malta","ehemalige jugoslawische Republik Mazedonien","Marokko","Marshallinseln","Martinique","Mauretanien","Mauritius","Mayotte","Mexiko","Mikronesien","Monaco","Mongolei","Montserrat","Mosambik","Myanmar","Nördliche Marianen","Namibia","Nauru","Nepal","Neukaledonien","Neuseeland","Nicaragua","Niederländische Antillen","Niederlande","Niger","Nigeria","Niue","Norfolkinsel","Norwegen","Oman","Osttimor","Pakistan","Palau","Panama","Papua-Neuguinea","Paraguay","Peru","Philippinen","Pitcairninseln","Polen","Portugal","Puerto Rico","Réunion","Republik Korea","Republik Moldau","Ruanda","Rumänien","Russische Föderation","São Tomé und Príncipe","Südafrika","Südgeorgien und Südliche Sandwichinseln","Salomonen","Sambia","Samoa","San Marino","Saudi-Arabien","Schweden","Schweiz","Senegal","Seychellen","Sierra Leone","Simbabwe","Singapur","Slowakei","Slowenien","Somalien","Spanien","Sri Lanka","St. Helena","St. Kitts und Nevis","St. Lucia","St. Pierre und Miquelon","St. Vincent und die Grenadinen","Sudan","Surinam","Svalbard und Jan Mayen","Swasiland","Syrien","Türkei","Tadschikistan","Taiwan","Tansania","Thailand","Togo","Tokelau","Tonga","Trinidad und Tobago","Tschad","Tschechische Republik","Tunesien","Turkmenistan","Turks- und Caicosinseln","Tuvalu","Uganda","Ukraine","Ungarn","Uruguay","Usbekistan","Vanuatu","Vatikanstadt","Venezuela","Vereinigte Arabische Emirate","Vereinigte Staaten","Vereinigtes Königreich","Vietnam","Wallis und Futuna","Weihnachtsinsel","Westsahara","Zentralafrikanische Republik","Zypern"],street_root:["Ahorn","Ahorngasse (St. Andrä)","Alleestraße (Poysbrunn)","Alpenlandstraße","Alte Poststraße","Alte Ufergasse","Am Kronawett (Hagenbrunn)","Am Mühlwasser","Am Rebenhang","Am Sternweg","Anton Wildgans-Straße","Auer-von-Welsbach-Weg","Auf der Stift","Aufeldgasse","Bahngasse","Bahnhofstraße","Bahnstraße (Gerhaus)","Basteigasse","Berggasse","Bergstraße","Birkenweg","Blasiussteig","Blattur","Bruderhofgasse","Brunnelligasse","Bühelweg","Darnautgasse","Donaugasse","Dorfplatz (Haselbach)","Dr.-Oberreiter-Straße","Dr.Karl Holoubek-Str.","Drautal Bundesstraße","Dürnrohrer Straße","Ebenthalerstraße","Eckgrabenweg","Erlenstraße","Erlenweg","Eschenweg","Etrichgasse","Fassergasse","Feichteggerwiese","Feld-Weg","Feldgasse","Feldstapfe","Fischpointweg","Flachbergstraße","Flurweg","Franz Schubert-Gasse","Franz-Schneeweiß-Weg","Franz-von-Assisi-Straße","Fritz-Pregl-Straße","Fuchsgrubenweg","Födlerweg","Föhrenweg","Fünfhaus (Paasdorf)","Gabelsbergerstraße","Gartenstraße","Geigen","Geigergasse","Gemeindeaugasse","Gemeindeplatz","Georg-Aichinger-Straße","Glanfeldbachweg","Graben (Burgauberg)","Grub","Gröretgasse","Grünbach","Gösting","Hainschwang","Hans-Mauracher-Straße","Hart","Teichstraße","Hauptplatz","Hauptstraße","Heideweg","Heinrich Landauer Gasse","Helenengasse","Hermann von Gilmweg","Hermann-Löns-Gasse","Herminengasse","Hernstorferstraße","Hirsdorf","Hochfeistritz","Hochhaus Neue Donau","Hof","Hussovits Gasse","Höggen","Hütten","Janzgasse","Jochriemgutstraße","Johann-Strauß-Gasse","Julius-Raab-Straße","Kahlenberger Straße","Karl Kraft-Straße","Kegelprielstraße","Keltenberg-Eponaweg","Kennedybrücke","Kerpelystraße","Kindergartenstraße","Kinderheimgasse","Kirchenplatz","Kirchweg","Klagenfurter Straße","Klamm","Kleinbaumgarten","Klingergasse","Koloniestraße","Konrad-Duden-Gasse","Krankenhausstraße","Kubinstraße","Köhldorfergasse","Lackenweg","Lange Mekotte","Leifling","Leopold Frank-Straße (Pellendorf)","Lerchengasse (Pirka)","Lichtensternsiedlung V","Lindenhofstraße","Lindenweg","Luegstraße","Maierhof","Malerweg","Mitterweg","Mittlere Hauptstraße","Moosbachgasse","Morettigasse","Musikpavillon Riezlern","Mühlboden","Mühle","Mühlenweg","Neustiftgasse","Niederegg","Niedergams","Nordwestbahnbrücke","Oberbödenalm","Obere Berggasse","Oedt","Am Färberberg","Ottogasse","Paul Peters-Gasse","Perspektivstraße","Poppichl","Privatweg","Prixgasse","Pyhra","Radetzkystraße","Raiden","Reichensteinstraße","Reitbauernstraße","Reiterweg","Reitschulgasse","Ringweg","Rupertistraße","Römerstraße","Römerweg","Sackgasse","Schaunbergerstraße","Schloßweg","Schulgasse (Langeck)","Schönholdsiedlung","Seeblick","Seestraße","Semriacherstraße","Simling","Sipbachzeller Straße","Sonnenweg","Spargelfeldgasse","Spiesmayrweg","Sportplatzstraße","St.Ulrich","Steilmannstraße","Steingrüneredt","Strassfeld","Straßerau","Stöpflweg","Stüra","Taferngasse","Tennweg","Thomas Koschat-Gasse","Tiroler Straße","Torrogasse","Uferstraße (Schwarzau am Steinfeld)","Unterdörfl","Unterer Sonnrainweg","Verwaltersiedlung","Waldhang","Wasen","Weidenstraße","Weiherweg","Wettsteingasse","Wiener Straße","Windisch","Zebragasse","Zellerstraße","Ziehrerstraße","Zulechnerweg","Zwergjoch","Ötzbruck"],building_number:["###","##","#","##a","##b","##c"],secondary_address:["Apt. ###","Zimmer ###","# OG"],postcode:["####"],state:["Burgenland","Kärnten","Niederösterreich","Oberösterreich","Salzburg","Steiermark","Tirol","Vorarlberg","Wien"],state_abbr:["Bgld.","Ktn.","NÖ","OÖ","Sbg.","Stmk.","T","Vbg.","W"],city_name:["Aigen im Mühlkreis","Allerheiligen bei Wildon","Altenfelden","Arriach","Axams","Baumgartenberg","Bergern im Dunkelsteinerwald","Berndorf bei Salzburg","Bregenz","Breitenbach am Inn","Deutsch-Wagram","Dienten am Hochkönig","Dietach","Dornbirn","Dürnkrut","Eben im Pongau","Ebenthal in Kärnten","Eichgraben","Eisenstadt","Ellmau","Feistritz am Wechsel","Finkenberg","Fiss","Frantschach-St. Gertraud","Fritzens","Gams bei Hieflau","Geiersberg","Graz","Großhöflein","Gößnitz","Hartl","Hausleiten","Herzogenburg","Hinterhornbach","Hochwolkersdorf","Ilz","Ilztal","Innerbraz","Innsbruck","Itter","Jagerberg","Jeging","Johnsbach","Johnsdorf-Brunn","Jungholz","Kirchdorf am Inn","Klagenfurt","Kottes-Purk","Krumau am Kamp","Krumbach","Lavamünd","Lech","Linz","Ludesch","Lödersdorf","Marbach an der Donau","Mattsee","Mautern an der Donau","Mauterndorf","Mitterbach am Erlaufsee","Neudorf bei Passail","Neudorf bei Staatz","Neukirchen an der Enknach","Neustift an der Lafnitz","Niederleis","Oberndorf in Tirol","Oberstorcha","Oberwaltersdorf","Oed-Oehling","Ort im Innkreis","Pilgersdorf","Pitschgau","Pollham","Preitenegg","Purbach am Neusiedler See","Rabenwald","Raiding","Rastenfeld","Ratten","Rettenegg","Salzburg","Sankt Johann im Saggautal","St. Peter am Kammersberg","St. Pölten","St. Veit an der Glan","Taxenbach","Tragwein","Trebesing","Trieben","Turnau","Ungerdorf","Unterauersbach","Unterstinkenbrunn","Untertilliach","Uttendorf","Vals","Velden am Wörther See","Viehhofen","Villach","Vitis","Waidhofen an der Thaya","Waldkirchen am Wesen","Weißkirchen an der Traun","Wien","Wimpassing im Schwarzatale","Ybbs an der Donau","Ybbsitz","Yspertal","Zeillern","Zell am Pettenfirst","Zell an der Pram","Zerlach","Zwölfaxing","Öblarn","Übelbach","Überackern","Übersaxen","Übersbach"],city:["#{city_name}"],street_name:["#{street_root}"],street_address:["#{street_name} #{building_number}"],default_country:["Österreich"]},de_AT.company={suffix:["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"],legal_form:["GmbH","AG","Gruppe","KG","GmbH & Co. KG","UG","OHG"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]},de_AT.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","info","name","net","org","de","ch","at"]},de_AT.name={first_name:["Aaron","Abdul","Abdullah","Adam","Adrian","Adriano","Ahmad","Ahmed","Ahmet","Alan","Albert","Alessandro","Alessio","Alex","Alexander","Alfred","Ali","Amar","Amir","Amon","Andre","Andreas","Andrew","Angelo","Ansgar","Anthony","Anton","Antonio","Arda","Arian","Armin","Arne","Arno","Arthur","Artur","Arved","Arvid","Ayman","Baran","Baris","Bastian","Batuhan","Bela","Ben","Benedikt","Benjamin","Bennet","Bennett","Benno","Bent","Berat","Berkay","Bernd","Bilal","Bjarne","Björn","Bo","Boris","Brandon","Brian","Bruno","Bryan","Burak","Calvin","Can","Carl","Carlo","Carlos","Caspar","Cedric","Cedrik","Cem","Charlie","Chris","Christian","Christiano","Christoph","Christopher","Claas","Clemens","Colin","Collin","Conner","Connor","Constantin","Corvin","Curt","Damian","Damien","Daniel","Danilo","Danny","Darian","Dario","Darius","Darren","David","Davide","Davin","Dean","Deniz","Dennis","Denny","Devin","Diego","Dion","Domenic","Domenik","Dominic","Dominik","Dorian","Dustin","Dylan","Ecrin","Eddi","Eddy","Edgar","Edwin","Efe","Ege","Elia","Eliah","Elias","Elijah","Emanuel","Emil","Emilian","Emilio","Emir","Emirhan","Emre","Enes","Enno","Enrico","Eren","Eric","Erik","Etienne","Fabian","Fabien","Fabio","Fabrice","Falk","Felix","Ferdinand","Fiete","Filip","Finlay","Finley","Finn","Finnley","Florian","Francesco","Franz","Frederic","Frederick","Frederik","Friedrich","Fritz","Furkan","Fynn","Gabriel","Georg","Gerrit","Gian","Gianluca","Gino","Giuliano","Giuseppe","Gregor","Gustav","Hagen","Hamza","Hannes","Hanno","Hans","Hasan","Hassan","Hauke","Hendrik","Hennes","Henning","Henri","Henrick","Henrik","Henry","Hugo","Hussein","Ian","Ibrahim","Ilias","Ilja","Ilyas","Immanuel","Ismael","Ismail","Ivan","Iven","Jack","Jacob","Jaden","Jakob","Jamal","James","Jamie","Jan","Janek","Janis","Janne","Jannek","Jannes","Jannik","Jannis","Jano","Janosch","Jared","Jari","Jarne","Jarno","Jaron","Jason","Jasper","Jay","Jayden","Jayson","Jean","Jens","Jeremias","Jeremie","Jeremy","Jermaine","Jerome","Jesper","Jesse","Jim","Jimmy","Joe","Joel","Joey","Johann","Johannes","John","Johnny","Jon","Jona","Jonah","Jonas","Jonathan","Jonte","Joost","Jordan","Joris","Joscha","Joschua","Josef","Joseph","Josh","Joshua","Josua","Juan","Julian","Julien","Julius","Juri","Justin","Justus","Kaan","Kai","Kalle","Karim","Karl","Karlo","Kay","Keanu","Kenan","Kenny","Keno","Kerem","Kerim","Kevin","Kian","Kilian","Kim","Kimi","Kjell","Klaas","Klemens","Konrad","Konstantin","Koray","Korbinian","Kurt","Lars","Lasse","Laurence","Laurens","Laurenz","Laurin","Lean","Leander","Leandro","Leif","Len","Lenn","Lennard","Lennart","Lennert","Lennie","Lennox","Lenny","Leo","Leon","Leonard","Leonardo","Leonhard","Leonidas","Leopold","Leroy","Levent","Levi","Levin","Lewin","Lewis","Liam","Lian","Lias","Lino","Linus","Lio","Lion","Lionel","Logan","Lorenz","Lorenzo","Loris","Louis","Luan","Luc","Luca","Lucas","Lucian","Lucien","Ludwig","Luis","Luiz","Luk","Luka","Lukas","Luke","Lutz","Maddox","Mads","Magnus","Maik","Maksim","Malik","Malte","Manuel","Marc","Marcel","Marco","Marcus","Marek","Marian","Mario","Marius","Mark","Marko","Markus","Marlo","Marlon","Marten","Martin","Marvin","Marwin","Mateo","Mathis","Matis","Mats","Matteo","Mattes","Matthias","Matthis","Matti","Mattis","Maurice","Max","Maxim","Maximilian","Mehmet","Meik","Melvin","Merlin","Mert","Michael","Michel","Mick","Miguel","Mika","Mikail","Mike","Milan","Milo","Mio","Mirac","Mirco","Mirko","Mohamed","Mohammad","Mohammed","Moritz","Morten","Muhammed","Murat","Mustafa","Nathan","Nathanael","Nelson","Neo","Nevio","Nick","Niclas","Nico","Nicolai","Nicolas","Niels","Nikita","Niklas","Niko","Nikolai","Nikolas","Nils","Nino","Noah","Noel","Norman","Odin","Oke","Ole","Oliver","Omar","Onur","Oscar","Oskar","Pascal","Patrice","Patrick","Paul","Peer","Pepe","Peter","Phil","Philip","Philipp","Pierre","Piet","Pit","Pius","Quentin","Quirin","Rafael","Raik","Ramon","Raphael","Rasmus","Raul","Rayan","René","Ricardo","Riccardo","Richard","Rick","Rico","Robert","Robin","Rocco","Roman","Romeo","Ron","Ruben","Ryan","Said","Salih","Sam","Sami","Sammy","Samuel","Sandro","Santino","Sascha","Sean","Sebastian","Selim","Semih","Shawn","Silas","Simeon","Simon","Sinan","Sky","Stefan","Steffen","Stephan","Steve","Steven","Sven","Sönke","Sören","Taha","Tamino","Tammo","Tarik","Tayler","Taylor","Teo","Theo","Theodor","Thies","Thilo","Thomas","Thorben","Thore","Thorge","Tiago","Til","Till","Tillmann","Tim","Timm","Timo","Timon","Timothy","Tino","Titus","Tizian","Tjark","Tobias","Tom","Tommy","Toni","Tony","Torben","Tore","Tristan","Tyler","Tyron","Umut","Valentin","Valentino","Veit","Victor","Viktor","Vin","Vincent","Vito","Vitus","Wilhelm","Willi","William","Willy","Xaver","Yannic","Yannick","Yannik","Yannis","Yasin","Youssef","Yunus","Yusuf","Yven","Yves","Ömer","Aaliyah","Abby","Abigail","Ada","Adelina","Adriana","Aileen","Aimee","Alana","Alea","Alena","Alessa","Alessia","Alexa","Alexandra","Alexia","Alexis","Aleyna","Alia","Alica","Alice","Alicia","Alina","Alisa","Alisha","Alissa","Aliya","Aliyah","Allegra","Alma","Alyssa","Amalia","Amanda","Amelia","Amelie","Amina","Amira","Amy","Ana","Anabel","Anastasia","Andrea","Angela","Angelina","Angelique","Anja","Ann","Anna","Annabel","Annabell","Annabelle","Annalena","Anne","Anneke","Annelie","Annemarie","Anni","Annie","Annika","Anny","Anouk","Antonia","Arda","Ariana","Ariane","Arwen","Ashley","Asya","Aurelia","Aurora","Ava","Ayleen","Aylin","Ayse","Azra","Betty","Bianca","Bianka","Caitlin","Cara","Carina","Carla","Carlotta","Carmen","Carolin","Carolina","Caroline","Cassandra","Catharina","Catrin","Cecile","Cecilia","Celia","Celina","Celine","Ceyda","Ceylin","Chantal","Charleen","Charlotta","Charlotte","Chayenne","Cheyenne","Chiara","Christin","Christina","Cindy","Claire","Clara","Clarissa","Colleen","Collien","Cora","Corinna","Cosima","Dana","Daniela","Daria","Darleen","Defne","Delia","Denise","Diana","Dilara","Dina","Dorothea","Ecrin","Eda","Eileen","Ela","Elaine","Elanur","Elea","Elena","Eleni","Eleonora","Eliana","Elif","Elina","Elisa","Elisabeth","Ella","Ellen","Elli","Elly","Elsa","Emelie","Emely","Emilia","Emilie","Emily","Emma","Emmely","Emmi","Emmy","Enie","Enna","Enya","Esma","Estelle","Esther","Eva","Evelin","Evelina","Eveline","Evelyn","Fabienne","Fatima","Fatma","Felicia","Felicitas","Felina","Femke","Fenja","Fine","Finia","Finja","Finnja","Fiona","Flora","Florentine","Francesca","Franka","Franziska","Frederike","Freya","Frida","Frieda","Friederike","Giada","Gina","Giulia","Giuliana","Greta","Hailey","Hana","Hanna","Hannah","Heidi","Helen","Helena","Helene","Helin","Henriette","Henrike","Hermine","Ida","Ilayda","Imke","Ina","Ines","Inga","Inka","Irem","Isa","Isabel","Isabell","Isabella","Isabelle","Ivonne","Jacqueline","Jamie","Jamila","Jana","Jane","Janin","Janina","Janine","Janna","Janne","Jara","Jasmin","Jasmina","Jasmine","Jella","Jenna","Jennifer","Jenny","Jessica","Jessy","Jette","Jil","Jill","Joana","Joanna","Joelina","Joeline","Joelle","Johanna","Joleen","Jolie","Jolien","Jolin","Jolina","Joline","Jona","Jonah","Jonna","Josefin","Josefine","Josephin","Josephine","Josie","Josy","Joy","Joyce","Judith","Judy","Jule","Julia","Juliana","Juliane","Julie","Julienne","Julika","Julina","Juna","Justine","Kaja","Karina","Karla","Karlotta","Karolina","Karoline","Kassandra","Katarina","Katharina","Kathrin","Katja","Katrin","Kaya","Kayra","Kiana","Kiara","Kim","Kimberley","Kimberly","Kira","Klara","Korinna","Kristin","Kyra","Laila","Lana","Lara","Larissa","Laura","Laureen","Lavinia","Lea","Leah","Leana","Leandra","Leann","Lee","Leila","Lena","Lene","Leni","Lenia","Lenja","Lenya","Leona","Leoni","Leonie","Leonora","Leticia","Letizia","Levke","Leyla","Lia","Liah","Liana","Lili","Lilia","Lilian","Liliana","Lilith","Lilli","Lillian","Lilly","Lily","Lina","Linda","Lindsay","Line","Linn","Linnea","Lisa","Lisann","Lisanne","Liv","Livia","Liz","Lola","Loreen","Lorena","Lotta","Lotte","Louisa","Louise","Luana","Luca","Lucia","Lucie","Lucienne","Lucy","Luisa","Luise","Luka","Luna","Luzie","Lya","Lydia","Lyn","Lynn","Madeleine","Madita","Madleen","Madlen","Magdalena","Maike","Mailin","Maira","Maja","Malena","Malia","Malin","Malina","Mandy","Mara","Marah","Mareike","Maren","Maria","Mariam","Marie","Marieke","Mariella","Marika","Marina","Marisa","Marissa","Marit","Marla","Marleen","Marlen","Marlena","Marlene","Marta","Martha","Mary","Maryam","Mathilda","Mathilde","Matilda","Maxi","Maxima","Maxine","Maya","Mayra","Medina","Medine","Meike","Melanie","Melek","Melike","Melina","Melinda","Melis","Melisa","Melissa","Merle","Merve","Meryem","Mette","Mia","Michaela","Michelle","Mieke","Mila","Milana","Milena","Milla","Mina","Mira","Miray","Miriam","Mirja","Mona","Monique","Nadine","Nadja","Naemi","Nancy","Naomi","Natalia","Natalie","Nathalie","Neele","Nela","Nele","Nelli","Nelly","Nia","Nicole","Nika","Nike","Nikita","Nila","Nina","Nisa","Noemi","Nora","Olivia","Patricia","Patrizia","Paula","Paulina","Pauline","Penelope","Philine","Phoebe","Pia","Rahel","Rania","Rebecca","Rebekka","Riana","Rieke","Rike","Romina","Romy","Ronja","Rosa","Rosalie","Ruby","Sabrina","Sahra","Sally","Salome","Samantha","Samia","Samira","Sandra","Sandy","Sanja","Saphira","Sara","Sarah","Saskia","Selin","Selina","Selma","Sena","Sidney","Sienna","Silja","Sina","Sinja","Smilla","Sofia","Sofie","Sonja","Sophia","Sophie","Soraya","Stefanie","Stella","Stephanie","Stina","Sude","Summer","Susanne","Svea","Svenja","Sydney","Tabea","Talea","Talia","Tamara","Tamia","Tamina","Tanja","Tara","Tarja","Teresa","Tessa","Thalea","Thalia","Thea","Theresa","Tia","Tina","Tomke","Tuana","Valentina","Valeria","Valerie","Vanessa","Vera","Veronika","Victoria","Viktoria","Viola","Vivian","Vivien","Vivienne","Wibke","Wiebke","Xenia","Yara","Yaren","Yasmin","Ylvi","Ylvie","Yvonne","Zara","Zehra","Zeynep","Zoe","Zoey","Zoé"],last_name:["Abel","Abicht","Abraham","Abramovic","Abt","Achilles","Achkinadze","Ackermann","Adam","Adams","Ade","Agostini","Ahlke","Ahrenberg","Ahrens","Aigner","Albert","Albrecht","Alexa","Alexander","Alizadeh","Allgeyer","Amann","Amberg","Anding","Anggreny","Apitz","Arendt","Arens","Arndt","Aryee","Aschenbroich","Assmus","Astafei","Auer","Axmann","Baarck","Bachmann","Badane","Bader","Baganz","Bahl","Bak","Balcer","Balck","Balkow","Balnuweit","Balzer","Banse","Barr","Bartels","Barth","Barylla","Baseda","Battke","Bauer","Bauermeister","Baumann","Baumeister","Bauschinger","Bauschke","Bayer","Beavogui","Beck","Beckel","Becker","Beckmann","Bedewitz","Beele","Beer","Beggerow","Beh","Behr","Behrenbruch","Belz","Bender","Benecke","Benner","Benninger","Benzing","Berends","Berger","Berner","Berning","Bertenbreiter","Best","Bethke","Betz","Beushausen","Beutelspacher","Beyer","Biba","Bichler","Bickel","Biedermann","Bieler","Bielert","Bienasch","Bienias","Biesenbach","Bigdeli","Birkemeyer","Bittner","Blank","Blaschek","Blassneck","Bloch","Blochwitz","Blockhaus","Blum","Blume","Bock","Bode","Bogdashin","Bogenrieder","Bohge","Bolm","Borgschulze","Bork","Bormann","Bornscheuer","Borrmann","Borsch","Boruschewski","Bos","Bosler","Bourrouag","Bouschen","Boxhammer","Boyde","Bozsik","Brand","Brandenburg","Brandis","Brandt","Brauer","Braun","Brehmer","Breitenstein","Bremer","Bremser","Brenner","Brettschneider","Breu","Breuer","Briesenick","Bringmann","Brinkmann","Brix","Broening","Brosch","Bruckmann","Bruder","Bruhns","Brunner","Bruns","Bräutigam","Brömme","Brüggmann","Buchholz","Buchrucker","Buder","Bultmann","Bunjes","Burger","Burghagen","Burkhard","Burkhardt","Burmeister","Busch","Buschbaum","Busemann","Buss","Busse","Bussmann","Byrd","Bäcker","Böhm","Bönisch","Börgeling","Börner","Böttner","Büchele","Bühler","Büker","Büngener","Bürger","Bürklein","Büscher","Büttner","Camara","Carlowitz","Carlsohn","Caspari","Caspers","Chapron","Christ","Cierpinski","Clarius","Cleem","Cleve","Co","Conrad","Cordes","Cornelsen","Cors","Cotthardt","Crews","Cronjäger","Crosskofp","Da","Dahm","Dahmen","Daimer","Damaske","Danneberg","Danner","Daub","Daubner","Daudrich","Dauer","Daum","Dauth","Dautzenberg","De","Decker","Deckert","Deerberg","Dehmel","Deja","Delonge","Demut","Dengler","Denner","Denzinger","Derr","Dertmann","Dethloff","Deuschle","Dieckmann","Diedrich","Diekmann","Dienel","Dies","Dietrich","Dietz","Dietzsch","Diezel","Dilla","Dingelstedt","Dippl","Dittmann","Dittmar","Dittmer","Dix","Dobbrunz","Dobler","Dohring","Dolch","Dold","Dombrowski","Donie","Doskoczynski","Dragu","Drechsler","Drees","Dreher","Dreier","Dreissigacker","Dressler","Drews","Duma","Dutkiewicz","Dyett","Dylus","Dächert","Döbel","Döring","Dörner","Dörre","Dück","Eberhard","Eberhardt","Ecker","Eckhardt","Edorh","Effler","Eggenmueller","Ehm","Ehmann","Ehrig","Eich","Eichmann","Eifert","Einert","Eisenlauer","Ekpo","Elbe","Eleyth","Elss","Emert","Emmelmann","Ender","Engel","Engelen","Engelmann","Eplinius","Erdmann","Erhardt","Erlei","Erm","Ernst","Ertl","Erwes","Esenwein","Esser","Evers","Everts","Ewald","Fahner","Faller","Falter","Farber","Fassbender","Faulhaber","Fehrig","Feld","Felke","Feller","Fenner","Fenske","Feuerbach","Fietz","Figl","Figura","Filipowski","Filsinger","Fincke","Fink","Finke","Fischer","Fitschen","Fleischer","Fleischmann","Floder","Florczak","Flore","Flottmann","Forkel","Forst","Frahmeke","Frank","Franke","Franta","Frantz","Franz","Franzis","Franzmann","Frauen","Frauendorf","Freigang","Freimann","Freimuth","Freisen","Frenzel","Frey","Fricke","Fried","Friedek","Friedenberg","Friedmann","Friedrich","Friess","Frisch","Frohn","Frosch","Fuchs","Fuhlbrügge","Fusenig","Fust","Förster","Gaba","Gabius","Gabler","Gadschiew","Gakstädter","Galander","Gamlin","Gamper","Gangnus","Ganzmann","Garatva","Gast","Gastel","Gatzka","Gauder","Gebhardt","Geese","Gehre","Gehrig","Gehring","Gehrke","Geiger","Geisler","Geissler","Gelling","Gens","Gerbennow","Gerdel","Gerhardt","Gerschler","Gerson","Gesell","Geyer","Ghirmai","Ghosh","Giehl","Gierisch","Giesa","Giesche","Gilde","Glatting","Goebel","Goedicke","Goldbeck","Goldfuss","Goldkamp","Goldkühle","Goller","Golling","Gollnow","Golomski","Gombert","Gotthardt","Gottschalk","Gotz","Goy","Gradzki","Graf","Grams","Grasse","Gratzky","Grau","Greb","Green","Greger","Greithanner","Greschner","Griem","Griese","Grimm","Gromisch","Gross","Grosser","Grossheim","Grosskopf","Grothaus","Grothkopp","Grotke","Grube","Gruber","Grundmann","Gruning","Gruszecki","Gröss","Grötzinger","Grün","Grüner","Gummelt","Gunkel","Gunther","Gutjahr","Gutowicz","Gutschank","Göbel","Göckeritz","Göhler","Görlich","Görmer","Götz","Götzelmann","Güldemeister","Günther","Günz","Gürbig","Haack","Haaf","Habel","Hache","Hackbusch","Hackelbusch","Hadfield","Hadwich","Haferkamp","Hahn","Hajek","Hallmann","Hamann","Hanenberger","Hannecker","Hanniske","Hansen","Hardy","Hargasser","Harms","Harnapp","Harter","Harting","Hartlieb","Hartmann","Hartwig","Hartz","Haschke","Hasler","Hasse","Hassfeld","Haug","Hauke","Haupt","Haverney","Heberstreit","Hechler","Hecht","Heck","Hedermann","Hehl","Heidelmann","Heidler","Heinemann","Heinig","Heinke","Heinrich","Heinze","Heiser","Heist","Hellmann","Helm","Helmke","Helpling","Hengmith","Henkel","Hennes","Henry","Hense","Hensel","Hentel","Hentschel","Hentschke","Hepperle","Herberger","Herbrand","Hering","Hermann","Hermecke","Herms","Herold","Herrmann","Herschmann","Hertel","Herweg","Herwig","Herzenberg","Hess","Hesse","Hessek","Hessler","Hetzler","Heuck","Heydemüller","Hiebl","Hildebrand","Hildenbrand","Hilgendorf","Hillard","Hiller","Hingsen","Hingst","Hinrichs","Hirsch","Hirschberg","Hirt","Hodea","Hoffman","Hoffmann","Hofmann","Hohenberger","Hohl","Hohn","Hohnheiser","Hold","Holdt","Holinski","Holl","Holtfreter","Holz","Holzdeppe","Holzner","Hommel","Honz","Hooss","Hoppe","Horak","Horn","Horna","Hornung","Hort","Howard","Huber","Huckestein","Hudak","Huebel","Hugo","Huhn","Hujo","Huke","Huls","Humbert","Huneke","Huth","Häber","Häfner","Höcke","Höft","Höhne","Hönig","Hördt","Hübenbecker","Hübl","Hübner","Hügel","Hüttcher","Hütter","Ibe","Ihly","Illing","Isak","Isekenmeier","Itt","Jacob","Jacobs","Jagusch","Jahn","Jahnke","Jakobs","Jakubczyk","Jambor","Jamrozy","Jander","Janich","Janke","Jansen","Jarets","Jaros","Jasinski","Jasper","Jegorov","Jellinghaus","Jeorga","Jerschabek","Jess","John","Jonas","Jossa","Jucken","Jung","Jungbluth","Jungton","Just","Jürgens","Kaczmarek","Kaesmacher","Kahl","Kahlert","Kahles","Kahlmeyer","Kaiser","Kalinowski","Kallabis","Kallensee","Kampf","Kampschulte","Kappe","Kappler","Karhoff","Karrass","Karst","Karsten","Karus","Kass","Kasten","Kastner","Katzinski","Kaufmann","Kaul","Kausemann","Kawohl","Kazmarek","Kedzierski","Keil","Keiner","Keller","Kelm","Kempe","Kemper","Kempter","Kerl","Kern","Kesselring","Kesselschläger","Kette","Kettenis","Keutel","Kick","Kiessling","Kinadeter","Kinzel","Kinzy","Kirch","Kirst","Kisabaka","Klaas","Klabuhn","Klapper","Klauder","Klaus","Kleeberg","Kleiber","Klein","Kleinert","Kleininger","Kleinmann","Kleinsteuber","Kleiss","Klemme","Klimczak","Klinger","Klink","Klopsch","Klose","Kloss","Kluge","Kluwe","Knabe","Kneifel","Knetsch","Knies","Knippel","Knobel","Knoblich","Knoll","Knorr","Knorscheidt","Knut","Kobs","Koch","Kochan","Kock","Koczulla","Koderisch","Koehl","Koehler","Koenig","Koester","Kofferschlager","Koha","Kohle","Kohlmann","Kohnle","Kohrt","Koj","Kolb","Koleiski","Kolokas","Komoll","Konieczny","Konig","Konow","Konya","Koob","Kopf","Kosenkow","Koster","Koszewski","Koubaa","Kovacs","Kowalick","Kowalinski","Kozakiewicz","Krabbe","Kraft","Kral","Kramer","Krauel","Kraus","Krause","Krauspe","Kreb","Krebs","Kreissig","Kresse","Kreutz","Krieger","Krippner","Krodinger","Krohn","Krol","Kron","Krueger","Krug","Kruger","Krull","Kruschinski","Krämer","Kröckert","Kröger","Krüger","Kubera","Kufahl","Kuhlee","Kuhnen","Kulimann","Kulma","Kumbernuss","Kummle","Kunz","Kupfer","Kupprion","Kuprion","Kurnicki","Kurrat","Kurschilgen","Kuschewitz","Kuschmann","Kuske","Kustermann","Kutscherauer","Kutzner","Kwadwo","Kähler","Käther","Köhler","Köhrbrück","Köhre","Kölotzei","König","Köpernick","Köseoglu","Kúhn","Kúhnert","Kühn","Kühnel","Kühnemund","Kühnert","Kühnke","Küsters","Küter","Laack","Lack","Ladewig","Lakomy","Lammert","Lamos","Landmann","Lang","Lange","Langfeld","Langhirt","Lanig","Lauckner","Lauinger","Laurén","Lausecker","Laux","Laws","Lax","Leberer","Lehmann","Lehner","Leibold","Leide","Leimbach","Leipold","Leist","Leiter","Leiteritz","Leitheim","Leiwesmeier","Lenfers","Lenk","Lenz","Lenzen","Leo","Lepthin","Lesch","Leschnik","Letzelter","Lewin","Lewke","Leyckes","Lg","Lichtenfeld","Lichtenhagen","Lichtl","Liebach","Liebe","Liebich","Liebold","Lieder","Lienshöft","Linden","Lindenberg","Lindenmayer","Lindner","Linke","Linnenbaum","Lippe","Lipske","Lipus","Lischka","Lobinger","Logsch","Lohmann","Lohre","Lohse","Lokar","Loogen","Lorenz","Losch","Loska","Lott","Loy","Lubina","Ludolf","Lufft","Lukoschek","Lutje","Lutz","Löser","Löwa","Lübke","Maak","Maczey","Madetzky","Madubuko","Mai","Maier","Maisch","Malek","Malkus","Mallmann","Malucha","Manns","Manz","Marahrens","Marchewski","Margis","Markowski","Marl","Marner","Marquart","Marschek","Martel","Marten","Martin","Marx","Marxen","Mathes","Mathies","Mathiszik","Matschke","Mattern","Matthes","Matula","Mau","Maurer","Mauroff","May","Maybach","Mayer","Mebold","Mehl","Mehlhorn","Mehlorn","Meier","Meisch","Meissner","Meloni","Melzer","Menga","Menne","Mensah","Mensing","Merkel","Merseburg","Mertens","Mesloh","Metzger","Metzner","Mewes","Meyer","Michallek","Michel","Mielke","Mikitenko","Milde","Minah","Mintzlaff","Mockenhaupt","Moede","Moedl","Moeller","Moguenara","Mohr","Mohrhard","Molitor","Moll","Moller","Molzan","Montag","Moormann","Mordhorst","Morgenstern","Morhelfer","Moritz","Moser","Motchebon","Motzenbbäcker","Mrugalla","Muckenthaler","Mues","Muller","Mulrain","Mächtig","Mäder","Möcks","Mögenburg","Möhsner","Möldner","Möllenbeck","Möller","Möllinger","Mörsch","Mühleis","Müller","Münch","Nabein","Nabow","Nagel","Nannen","Nastvogel","Nau","Naubert","Naumann","Ne","Neimke","Nerius","Neubauer","Neubert","Neuendorf","Neumair","Neumann","Neupert","Neurohr","Neuschwander","Newton","Ney","Nicolay","Niedermeier","Nieklauson","Niklaus","Nitzsche","Noack","Nodler","Nolte","Normann","Norris","Northoff","Nowak","Nussbeck","Nwachukwu","Nytra","Nöh","Oberem","Obergföll","Obermaier","Ochs","Oeser","Olbrich","Onnen","Ophey","Oppong","Orth","Orthmann","Oschkenat","Osei","Osenberg","Ostendarp","Ostwald","Otte","Otto","Paesler","Pajonk","Pallentin","Panzig","Paschke","Patzwahl","Paukner","Peselman","Peter","Peters","Petzold","Pfeiffer","Pfennig","Pfersich","Pfingsten","Pflieger","Pflügner","Philipp","Pichlmaier","Piesker","Pietsch","Pingpank","Pinnock","Pippig","Pitschugin","Plank","Plass","Platzer","Plauk","Plautz","Pletsch","Plotzitzka","Poehn","Poeschl","Pogorzelski","Pohl","Pohland","Pohle","Polifka","Polizzi","Pollmächer","Pomp","Ponitzsch","Porsche","Porth","Poschmann","Poser","Pottel","Prah","Prange","Prediger","Pressler","Preuk","Preuss","Prey","Priemer","Proske","Pusch","Pöche","Pöge","Raabe","Rabenstein","Rach","Radtke","Rahn","Ranftl","Rangen","Ranz","Rapp","Rath","Rau","Raubuch","Raukuc","Rautenkranz","Rehwagen","Reiber","Reichardt","Reichel","Reichling","Reif","Reifenrath","Reimann","Reinberg","Reinelt","Reinhardt","Reinke","Reitze","Renk","Rentz","Renz","Reppin","Restle","Restorff","Retzke","Reuber","Reumann","Reus","Reuss","Reusse","Rheder","Rhoden","Richards","Richter","Riedel","Riediger","Rieger","Riekmann","Riepl","Riermeier","Riester","Riethmüller","Rietmüller","Rietscher","Ringel","Ringer","Rink","Ripken","Ritosek","Ritschel","Ritter","Rittweg","Ritz","Roba","Rockmeier","Rodehau","Rodowski","Roecker","Roggatz","Rohländer","Rohrer","Rokossa","Roleder","Roloff","Roos","Rosbach","Roschinsky","Rose","Rosenauer","Rosenbauer","Rosenthal","Rosksch","Rossberg","Rossler","Roth","Rother","Ruch","Ruckdeschel","Rumpf","Rupprecht","Ruth","Ryjikh","Ryzih","Rädler","Räntsch","Rödiger","Röse","Röttger","Rücker","Rüdiger","Rüter","Sachse","Sack","Saflanis","Sagafe","Sagonas","Sahner","Saile","Sailer","Salow","Salzer","Salzmann","Sammert","Sander","Sarvari","Sattelmaier","Sauer","Sauerland","Saumweber","Savoia","Scc","Schacht","Schaefer","Schaffarzik","Schahbasian","Scharf","Schedler","Scheer","Schelk","Schellenbeck","Schembera","Schenk","Scherbarth","Scherer","Schersing","Scherz","Scheurer","Scheuring","Scheytt","Schielke","Schieskow","Schildhauer","Schilling","Schima","Schimmer","Schindzielorz","Schirmer","Schirrmeister","Schlachter","Schlangen","Schlawitz","Schlechtweg","Schley","Schlicht","Schlitzer","Schmalzle","Schmid","Schmidt","Schmidtchen","Schmitt","Schmitz","Schmuhl","Schneider","Schnelting","Schnieder","Schniedermeier","Schnürer","Schoberg","Scholz","Schonberg","Schondelmaier","Schorr","Schott","Schottmann","Schouren","Schrader","Schramm","Schreck","Schreiber","Schreiner","Schreiter","Schroder","Schröder","Schuermann","Schuff","Schuhaj","Schuldt","Schult","Schulte","Schultz","Schultze","Schulz","Schulze","Schumacher","Schumann","Schupp","Schuri","Schuster","Schwab","Schwalm","Schwanbeck","Schwandke","Schwanitz","Schwarthoff","Schwartz","Schwarz","Schwarzer","Schwarzkopf","Schwarzmeier","Schwatlo","Schweisfurth","Schwennen","Schwerdtner","Schwidde","Schwirkschlies","Schwuchow","Schäfer","Schäffel","Schäffer","Schäning","Schöckel","Schönball","Schönbeck","Schönberg","Schönebeck","Schönenberger","Schönfeld","Schönherr","Schönlebe","Schötz","Schüler","Schüppel","Schütz","Schütze","Seeger","Seelig","Sehls","Seibold","Seidel","Seiders","Seigel","Seiler","Seitz","Semisch","Senkel","Sewald","Siebel","Siebert","Siegling","Sielemann","Siemon","Siener","Sievers","Siewert","Sihler","Sillah","Simon","Sinnhuber","Sischka","Skibicki","Sladek","Slotta","Smieja","Soboll","Sokolowski","Soller","Sollner","Sommer","Somssich","Sonn","Sonnabend","Spahn","Spank","Spelmeyer","Spiegelburg","Spielvogel","Spinner","Spitzmüller","Splinter","Sporrer","Sprenger","Spöttel","Stahl","Stang","Stanger","Stauss","Steding","Steffen","Steffny","Steidl","Steigauf","Stein","Steinecke","Steinert","Steinkamp","Steinmetz","Stelkens","Stengel","Stengl","Stenzel","Stepanov","Stephan","Stern","Steuk","Stief","Stifel","Stoll","Stolle","Stolz","Storl","Storp","Stoutjesdijk","Stratmann","Straub","Strausa","Streck","Streese","Strege","Streit","Streller","Strieder","Striezel","Strogies","Strohschank","Strunz","Strutz","Stube","Stöckert","Stöppler","Stöwer","Stürmer","Suffa","Sujew","Sussmann","Suthe","Sutschet","Swillims","Szendrei","Sören","Sürth","Tafelmeier","Tang","Tasche","Taufratshofer","Tegethof","Teichmann","Tepper","Terheiden","Terlecki","Teufel","Theele","Thieke","Thimm","Thiomas","Thomas","Thriene","Thränhardt","Thust","Thyssen","Thöne","Tidow","Tiedtke","Tietze","Tilgner","Tillack","Timmermann","Tischler","Tischmann","Tittman","Tivontschik","Tonat","Tonn","Trampeli","Trauth","Trautmann","Travan","Treff","Tremmel","Tress","Tsamonikian","Tschiers","Tschirch","Tuch","Tucholke","Tudow","Tuschmo","Tächl","Többen","Töpfer","Uhlemann","Uhlig","Uhrig","Uibel","Uliczka","Ullmann","Ullrich","Umbach","Umlauft","Umminger","Unger","Unterpaintner","Urban","Urbaniak","Urbansky","Urhig","Vahlensieck","Van","Vangermain","Vater","Venghaus","Verniest","Verzi","Vey","Viellehner","Vieweg","Voelkel","Vogel","Vogelgsang","Vogt","Voigt","Vokuhl","Volk","Volker","Volkmann","Von","Vona","Vontein","Wachenbrunner","Wachtel","Wagner","Waibel","Wakan","Waldmann","Wallner","Wallstab","Walter","Walther","Walton","Walz","Wanner","Wartenberg","Waschbüsch","Wassilew","Wassiluk","Weber","Wehrsen","Weidlich","Weidner","Weigel","Weight","Weiler","Weimer","Weis","Weiss","Weller","Welsch","Welz","Welzel","Weniger","Wenk","Werle","Werner","Werrmann","Wessel","Wessinghage","Weyel","Wezel","Wichmann","Wickert","Wiebe","Wiechmann","Wiegelmann","Wierig","Wiese","Wieser","Wilhelm","Wilky","Will","Willwacher","Wilts","Wimmer","Winkelmann","Winkler","Winter","Wischek","Wischer","Wissing","Wittich","Wittl","Wolf","Wolfarth","Wolff","Wollenberg","Wollmann","Woytkowska","Wujak","Wurm","Wyludda","Wölpert","Wöschler","Wühn","Wünsche","Zach","Zaczkiewicz","Zahn","Zaituc","Zandt","Zanner","Zapletal","Zauber","Zeidler","Zekl","Zender","Zeuch","Zeyen","Zeyhle","Ziegler","Zimanyi","Zimmer","Zimmermann","Zinser","Zintl","Zipp","Zipse","Zschunke","Zuber","Zwiener","Zümsande","Östringer","Überacker"],
prefix:["Dr.","Prof. Dr."],nobility_title_prefix:["zu","von","vom","von der"],name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{nobility_title_prefix} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]},de_AT.phone_number={formats:["01 #######","01#######","+43-1-#######","+431#######","0#### ####","0#########","+43-####-####","+43 ########"]},de_AT.cell_phone={formats:["+43-6##-#######","06##-########","+436#########","06##########"]};

},{}],94:[function(require,module,exports){
var de_CH={};module.exports=de_CH,de_CH.title="German (Switzerland)",de_CH.address={country_code:["CH","CH","CH","DE","AT","US","LI","US","HK","VN"],postcode:["1###","2###","3###","4###","5###","6###","7###","8###","9###"],default_country:["Schweiz"]},de_CH.company={suffix:["AG","GmbH","und Söhne","und Partner","& Co.","Gruppe","LLC","Inc."],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} und #{Name.last_name}"]},de_CH.internet={domain_suffix:["com","net","biz","ch","de","li","at","ch","ch"]},de_CH.phone_number={formats:["0800 ### ###","0800 ## ## ##","0## ### ## ##","0## ### ## ##","+41 ## ### ## ##","0900 ### ###","076 ### ## ##","+4178 ### ## ##","0041 79 ### ## ##"]};

},{}],95:[function(require,module,exports){
var en={};module.exports=en,en.title="English",en.separator=" & ",en.address={city_prefix:["North","East","West","South","New","Lake","Port"],city_suffix:["town","ton","land","ville","berg","burgh","borough","bury","view","port","mouth","stad","furt","chester","mouth","fort","haven","side","shire"],county:["Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire"],country:["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica (the territory South of 60 deg S)","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island (Bouvetoya)","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands Antilles","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestinian Territory","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia (Slovak Republic)","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"],country_code:["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW"],building_number:["#####","####","###"],street_suffix:["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Inlet","Island","Island","Islands","Islands","Isle","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Locks","Lodge","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Mission","Motorway","Mount","Mountain","Mountain","Mountains","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plains","Plaza","Plaza","Point","Points","Port","Port","Ports","Ports","Prairie","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Road","Roads","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Springs","Spur","Spurs","Square","Square","Squares","Squares","Station","Station","Stravenue","Stravenue","Stream","Stream","Street","Street","Streets","Summit","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Trail","Tunnel","Tunnel","Turnpike","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Village","Villages","Ville","Vista","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"],secondary_address:["Apt. ###","Suite ###"],postcode:["#####","#####-####"],postcode_by_state:["#####","#####-####"],state:["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],state_abbr:["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],time_zone:["Pacific/Midway","Pacific/Pago_Pago","Pacific/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europe/Dublin","Europe/London","Europe/Lisbon","Europe/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Prague","Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris","Europe/Amsterdam","Europe/Berlin","Europe/Berlin","Europe/Rome","Europe/Stockholm","Europe/Vienna","Africa/Algiers","Europe/Bucharest","Africa/Cairo","Europe/Helsinki","Europe/Kiev","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Vilnius","Europe/Athens","Europe/Istanbul","Europe/Minsk","Asia/Jerusalem","Africa/Harare","Africa/Johannesburg","Europe/Moscow","Europe/Moscow","Europe/Moscow","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacific/Guam","Pacific/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacific/Noumea","Pacific/Fiji","Asia/Kamchatka","Pacific/Majuro","Pacific/Auckland","Pacific/Auckland","Pacific/Tongatapu","Pacific/Fakaofo","Pacific/Apia"],city:["#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"],street_name:["#{Name.first_name} #{street_suffix}","#{Name.last_name} #{street_suffix}"],street_address:["#{building_number} #{street_name}"],default_country:["United States of America"]},en.credit_card={visa:["/4###########L/","/4###-####-####-###L/"],mastercard:["/5[1-5]##-####-####-###L/","/6771-89##-####-###L/"],discover:["/6011-####-####-###L/","/65##-####-####-###L/","/64[4-9]#-####-####-###L/","/6011-62##-####-####-###L/","/65##-62##-####-####-###L/","/64[4-9]#-62##-####-####-###L/"],american_express:["/34##-######-####L/","/37##-######-####L/"],diners_club:["/30[0-5]#-######-###L/","/368#-######-###L/"],jcb:["/3528-####-####-###L/","/3529-####-####-###L/","/35[3-8]#-####-####-###L/"],"switch":["/6759-####-####-###L/","/6759-####-####-####-#L/","/6759-####-####-####-##L/"],solo:["/6767-####-####-###L/","/6767-####-####-####-#L/","/6767-####-####-####-##L/"],dankort:"/5019-####-####-###L/",maestro:["/50#{9,16}L/","/5[6-8]#{9,16}L/","/56##{9,16}L/"],forbrugsforeningen:"/6007-22##-####-###L/",laser:["/6304###########L/","/6706###########L/","/6771###########L/","/6709###########L/","/6304#########{5,6}L/","/6706#########{5,6}L/","/6771#########{5,6}L/","/6709#########{5,6}L/"]},en.company={suffix:["Inc","and Sons","LLC","Group"],adjective:["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],descriptor:["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],noun:["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],bs_verb:["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],bs_adjective:["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"],bs_noun:["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"]},en.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","biz","info","name","net","org"]};var avatarUri=["jarjan/128.jpg","mahdif/128.jpg","sprayaga/128.jpg","ruzinav/128.jpg","Skyhartman/128.jpg","moscoz/128.jpg","kurafire/128.jpg","91bilal/128.jpg","igorgarybaldi/128.jpg","calebogden/128.jpg","malykhinv/128.jpg","joelhelin/128.jpg","kushsolitary/128.jpg","coreyweb/128.jpg","snowshade/128.jpg","areus/128.jpg","holdenweb/128.jpg","heyimjuani/128.jpg","envex/128.jpg","unterdreht/128.jpg","collegeman/128.jpg","peejfancher/128.jpg","andyisonline/128.jpg","ultragex/128.jpg","fuck_you_two/128.jpg","adellecharles/128.jpg","ateneupopular/128.jpg","ahmetalpbalkan/128.jpg","Stievius/128.jpg","kerem/128.jpg","osvaldas/128.jpg","angelceballos/128.jpg","thierrykoblentz/128.jpg","peterlandt/128.jpg","catarino/128.jpg","wr/128.jpg","weglov/128.jpg","brandclay/128.jpg","flame_kaizar/128.jpg","ahmetsulek/128.jpg","nicolasfolliot/128.jpg","jayrobinson/128.jpg","victorerixon/128.jpg","kolage/128.jpg","michzen/128.jpg","markjenkins/128.jpg","nicolai_larsen/128.jpg","gt/128.jpg","noxdzine/128.jpg","alagoon/128.jpg","idiot/128.jpg","mizko/128.jpg","chadengle/128.jpg","mutlu82/128.jpg","simobenso/128.jpg","vocino/128.jpg","guiiipontes/128.jpg","soyjavi/128.jpg","joshaustin/128.jpg","tomaslau/128.jpg","VinThomas/128.jpg","ManikRathee/128.jpg","langate/128.jpg","cemshid/128.jpg","leemunroe/128.jpg","_shahedk/128.jpg","enda/128.jpg","BillSKenney/128.jpg","divya/128.jpg","joshhemsley/128.jpg","sindresorhus/128.jpg","soffes/128.jpg","9lessons/128.jpg","linux29/128.jpg","Chakintosh/128.jpg","anaami/128.jpg","joreira/128.jpg","shadeed9/128.jpg","scottkclark/128.jpg","jedbridges/128.jpg","salleedesign/128.jpg","marakasina/128.jpg","ariil/128.jpg","BrianPurkiss/128.jpg","michaelmartinho/128.jpg","bublienko/128.jpg","devankoshal/128.jpg","ZacharyZorbas/128.jpg","timmillwood/128.jpg","joshuasortino/128.jpg","damenleeturks/128.jpg","tomas_janousek/128.jpg","herrhaase/128.jpg","RussellBishop/128.jpg","brajeshwar/128.jpg","nachtmeister/128.jpg","cbracco/128.jpg","bermonpainter/128.jpg","abdullindenis/128.jpg","isacosta/128.jpg","suprb/128.jpg","yalozhkin/128.jpg","chandlervdw/128.jpg","iamgarth/128.jpg","_victa/128.jpg","commadelimited/128.jpg","roybarberuk/128.jpg","axel/128.jpg","vladarbatov/128.jpg","ffbel/128.jpg","syropian/128.jpg","ankitind/128.jpg","traneblow/128.jpg","flashmurphy/128.jpg","ChrisFarina78/128.jpg","baliomega/128.jpg","saschamt/128.jpg","jm_denis/128.jpg","anoff/128.jpg","kennyadr/128.jpg","chatyrko/128.jpg","dingyi/128.jpg","mds/128.jpg","terryxlife/128.jpg","aaroni/128.jpg","kinday/128.jpg","prrstn/128.jpg","eduardostuart/128.jpg","dhilipsiva/128.jpg","GavicoInd/128.jpg","baires/128.jpg","rohixx/128.jpg","bigmancho/128.jpg","blakesimkins/128.jpg","leeiio/128.jpg","tjrus/128.jpg","uberschizo/128.jpg","kylefoundry/128.jpg","claudioguglieri/128.jpg","ripplemdk/128.jpg","exentrich/128.jpg","jakemoore/128.jpg","joaoedumedeiros/128.jpg","poormini/128.jpg","tereshenkov/128.jpg","keryilmaz/128.jpg","haydn_woods/128.jpg","rude/128.jpg","llun/128.jpg","sgaurav_baghel/128.jpg","jamiebrittain/128.jpg","badlittleduck/128.jpg","pifagor/128.jpg","agromov/128.jpg","benefritz/128.jpg","erwanhesry/128.jpg","diesellaws/128.jpg","jeremiaha/128.jpg","koridhandy/128.jpg","chaensel/128.jpg","andrewcohen/128.jpg","smaczny/128.jpg","gonzalorobaina/128.jpg","nandini_m/128.jpg","sydlawrence/128.jpg","cdharrison/128.jpg","tgerken/128.jpg","lewisainslie/128.jpg","charliecwaite/128.jpg","robbschiller/128.jpg","flexrs/128.jpg","mattdetails/128.jpg","raquelwilson/128.jpg","karsh/128.jpg","mrmartineau/128.jpg","opnsrce/128.jpg","hgharrygo/128.jpg","maximseshuk/128.jpg","uxalex/128.jpg","samihah/128.jpg","chanpory/128.jpg","sharvin/128.jpg","josemarques/128.jpg","jefffis/128.jpg","krystalfister/128.jpg","lokesh_coder/128.jpg","thedamianhdez/128.jpg","dpmachado/128.jpg","funwatercat/128.jpg","timothycd/128.jpg","ivanfilipovbg/128.jpg","picard102/128.jpg","marcobarbosa/128.jpg","krasnoukhov/128.jpg","g3d/128.jpg","ademilter/128.jpg","rickdt/128.jpg","operatino/128.jpg","bungiwan/128.jpg","hugomano/128.jpg","logorado/128.jpg","dc_user/128.jpg","horaciobella/128.jpg","SlaapMe/128.jpg","teeragit/128.jpg","iqonicd/128.jpg","ilya_pestov/128.jpg","andrewarrow/128.jpg","ssiskind/128.jpg","stan/128.jpg","HenryHoffman/128.jpg","rdsaunders/128.jpg","adamsxu/128.jpg","curiousoffice/128.jpg","themadray/128.jpg","michigangraham/128.jpg","kohette/128.jpg","nickfratter/128.jpg","runningskull/128.jpg","madysondesigns/128.jpg","brenton_clarke/128.jpg","jennyshen/128.jpg","bradenhamm/128.jpg","kurtinc/128.jpg","amanruzaini/128.jpg","coreyhaggard/128.jpg","Karimmove/128.jpg","aaronalfred/128.jpg","wtrsld/128.jpg","jitachi/128.jpg","therealmarvin/128.jpg","pmeissner/128.jpg","ooomz/128.jpg","chacky14/128.jpg","jesseddy/128.jpg","thinmatt/128.jpg","shanehudson/128.jpg","akmur/128.jpg","IsaryAmairani/128.jpg","arthurholcombe1/128.jpg","andychipster/128.jpg","boxmodel/128.jpg","ehsandiary/128.jpg","LucasPerdidao/128.jpg","shalt0ni/128.jpg","swaplord/128.jpg","kaelifa/128.jpg","plbabin/128.jpg","guillemboti/128.jpg","arindam_/128.jpg","renbyrd/128.jpg","thiagovernetti/128.jpg","jmillspaysbills/128.jpg","mikemai2awesome/128.jpg","jervo/128.jpg","mekal/128.jpg","sta1ex/128.jpg","robergd/128.jpg","felipecsl/128.jpg","andrea211087/128.jpg","garand/128.jpg","dhooyenga/128.jpg","abovefunction/128.jpg","pcridesagain/128.jpg","randomlies/128.jpg","BryanHorsey/128.jpg","heykenneth/128.jpg","dahparra/128.jpg","allthingssmitty/128.jpg","danvernon/128.jpg","beweinreich/128.jpg","increase/128.jpg","falvarad/128.jpg","alxndrustinov/128.jpg","souuf/128.jpg","orkuncaylar/128.jpg","AM_Kn2/128.jpg","gearpixels/128.jpg","bassamology/128.jpg","vimarethomas/128.jpg","kosmar/128.jpg","SULiik/128.jpg","mrjamesnoble/128.jpg","silvanmuhlemann/128.jpg","shaneIxD/128.jpg","nacho/128.jpg","yigitpinarbasi/128.jpg","buzzusborne/128.jpg","aaronkwhite/128.jpg","rmlewisuk/128.jpg","giancarlon/128.jpg","nbirckel/128.jpg","d_nny_m_cher/128.jpg","sdidonato/128.jpg","atariboy/128.jpg","abotap/128.jpg","karalek/128.jpg","psdesignuk/128.jpg","ludwiczakpawel/128.jpg","nemanjaivanovic/128.jpg","baluli/128.jpg","ahmadajmi/128.jpg","vovkasolovev/128.jpg","samgrover/128.jpg","derienzo777/128.jpg","jonathansimmons/128.jpg","nelsonjoyce/128.jpg","S0ufi4n3/128.jpg","xtopherpaul/128.jpg","oaktreemedia/128.jpg","nateschulte/128.jpg","findingjenny/128.jpg","namankreative/128.jpg","antonyzotov/128.jpg","we_social/128.jpg","leehambley/128.jpg","solid_color/128.jpg","abelcabans/128.jpg","mbilderbach/128.jpg","kkusaa/128.jpg","jordyvdboom/128.jpg","carlosgavina/128.jpg","pechkinator/128.jpg","vc27/128.jpg","rdbannon/128.jpg","croakx/128.jpg","suribbles/128.jpg","kerihenare/128.jpg","catadeleon/128.jpg","gcmorley/128.jpg","duivvv/128.jpg","saschadroste/128.jpg","victorDubugras/128.jpg","wintopia/128.jpg","mattbilotti/128.jpg","taylorling/128.jpg","megdraws/128.jpg","meln1ks/128.jpg","mahmoudmetwally/128.jpg","Silveredge9/128.jpg","derekebradley/128.jpg","happypeter1983/128.jpg","travis_arnold/128.jpg","artem_kostenko/128.jpg","adobi/128.jpg","daykiine/128.jpg","alek_djuric/128.jpg","scips/128.jpg","miguelmendes/128.jpg","justinrhee/128.jpg","alsobrooks/128.jpg","fronx/128.jpg","mcflydesign/128.jpg","santi_urso/128.jpg","allfordesign/128.jpg","stayuber/128.jpg","bertboerland/128.jpg","marosholly/128.jpg","adamnac/128.jpg","cynthiasavard/128.jpg","muringa/128.jpg","danro/128.jpg","hiemil/128.jpg","jackiesaik/128.jpg","zacsnider/128.jpg","iduuck/128.jpg","antjanus/128.jpg","aroon_sharma/128.jpg","dshster/128.jpg","thehacker/128.jpg","michaelbrooksjr/128.jpg","ryanmclaughlin/128.jpg","clubb3rry/128.jpg","taybenlor/128.jpg","xripunov/128.jpg","myastro/128.jpg","adityasutomo/128.jpg","digitalmaverick/128.jpg","hjartstrorn/128.jpg","itolmach/128.jpg","vaughanmoffitt/128.jpg","abdots/128.jpg","isnifer/128.jpg","sergeysafonov/128.jpg","maz/128.jpg","scrapdnb/128.jpg","chrismj83/128.jpg","vitorleal/128.jpg","sokaniwaal/128.jpg","zaki3d/128.jpg","illyzoren/128.jpg","mocabyte/128.jpg","osmanince/128.jpg","djsherman/128.jpg","davidhemphill/128.jpg","waghner/128.jpg","necodymiconer/128.jpg","praveen_vijaya/128.jpg","fabbrucci/128.jpg","cliffseal/128.jpg","travishines/128.jpg","kuldarkalvik/128.jpg","Elt_n/128.jpg","phillapier/128.jpg","okseanjay/128.jpg","id835559/128.jpg","kudretkeskin/128.jpg","anjhero/128.jpg","duck4fuck/128.jpg","scott_riley/128.jpg","noufalibrahim/128.jpg","h1brd/128.jpg","borges_marcos/128.jpg","devinhalladay/128.jpg","ciaranr/128.jpg","stefooo/128.jpg","mikebeecham/128.jpg","tonymillion/128.jpg","joshuaraichur/128.jpg","irae/128.jpg","petrangr/128.jpg","dmitriychuta/128.jpg","charliegann/128.jpg","arashmanteghi/128.jpg","adhamdannaway/128.jpg","ainsleywagon/128.jpg","svenlen/128.jpg","faisalabid/128.jpg","beshur/128.jpg","carlyson/128.jpg","dutchnadia/128.jpg","teddyzetterlund/128.jpg","samuelkraft/128.jpg","aoimedia/128.jpg","toddrew/128.jpg","codepoet_ru/128.jpg","artvavs/128.jpg","benoitboucart/128.jpg","jomarmen/128.jpg","kolmarlopez/128.jpg","creartinc/128.jpg","homka/128.jpg","gaborenton/128.jpg","robinclediere/128.jpg","maximsorokin/128.jpg","plasticine/128.jpg","j2deme/128.jpg","peachananr/128.jpg","kapaluccio/128.jpg","de_ascanio/128.jpg","rikas/128.jpg","dawidwu/128.jpg","marcoramires/128.jpg","angelcreative/128.jpg","rpatey/128.jpg","popey/128.jpg","rehatkathuria/128.jpg","the_purplebunny/128.jpg","1markiz/128.jpg","ajaxy_ru/128.jpg","brenmurrell/128.jpg","dudestein/128.jpg","oskarlevinson/128.jpg","victorstuber/128.jpg","nehfy/128.jpg","vicivadeline/128.jpg","leandrovaranda/128.jpg","scottgallant/128.jpg","victor_haydin/128.jpg","sawrb/128.jpg","ryhanhassan/128.jpg","amayvs/128.jpg","a_brixen/128.jpg","karolkrakowiak_/128.jpg","herkulano/128.jpg","geran7/128.jpg","cggaurav/128.jpg","chris_witko/128.jpg","lososina/128.jpg","polarity/128.jpg","mattlat/128.jpg","brandonburke/128.jpg","constantx/128.jpg","teylorfeliz/128.jpg","craigelimeliah/128.jpg","rachelreveley/128.jpg","reabo101/128.jpg","rahmeen/128.jpg","ky/128.jpg","rickyyean/128.jpg","j04ntoh/128.jpg","spbroma/128.jpg","sebashton/128.jpg","jpenico/128.jpg","francis_vega/128.jpg","oktayelipek/128.jpg","kikillo/128.jpg","fabbianz/128.jpg","larrygerard/128.jpg","BroumiYoussef/128.jpg","0therplanet/128.jpg","mbilalsiddique1/128.jpg","ionuss/128.jpg","grrr_nl/128.jpg","liminha/128.jpg","rawdiggie/128.jpg","ryandownie/128.jpg","sethlouey/128.jpg","pixage/128.jpg","arpitnj/128.jpg","switmer777/128.jpg","josevnclch/128.jpg","kanickairaj/128.jpg","puzik/128.jpg","tbakdesigns/128.jpg","besbujupi/128.jpg","supjoey/128.jpg","lowie/128.jpg","linkibol/128.jpg","balintorosz/128.jpg","imcoding/128.jpg","agustincruiz/128.jpg","gusoto/128.jpg","thomasschrijer/128.jpg","superoutman/128.jpg","kalmerrautam/128.jpg","gabrielizalo/128.jpg","gojeanyn/128.jpg","davidbaldie/128.jpg","_vojto/128.jpg","laurengray/128.jpg","jydesign/128.jpg","mymyboy/128.jpg","nellleo/128.jpg","marciotoledo/128.jpg","ninjad3m0/128.jpg","to_soham/128.jpg","hasslunsford/128.jpg","muridrahhal/128.jpg","levisan/128.jpg","grahamkennery/128.jpg","lepetitogre/128.jpg","antongenkin/128.jpg","nessoila/128.jpg","amandabuzard/128.jpg","safrankov/128.jpg","cocolero/128.jpg","dss49/128.jpg","matt3224/128.jpg","bluesix/128.jpg","quailandquasar/128.jpg","AlbertoCococi/128.jpg","lepinski/128.jpg","sementiy/128.jpg","mhudobivnik/128.jpg","thibaut_re/128.jpg","olgary/128.jpg","shojberg/128.jpg","mtolokonnikov/128.jpg","bereto/128.jpg","naupintos/128.jpg","wegotvices/128.jpg","xadhix/128.jpg","macxim/128.jpg","rodnylobos/128.jpg","madcampos/128.jpg","madebyvadim/128.jpg","bartoszdawydzik/128.jpg","supervova/128.jpg","markretzloff/128.jpg","vonachoo/128.jpg","darylws/128.jpg","stevedesigner/128.jpg","mylesb/128.jpg","herbigt/128.jpg","depaulawagner/128.jpg","geshan/128.jpg","gizmeedevil1991/128.jpg","_scottburgess/128.jpg","lisovsky/128.jpg","davidsasda/128.jpg","artd_sign/128.jpg","YoungCutlass/128.jpg","mgonto/128.jpg","itstotallyamy/128.jpg","victorquinn/128.jpg","osmond/128.jpg","oksanafrewer/128.jpg","zauerkraut/128.jpg","iamkeithmason/128.jpg","nitinhayaran/128.jpg","lmjabreu/128.jpg","mandalareopens/128.jpg","thinkleft/128.jpg","ponchomendivil/128.jpg","juamperro/128.jpg","brunodesign1206/128.jpg","caseycavanagh/128.jpg","luxe/128.jpg","dotgridline/128.jpg","spedwig/128.jpg","madewulf/128.jpg","mattsapii/128.jpg","helderleal/128.jpg","chrisstumph/128.jpg","jayphen/128.jpg","nsamoylov/128.jpg","chrisvanderkooi/128.jpg","justme_timothyg/128.jpg","otozk/128.jpg","prinzadi/128.jpg","gu5taf/128.jpg","cyril_gaillard/128.jpg","d_kobelyatsky/128.jpg","daniloc/128.jpg","nwdsha/128.jpg","romanbulah/128.jpg","skkirilov/128.jpg","dvdwinden/128.jpg","dannol/128.jpg","thekevinjones/128.jpg","jwalter14/128.jpg","timgthomas/128.jpg","buddhasource/128.jpg","uxpiper/128.jpg","thatonetommy/128.jpg","diansigitp/128.jpg","adrienths/128.jpg","klimmka/128.jpg","gkaam/128.jpg","derekcramer/128.jpg","jennyyo/128.jpg","nerrsoft/128.jpg","xalionmalik/128.jpg","edhenderson/128.jpg","keyuri85/128.jpg","roxanejammet/128.jpg","kimcool/128.jpg","edkf/128.jpg","matkins/128.jpg","alessandroribe/128.jpg","jacksonlatka/128.jpg","lebronjennan/128.jpg","kostaspt/128.jpg","karlkanall/128.jpg","moynihan/128.jpg","danpliego/128.jpg","saulihirvi/128.jpg","wesleytrankin/128.jpg","fjaguero/128.jpg","bowbrick/128.jpg","mashaaaaal/128.jpg","yassiryahya/128.jpg","dparrelli/128.jpg","fotomagin/128.jpg","aka_james/128.jpg","denisepires/128.jpg","iqbalperkasa/128.jpg","martinansty/128.jpg","jarsen/128.jpg","r_oy/128.jpg","justinrob/128.jpg","gabrielrosser/128.jpg","malgordon/128.jpg","carlfairclough/128.jpg","michaelabehsera/128.jpg","pierrestoffe/128.jpg","enjoythetau/128.jpg","loganjlambert/128.jpg","rpeezy/128.jpg","coreyginnivan/128.jpg","michalhron/128.jpg","msveet/128.jpg","lingeswaran/128.jpg","kolsvein/128.jpg","peter576/128.jpg","reideiredale/128.jpg","joeymurdah/128.jpg","raphaelnikson/128.jpg","mvdheuvel/128.jpg","maxlinderman/128.jpg","jimmuirhead/128.jpg","begreative/128.jpg","frankiefreesbie/128.jpg","robturlinckx/128.jpg","Talbi_ConSept/128.jpg","longlivemyword/128.jpg","vanchesz/128.jpg","maiklam/128.jpg","hermanobrother/128.jpg","rez___a/128.jpg","gregsqueeb/128.jpg","greenbes/128.jpg","_ragzor/128.jpg","anthonysukow/128.jpg","fluidbrush/128.jpg","dactrtr/128.jpg","jehnglynn/128.jpg","bergmartin/128.jpg","hugocornejo/128.jpg","_kkga/128.jpg","dzantievm/128.jpg","sawalazar/128.jpg","sovesove/128.jpg","jonsgotwood/128.jpg","byryan/128.jpg","vytautas_a/128.jpg","mizhgan/128.jpg","cicerobr/128.jpg","nilshelmersson/128.jpg","d33pthought/128.jpg","davecraige/128.jpg","nckjrvs/128.jpg","alexandermayes/128.jpg","jcubic/128.jpg","craigrcoles/128.jpg","bagawarman/128.jpg","rob_thomas10/128.jpg","cofla/128.jpg","maikelk/128.jpg","rtgibbons/128.jpg","russell_baylis/128.jpg","mhesslow/128.jpg","codysanfilippo/128.jpg","webtanya/128.jpg","madebybrenton/128.jpg","dcalonaci/128.jpg","perfectflow/128.jpg","jjsiii/128.jpg","saarabpreet/128.jpg","kumarrajan12123/128.jpg","iamsteffen/128.jpg","themikenagle/128.jpg","ceekaytweet/128.jpg","larrybolt/128.jpg","conspirator/128.jpg","dallasbpeters/128.jpg","n3dmax/128.jpg","terpimost/128.jpg","kirillz/128.jpg","byrnecore/128.jpg","j_drake_/128.jpg","calebjoyce/128.jpg","russoedu/128.jpg","hoangloi/128.jpg","tobysaxon/128.jpg","gofrasdesign/128.jpg","dimaposnyy/128.jpg","tjisousa/128.jpg","okandungel/128.jpg","billyroshan/128.jpg","oskamaya/128.jpg","motionthinks/128.jpg","knilob/128.jpg","ashocka18/128.jpg","marrimo/128.jpg","bartjo/128.jpg","omnizya/128.jpg","ernestsemerda/128.jpg","andreas_pr/128.jpg","edgarchris99/128.jpg","thomasgeisen/128.jpg","gseguin/128.jpg","joannefournier/128.jpg","demersdesigns/128.jpg","adammarsbar/128.jpg","nasirwd/128.jpg","n_tassone/128.jpg","javorszky/128.jpg","themrdave/128.jpg","yecidsm/128.jpg","nicollerich/128.jpg","canapud/128.jpg","nicoleglynn/128.jpg","judzhin_miles/128.jpg","designervzm/128.jpg","kianoshp/128.jpg","evandrix/128.jpg","alterchuca/128.jpg","dhrubo/128.jpg","ma_tiax/128.jpg","ssbb_me/128.jpg","dorphern/128.jpg","mauriolg/128.jpg","bruno_mart/128.jpg","mactopus/128.jpg","the_winslet/128.jpg","joemdesign/128.jpg","Shriiiiimp/128.jpg","jacobbennett/128.jpg","nfedoroff/128.jpg","iamglimy/128.jpg","allagringaus/128.jpg","aiiaiiaii/128.jpg","olaolusoga/128.jpg","buryaknick/128.jpg","wim1k/128.jpg","nicklacke/128.jpg","a1chapone/128.jpg","steynviljoen/128.jpg","strikewan/128.jpg","ryankirkman/128.jpg","andrewabogado/128.jpg","doooon/128.jpg","jagan123/128.jpg","ariffsetiawan/128.jpg","elenadissi/128.jpg","mwarkentin/128.jpg","thierrymeier_/128.jpg","r_garcia/128.jpg","dmackerman/128.jpg","borantula/128.jpg","konus/128.jpg","spacewood_/128.jpg","ryuchi311/128.jpg","evanshajed/128.jpg","tristanlegros/128.jpg","shoaib253/128.jpg","aislinnkelly/128.jpg","okcoker/128.jpg","timpetricola/128.jpg","sunshinedgirl/128.jpg","chadami/128.jpg","aleclarsoniv/128.jpg","nomidesigns/128.jpg","petebernardo/128.jpg","scottiedude/128.jpg","millinet/128.jpg","imsoper/128.jpg","imammuht/128.jpg","benjamin_knight/128.jpg","nepdud/128.jpg","joki4/128.jpg","lanceguyatt/128.jpg","bboy1895/128.jpg","amywebbb/128.jpg","rweve/128.jpg","haruintesettden/128.jpg","ricburton/128.jpg","nelshd/128.jpg","batsirai/128.jpg","primozcigler/128.jpg","jffgrdnr/128.jpg","8d3k/128.jpg","geneseleznev/128.jpg","al_li/128.jpg","souperphly/128.jpg","mslarkina/128.jpg","2fockus/128.jpg","cdavis565/128.jpg","xiel/128.jpg","turkutuuli/128.jpg","uxward/128.jpg","lebinoclard/128.jpg","gauravjassal/128.jpg","davidmerrique/128.jpg","mdsisto/128.jpg","andrewofficer/128.jpg","kojourin/128.jpg","dnirmal/128.jpg","kevka/128.jpg","mr_shiznit/128.jpg","aluisio_azevedo/128.jpg","cloudstudio/128.jpg","danvierich/128.jpg","alexivanichkin/128.jpg","fran_mchamy/128.jpg","perretmagali/128.jpg","betraydan/128.jpg","cadikkara/128.jpg","matbeedotcom/128.jpg","jeremyworboys/128.jpg","bpartridge/128.jpg","michaelkoper/128.jpg","silv3rgvn/128.jpg","alevizio/128.jpg","johnsmithagency/128.jpg","lawlbwoy/128.jpg","vitor376/128.jpg","desastrozo/128.jpg","thimo_cz/128.jpg","jasonmarkjones/128.jpg","lhausermann/128.jpg","xravil/128.jpg","guischmitt/128.jpg","vigobronx/128.jpg","panghal0/128.jpg","miguelkooreman/128.jpg","surgeonist/128.jpg","christianoliff/128.jpg","caspergrl/128.jpg","iamkarna/128.jpg","ipavelek/128.jpg","pierre_nel/128.jpg","y2graphic/128.jpg","sterlingrules/128.jpg","elbuscainfo/128.jpg","bennyjien/128.jpg","stushona/128.jpg","estebanuribe/128.jpg","embrcecreations/128.jpg","danillos/128.jpg","elliotlewis/128.jpg","charlesrpratt/128.jpg","vladyn/128.jpg","emmeffess/128.jpg","carlosblanco_eu/128.jpg","leonfedotov/128.jpg","rangafangs/128.jpg","chris_frees/128.jpg","tgormtx/128.jpg","bryan_topham/128.jpg","jpscribbles/128.jpg","mighty55/128.jpg","carbontwelve/128.jpg","isaacfifth/128.jpg","iamjdeleon/128.jpg","snowwrite/128.jpg","barputro/128.jpg","drewbyreese/128.jpg","sachacorazzi/128.jpg","bistrianiosip/128.jpg","magoo04/128.jpg","pehamondello/128.jpg","yayteejay/128.jpg","a_harris88/128.jpg","algunsanabria/128.jpg","zforrester/128.jpg","ovall/128.jpg","carlosjgsousa/128.jpg","geobikas/128.jpg","ah_lice/128.jpg","looneydoodle/128.jpg","nerdgr8/128.jpg","ddggccaa/128.jpg","zackeeler/128.jpg","normanbox/128.jpg","el_fuertisimo/128.jpg","ismail_biltagi/128.jpg","juangomezw/128.jpg","jnmnrd/128.jpg","patrickcoombe/128.jpg","ryanjohnson_me/128.jpg","markolschesky/128.jpg","jeffgolenski/128.jpg","kvasnic/128.jpg","lindseyzilla/128.jpg","gauchomatt/128.jpg","afusinatto/128.jpg","kevinoh/128.jpg","okansurreel/128.jpg","adamawesomeface/128.jpg","emileboudeling/128.jpg","arishi_/128.jpg","juanmamartinez/128.jpg","wikiziner/128.jpg","danthms/128.jpg","mkginfo/128.jpg","terrorpixel/128.jpg","curiousonaut/128.jpg","prheemo/128.jpg","michaelcolenso/128.jpg","foczzi/128.jpg","martip07/128.jpg","thaodang17/128.jpg","johncafazza/128.jpg","robinlayfield/128.jpg","franciscoamk/128.jpg","abdulhyeuk/128.jpg","marklamb/128.jpg","edobene/128.jpg","andresenfredrik/128.jpg","mikaeljorhult/128.jpg","chrisslowik/128.jpg","vinciarts/128.jpg","meelford/128.jpg","elliotnolten/128.jpg","yehudab/128.jpg","vijaykarthik/128.jpg","bfrohs/128.jpg","josep_martins/128.jpg","attacks/128.jpg","sur4dye/128.jpg","tumski/128.jpg","instalox/128.jpg","mangosango/128.jpg","paulfarino/128.jpg","kazaky999/128.jpg","kiwiupover/128.jpg","nvkznemo/128.jpg","tom_even/128.jpg","ratbus/128.jpg","woodsman001/128.jpg","joshmedeski/128.jpg","thewillbeard/128.jpg","psaikali/128.jpg","joe_black/128.jpg","aleinadsays/128.jpg","marcusgorillius/128.jpg","hota_v/128.jpg","jghyllebert/128.jpg","shinze/128.jpg","janpalounek/128.jpg","jeremiespoken/128.jpg","her_ruu/128.jpg","dansowter/128.jpg","felipeapiress/128.jpg","magugzbrand2d/128.jpg","posterjob/128.jpg","nathalie_fs/128.jpg","bobbytwoshoes/128.jpg","dreizle/128.jpg","jeremymouton/128.jpg","elisabethkjaer/128.jpg","notbadart/128.jpg","mohanrohith/128.jpg","jlsolerdeltoro/128.jpg","itskawsar/128.jpg","slowspock/128.jpg","zvchkelly/128.jpg","wiljanslofstra/128.jpg","craighenneberry/128.jpg","trubeatto/128.jpg","juaumlol/128.jpg","samscouto/128.jpg","BenouarradeM/128.jpg","gipsy_raf/128.jpg","netonet_il/128.jpg","arkokoley/128.jpg","itsajimithing/128.jpg","smalonso/128.jpg","victordeanda/128.jpg","_dwite_/128.jpg","richardgarretts/128.jpg","gregrwilkinson/128.jpg","anatolinicolae/128.jpg","lu4sh1i/128.jpg","stefanotirloni/128.jpg","ostirbu/128.jpg","darcystonge/128.jpg","naitanamoreno/128.jpg","michaelcomiskey/128.jpg","adhiardana/128.jpg","marcomano_/128.jpg","davidcazalis/128.jpg","falconerie/128.jpg","gregkilian/128.jpg","bcrad/128.jpg","bolzanmarco/128.jpg","low_res/128.jpg","vlajki/128.jpg","petar_prog/128.jpg","jonkspr/128.jpg","akmalfikri/128.jpg","mfacchinello/128.jpg","atanism/128.jpg","harry_sistalam/128.jpg","murrayswift/128.jpg","bobwassermann/128.jpg","gavr1l0/128.jpg","madshensel/128.jpg","mr_subtle/128.jpg","deviljho_/128.jpg","salimianoff/128.jpg","joetruesdell/128.jpg","twittypork/128.jpg","airskylar/128.jpg","dnezkumar/128.jpg","dgajjar/128.jpg","cherif_b/128.jpg","salvafc/128.jpg","louis_currie/128.jpg","deeenright/128.jpg","cybind/128.jpg","eyronn/128.jpg","vickyshits/128.jpg","sweetdelisa/128.jpg","cboller1/128.jpg","andresdjasso/128.jpg","melvindidit/128.jpg","andysolomon/128.jpg","thaisselenator_/128.jpg","lvovenok/128.jpg","giuliusa/128.jpg","belyaev_rs/128.jpg","overcloacked/128.jpg","kamal_chaneman/128.jpg","incubo82/128.jpg","hellofeverrrr/128.jpg","mhaligowski/128.jpg","sunlandictwin/128.jpg","bu7921/128.jpg","andytlaw/128.jpg","jeremery/128.jpg","finchjke/128.jpg","manigm/128.jpg","umurgdk/128.jpg","scottfeltham/128.jpg","ganserene/128.jpg","mutu_krish/128.jpg","jodytaggart/128.jpg","ntfblog/128.jpg","tanveerrao/128.jpg","hfalucas/128.jpg","alxleroydeval/128.jpg","kucingbelang4/128.jpg","bargaorobalo/128.jpg","colgruv/128.jpg","stalewine/128.jpg","kylefrost/128.jpg","baumannzone/128.jpg","angelcolberg/128.jpg","sachingawas/128.jpg","jjshaw14/128.jpg","ramanathan_pdy/128.jpg","johndezember/128.jpg","nilshoenson/128.jpg","brandonmorreale/128.jpg","nutzumi/128.jpg","brandonflatsoda/128.jpg","sergeyalmone/128.jpg","klefue/128.jpg","kirangopal/128.jpg","baumann_alex/128.jpg","matthewkay_/128.jpg","jay_wilburn/128.jpg","shesgared/128.jpg","apriendeau/128.jpg","johnriordan/128.jpg","wake_gs/128.jpg","aleksitappura/128.jpg","emsgulam/128.jpg","xilantra/128.jpg","imomenui/128.jpg","sircalebgrove/128.jpg","newbrushes/128.jpg","hsinyo23/128.jpg","m4rio/128.jpg","katiemdaly/128.jpg","s4f1/128.jpg","ecommerceil/128.jpg","marlinjayakody/128.jpg","swooshycueb/128.jpg","sangdth/128.jpg","coderdiaz/128.jpg","bluefx_/128.jpg","vivekprvr/128.jpg","sasha_shestakov/128.jpg","eugeneeweb/128.jpg","dgclegg/128.jpg","n1ght_coder/128.jpg","dixchen/128.jpg","blakehawksworth/128.jpg","trueblood_33/128.jpg","hai_ninh_nguyen/128.jpg","marclgonzales/128.jpg","yesmeck/128.jpg","stephcoue/128.jpg","doronmalki/128.jpg","ruehldesign/128.jpg","anasnakawa/128.jpg","kijanmaharjan/128.jpg","wearesavas/128.jpg","stefvdham/128.jpg","tweetubhai/128.jpg","alecarpentier/128.jpg","fiterik/128.jpg","antonyryndya/128.jpg","d00maz/128.jpg","theonlyzeke/128.jpg","missaaamy/128.jpg","carlosm/128.jpg","manekenthe/128.jpg","reetajayendra/128.jpg","jeremyshimko/128.jpg","justinrgraham/128.jpg","stefanozoffoli/128.jpg","overra/128.jpg","mrebay007/128.jpg","shvelo96/128.jpg","pyronite/128.jpg","thedjpetersen/128.jpg","rtyukmaev/128.jpg","_williamguerra/128.jpg","albertaugustin/128.jpg","vikashpathak18/128.jpg","kevinjohndayy/128.jpg","vj_demien/128.jpg","colirpixoil/128.jpg","goddardlewis/128.jpg","laasli/128.jpg","jqiuss/128.jpg","heycamtaylor/128.jpg","nastya_mane/128.jpg","mastermindesign/128.jpg","ccinojasso1/128.jpg","nyancecom/128.jpg","sandywoodruff/128.jpg","bighanddesign/128.jpg","sbtransparent/128.jpg","aviddayentonbay/128.jpg","richwild/128.jpg","kaysix_dizzy/128.jpg","tur8le/128.jpg","seyedhossein1/128.jpg","privetwagner/128.jpg","emmandenn/128.jpg","dev_essentials/128.jpg","jmfsocial/128.jpg","_yardenoon/128.jpg","mateaodviteza/128.jpg","weavermedia/128.jpg","mufaddal_mw/128.jpg","hafeeskhan/128.jpg","ashernatali/128.jpg","sulaqo/128.jpg","eddiechen/128.jpg","josecarlospsh/128.jpg","vm_f/128.jpg","enricocicconi/128.jpg","danmartin70/128.jpg","gmourier/128.jpg","donjain/128.jpg","mrxloka/128.jpg","_pedropinho/128.jpg","eitarafa/128.jpg","oscarowusu/128.jpg","ralph_lam/128.jpg","panchajanyag/128.jpg","woodydotmx/128.jpg","jerrybai1907/128.jpg","marshallchen_/128.jpg","xamorep/128.jpg","aio___/128.jpg","chaabane_wail/128.jpg","txcx/128.jpg","akashsharma39/128.jpg","falling_soul/128.jpg","sainraja/128.jpg","mugukamil/128.jpg","johannesneu/128.jpg","markwienands/128.jpg","karthipanraj/128.jpg","balakayuriy/128.jpg","alan_zhang_/128.jpg","layerssss/128.jpg","kaspernordkvist/128.jpg","mirfanqureshi/128.jpg","hanna_smi/128.jpg","VMilescu/128.jpg","aeon56/128.jpg","m_kalibry/128.jpg","sreejithexp/128.jpg","dicesales/128.jpg","dhoot_amit/128.jpg","smenov/128.jpg","lonesomelemon/128.jpg","vladimirdevic/128.jpg","joelcipriano/128.jpg","haligaliharun/128.jpg","buleswapnil/128.jpg","serefka/128.jpg","ifarafonow/128.jpg","vikasvinfotech/128.jpg","urrutimeoli/128.jpg","areandacom/128.jpg"];
en.internet.avatar_uri=[];for(var i=0;i<avatarUri.length;i++)en.internet.avatar_uri.push("https://s3.amazonaws.com/uifaces/faces/twitter/"+avatarUri[i]);en.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"],supplemental:["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]},en.name={first_name:["Aaliyah","Aaron","Abagail","Abbey","Abbie","Abbigail","Abby","Abdiel","Abdul","Abdullah","Abe","Abel","Abelardo","Abigail","Abigale","Abigayle","Abner","Abraham","Ada","Adah","Adalberto","Adaline","Adam","Adan","Addie","Addison","Adela","Adelbert","Adele","Adelia","Adeline","Adell","Adella","Adelle","Aditya","Adolf","Adolfo","Adolph","Adolphus","Adonis","Adrain","Adrian","Adriana","Adrianna","Adriel","Adrien","Adrienne","Afton","Aglae","Agnes","Agustin","Agustina","Ahmad","Ahmed","Aida","Aidan","Aiden","Aileen","Aimee","Aisha","Aiyana","Akeem","Al","Alaina","Alan","Alana","Alanis","Alanna","Alayna","Alba","Albert","Alberta","Albertha","Alberto","Albin","Albina","Alda","Alden","Alec","Aleen","Alejandra","Alejandrin","Alek","Alena","Alene","Alessandra","Alessandro","Alessia","Aletha","Alex","Alexa","Alexander","Alexandra","Alexandre","Alexandrea","Alexandria","Alexandrine","Alexandro","Alexane","Alexanne","Alexie","Alexis","Alexys","Alexzander","Alf","Alfonso","Alfonzo","Alford","Alfred","Alfreda","Alfredo","Ali","Alia","Alice","Alicia","Alisa","Alisha","Alison","Alivia","Aliya","Aliyah","Aliza","Alize","Allan","Allen","Allene","Allie","Allison","Ally","Alphonso","Alta","Althea","Alva","Alvah","Alvena","Alvera","Alverta","Alvina","Alvis","Alyce","Alycia","Alysa","Alysha","Alyson","Alysson","Amalia","Amanda","Amani","Amara","Amari","Amaya","Amber","Ambrose","Amelia","Amelie","Amely","America","Americo","Amie","Amina","Amir","Amira","Amiya","Amos","Amparo","Amy","Amya","Ana","Anabel","Anabelle","Anahi","Anais","Anastacio","Anastasia","Anderson","Andre","Andreane","Andreanne","Andres","Andrew","Andy","Angel","Angela","Angelica","Angelina","Angeline","Angelita","Angelo","Angie","Angus","Anibal","Anika","Anissa","Anita","Aniya","Aniyah","Anjali","Anna","Annabel","Annabell","Annabelle","Annalise","Annamae","Annamarie","Anne","Annetta","Annette","Annie","Ansel","Ansley","Anthony","Antoinette","Antone","Antonetta","Antonette","Antonia","Antonietta","Antonina","Antonio","Antwan","Antwon","Anya","April","Ara","Araceli","Aracely","Arch","Archibald","Ardella","Arden","Ardith","Arely","Ari","Ariane","Arianna","Aric","Ariel","Arielle","Arjun","Arlene","Arlie","Arlo","Armand","Armando","Armani","Arnaldo","Arne","Arno","Arnold","Arnoldo","Arnulfo","Aron","Art","Arthur","Arturo","Arvel","Arvid","Arvilla","Aryanna","Asa","Asha","Ashlee","Ashleigh","Ashley","Ashly","Ashlynn","Ashton","Ashtyn","Asia","Assunta","Astrid","Athena","Aubree","Aubrey","Audie","Audra","Audreanne","Audrey","August","Augusta","Augustine","Augustus","Aurelia","Aurelie","Aurelio","Aurore","Austen","Austin","Austyn","Autumn","Ava","Avery","Avis","Axel","Ayana","Ayden","Ayla","Aylin","Baby","Bailee","Bailey","Barbara","Barney","Baron","Barrett","Barry","Bart","Bartholome","Barton","Baylee","Beatrice","Beau","Beaulah","Bell","Bella","Belle","Ben","Benedict","Benjamin","Bennett","Bennie","Benny","Benton","Berenice","Bernadette","Bernadine","Bernard","Bernardo","Berneice","Bernhard","Bernice","Bernie","Berniece","Bernita","Berry","Bert","Berta","Bertha","Bertram","Bertrand","Beryl","Bessie","Beth","Bethany","Bethel","Betsy","Bette","Bettie","Betty","Bettye","Beulah","Beverly","Bianka","Bill","Billie","Billy","Birdie","Blair","Blaise","Blake","Blanca","Blanche","Blaze","Bo","Bobbie","Bobby","Bonita","Bonnie","Boris","Boyd","Brad","Braden","Bradford","Bradley","Bradly","Brady","Braeden","Brain","Brandi","Brando","Brandon","Brandt","Brandy","Brandyn","Brannon","Branson","Brant","Braulio","Braxton","Brayan","Breana","Breanna","Breanne","Brenda","Brendan","Brenden","Brendon","Brenna","Brennan","Brennon","Brent","Bret","Brett","Bria","Brian","Briana","Brianne","Brice","Bridget","Bridgette","Bridie","Brielle","Brigitte","Brionna","Brisa","Britney","Brittany","Brock","Broderick","Brody","Brook","Brooke","Brooklyn","Brooks","Brown","Bruce","Bryana","Bryce","Brycen","Bryon","Buck","Bud","Buddy","Buford","Bulah","Burdette","Burley","Burnice","Buster","Cade","Caden","Caesar","Caitlyn","Cale","Caleb","Caleigh","Cali","Calista","Callie","Camden","Cameron","Camila","Camilla","Camille","Camren","Camron","Camryn","Camylle","Candace","Candelario","Candice","Candida","Candido","Cara","Carey","Carissa","Carlee","Carleton","Carley","Carli","Carlie","Carlo","Carlos","Carlotta","Carmel","Carmela","Carmella","Carmelo","Carmen","Carmine","Carol","Carolanne","Carole","Carolina","Caroline","Carolyn","Carolyne","Carrie","Carroll","Carson","Carter","Cary","Casandra","Casey","Casimer","Casimir","Casper","Cassandra","Cassandre","Cassidy","Cassie","Catalina","Caterina","Catharine","Catherine","Cathrine","Cathryn","Cathy","Cayla","Ceasar","Cecelia","Cecil","Cecile","Cecilia","Cedrick","Celestine","Celestino","Celia","Celine","Cesar","Chad","Chadd","Chadrick","Chaim","Chance","Chandler","Chanel","Chanelle","Charity","Charlene","Charles","Charley","Charlie","Charlotte","Chase","Chasity","Chauncey","Chaya","Chaz","Chelsea","Chelsey","Chelsie","Chesley","Chester","Chet","Cheyanne","Cheyenne","Chloe","Chris","Christ","Christa","Christelle","Christian","Christiana","Christina","Christine","Christop","Christophe","Christopher","Christy","Chyna","Ciara","Cicero","Cielo","Cierra","Cindy","Citlalli","Clair","Claire","Clara","Clarabelle","Clare","Clarissa","Clark","Claud","Claude","Claudia","Claudie","Claudine","Clay","Clemens","Clement","Clementina","Clementine","Clemmie","Cleo","Cleora","Cleta","Cletus","Cleve","Cleveland","Clifford","Clifton","Clint","Clinton","Clotilde","Clovis","Cloyd","Clyde","Coby","Cody","Colby","Cole","Coleman","Colin","Colleen","Collin","Colt","Colten","Colton","Columbus","Concepcion","Conner","Connie","Connor","Conor","Conrad","Constance","Constantin","Consuelo","Cooper","Cora","Coralie","Corbin","Cordelia","Cordell","Cordia","Cordie","Corene","Corine","Cornelius","Cornell","Corrine","Cortez","Cortney","Cory","Coty","Courtney","Coy","Craig","Crawford","Creola","Cristal","Cristian","Cristina","Cristobal","Cristopher","Cruz","Crystal","Crystel","Cullen","Curt","Curtis","Cydney","Cynthia","Cyril","Cyrus","Dagmar","Dahlia","Daija","Daisha","Daisy","Dakota","Dale","Dallas","Dallin","Dalton","Damaris","Dameon","Damian","Damien","Damion","Damon","Dan","Dana","Dandre","Dane","D'angelo","Dangelo","Danial","Daniela","Daniella","Danielle","Danika","Dannie","Danny","Dante","Danyka","Daphne","Daphnee","Daphney","Darby","Daren","Darian","Dariana","Darien","Dario","Darion","Darius","Darlene","Daron","Darrel","Darrell","Darren","Darrick","Darrin","Darrion","Darron","Darryl","Darwin","Daryl","Dashawn","Dasia","Dave","David","Davin","Davion","Davon","Davonte","Dawn","Dawson","Dax","Dayana","Dayna","Dayne","Dayton","Dean","Deangelo","Deanna","Deborah","Declan","Dedric","Dedrick","Dee","Deion","Deja","Dejah","Dejon","Dejuan","Delaney","Delbert","Delfina","Delia","Delilah","Dell","Della","Delmer","Delores","Delpha","Delphia","Delphine","Delta","Demarco","Demarcus","Demario","Demetris","Demetrius","Demond","Dena","Denis","Dennis","Deon","Deondre","Deontae","Deonte","Dereck","Derek","Derick","Deron","Derrick","Deshaun","Deshawn","Desiree","Desmond","Dessie","Destany","Destin","Destinee","Destiney","Destini","Destiny","Devan","Devante","Deven","Devin","Devon","Devonte","Devyn","Dewayne","Dewitt","Dexter","Diamond","Diana","Dianna","Diego","Dillan","Dillon","Dimitri","Dina","Dino","Dion","Dixie","Dock","Dolly","Dolores","Domenic","Domenica","Domenick","Domenico","Domingo","Dominic","Dominique","Don","Donald","Donato","Donavon","Donna","Donnell","Donnie","Donny","Dora","Dorcas","Dorian","Doris","Dorothea","Dorothy","Dorris","Dortha","Dorthy","Doug","Douglas","Dovie","Doyle","Drake","Drew","Duane","Dudley","Dulce","Duncan","Durward","Dustin","Dusty","Dwight","Dylan","Earl","Earlene","Earline","Earnest","Earnestine","Easter","Easton","Ebba","Ebony","Ed","Eda","Edd","Eddie","Eden","Edgar","Edgardo","Edison","Edmond","Edmund","Edna","Eduardo","Edward","Edwardo","Edwin","Edwina","Edyth","Edythe","Effie","Efrain","Efren","Eileen","Einar","Eino","Eladio","Elaina","Elbert","Elda","Eldon","Eldora","Eldred","Eldridge","Eleanora","Eleanore","Eleazar","Electa","Elena","Elenor","Elenora","Eleonore","Elfrieda","Eli","Elian","Eliane","Elias","Eliezer","Elijah","Elinor","Elinore","Elisa","Elisabeth","Elise","Eliseo","Elisha","Elissa","Eliza","Elizabeth","Ella","Ellen","Ellie","Elliot","Elliott","Ellis","Ellsworth","Elmer","Elmira","Elmo","Elmore","Elna","Elnora","Elody","Eloisa","Eloise","Elouise","Eloy","Elroy","Elsa","Else","Elsie","Elta","Elton","Elva","Elvera","Elvie","Elvis","Elwin","Elwyn","Elyse","Elyssa","Elza","Emanuel","Emelia","Emelie","Emely","Emerald","Emerson","Emery","Emie","Emil","Emile","Emilia","Emiliano","Emilie","Emilio","Emily","Emma","Emmalee","Emmanuel","Emmanuelle","Emmet","Emmett","Emmie","Emmitt","Emmy","Emory","Ena","Enid","Enoch","Enola","Enos","Enrico","Enrique","Ephraim","Era","Eriberto","Eric","Erica","Erich","Erick","Ericka","Erik","Erika","Erin","Erling","Erna","Ernest","Ernestina","Ernestine","Ernesto","Ernie","Ervin","Erwin","Eryn","Esmeralda","Esperanza","Esta","Esteban","Estefania","Estel","Estell","Estella","Estelle","Estevan","Esther","Estrella","Etha","Ethan","Ethel","Ethelyn","Ethyl","Ettie","Eudora","Eugene","Eugenia","Eula","Eulah","Eulalia","Euna","Eunice","Eusebio","Eva","Evalyn","Evan","Evangeline","Evans","Eve","Eveline","Evelyn","Everardo","Everett","Everette","Evert","Evie","Ewald","Ewell","Ezekiel","Ezequiel","Ezra","Fabian","Fabiola","Fae","Fannie","Fanny","Fatima","Faustino","Fausto","Favian","Fay","Faye","Federico","Felicia","Felicita","Felicity","Felipa","Felipe","Felix","Felton","Fermin","Fern","Fernando","Ferne","Fidel","Filiberto","Filomena","Finn","Fiona","Flavie","Flavio","Fleta","Fletcher","Flo","Florence","Florencio","Florian","Florida","Florine","Flossie","Floy","Floyd","Ford","Forest","Forrest","Foster","Frances","Francesca","Francesco","Francis","Francisca","Francisco","Franco","Frank","Frankie","Franz","Fred","Freda","Freddie","Freddy","Frederic","Frederick","Frederik","Frederique","Fredrick","Fredy","Freeda","Freeman","Freida","Frida","Frieda","Friedrich","Fritz","Furman","Gabe","Gabriel","Gabriella","Gabrielle","Gaetano","Gage","Gail","Gardner","Garett","Garfield","Garland","Garnet","Garnett","Garret","Garrett","Garrick","Garrison","Garry","Garth","Gaston","Gavin","Gay","Gayle","Gaylord","Gene","General","Genesis","Genevieve","Gennaro","Genoveva","Geo","Geoffrey","George","Georgette","Georgiana","Georgianna","Geovanni","Geovanny","Geovany","Gerald","Geraldine","Gerard","Gerardo","Gerda","Gerhard","Germaine","German","Gerry","Gerson","Gertrude","Gia","Gianni","Gideon","Gilbert","Gilberto","Gilda","Giles","Gillian","Gina","Gino","Giovani","Giovanna","Giovanni","Giovanny","Gisselle","Giuseppe","Gladyce","Gladys","Glen","Glenda","Glenna","Glennie","Gloria","Godfrey","Golda","Golden","Gonzalo","Gordon","Grace","Gracie","Graciela","Grady","Graham","Grant","Granville","Grayce","Grayson","Green","Greg","Gregg","Gregoria","Gregorio","Gregory","Greta","Gretchen","Greyson","Griffin","Grover","Guadalupe","Gudrun","Guido","Guillermo","Guiseppe","Gunnar","Gunner","Gus","Gussie","Gust","Gustave","Guy","Gwen","Gwendolyn","Hadley","Hailee","Hailey","Hailie","Hal","Haleigh","Haley","Halie","Halle","Hallie","Hank","Hanna","Hannah","Hans","Hardy","Harley","Harmon","Harmony","Harold","Harrison","Harry","Harvey","Haskell","Hassan","Hassie","Hattie","Haven","Hayden","Haylee","Hayley","Haylie","Hazel","Hazle","Heath","Heather","Heaven","Heber","Hector","Heidi","Helen","Helena","Helene","Helga","Hellen","Helmer","Heloise","Henderson","Henri","Henriette","Henry","Herbert","Herman","Hermann","Hermina","Herminia","Herminio","Hershel","Herta","Hertha","Hester","Hettie","Hilario","Hilbert","Hilda","Hildegard","Hillard","Hillary","Hilma","Hilton","Hipolito","Hiram","Hobart","Holden","Hollie","Hollis","Holly","Hope","Horace","Horacio","Hortense","Hosea","Houston","Howard","Howell","Hoyt","Hubert","Hudson","Hugh","Hulda","Humberto","Hunter","Hyman","Ian","Ibrahim","Icie","Ida","Idell","Idella","Ignacio","Ignatius","Ike","Ila","Ilene","Iliana","Ima","Imani","Imelda","Immanuel","Imogene","Ines","Irma","Irving","Irwin","Isaac","Isabel","Isabell","Isabella","Isabelle","Isac","Isadore","Isai","Isaiah","Isaias","Isidro","Ismael","Isobel","Isom","Israel","Issac","Itzel","Iva","Ivah","Ivory","Ivy","Izabella","Izaiah","Jabari","Jace","Jacey","Jacinthe","Jacinto","Jack","Jackeline","Jackie","Jacklyn","Jackson","Jacky","Jaclyn","Jacquelyn","Jacques","Jacynthe","Jada","Jade","Jaden","Jadon","Jadyn","Jaeden","Jaida","Jaiden","Jailyn","Jaime","Jairo","Jakayla","Jake","Jakob","Jaleel","Jalen","Jalon","Jalyn","Jamaal","Jamal","Jamar","Jamarcus","Jamel","Jameson","Jamey","Jamie","Jamil","Jamir","Jamison","Jammie","Jan","Jana","Janae","Jane","Janelle","Janessa","Janet","Janice","Janick","Janie","Janis","Janiya","Jannie","Jany","Jaquan","Jaquelin","Jaqueline","Jared","Jaren","Jarod","Jaron","Jarred","Jarrell","Jarret","Jarrett","Jarrod","Jarvis","Jasen","Jasmin","Jason","Jasper","Jaunita","Javier","Javon","Javonte","Jay","Jayce","Jaycee","Jayda","Jayde","Jayden","Jaydon","Jaylan","Jaylen","Jaylin","Jaylon","Jayme","Jayne","Jayson","Jazlyn","Jazmin","Jazmyn","Jazmyne","Jean","Jeanette","Jeanie","Jeanne","Jed","Jedediah","Jedidiah","Jeff","Jefferey","Jeffery","Jeffrey","Jeffry","Jena","Jenifer","Jennie","Jennifer","Jennings","Jennyfer","Jensen","Jerad","Jerald","Jeramie","Jeramy","Jerel","Jeremie","Jeremy","Jermain","Jermaine","Jermey","Jerod","Jerome","Jeromy","Jerrell","Jerrod","Jerrold","Jerry","Jess","Jesse","Jessica","Jessie","Jessika","Jessy","Jessyca","Jesus","Jett","Jettie","Jevon","Jewel","Jewell","Jillian","Jimmie","Jimmy","Jo","Joan","Joana","Joanie","Joanne","Joannie","Joanny","Joany","Joaquin","Jocelyn","Jodie","Jody","Joe","Joel","Joelle","Joesph","Joey","Johan","Johann","Johanna","Johathan","John","Johnathan","Johnathon","Johnnie","Johnny","Johnpaul","Johnson","Jolie","Jon","Jonas","Jonatan","Jonathan","Jonathon","Jordan","Jordane","Jordi","Jordon","Jordy","Jordyn","Jorge","Jose","Josefa","Josefina","Joseph","Josephine","Josh","Joshua","Joshuah","Josiah","Josiane","Josianne","Josie","Josue","Jovan","Jovani","Jovanny","Jovany","Joy","Joyce","Juana","Juanita","Judah","Judd","Jude","Judge","Judson","Judy","Jules","Julia","Julian","Juliana","Julianne","Julie","Julien","Juliet","Julio","Julius","June","Junior","Junius","Justen","Justice","Justina","Justine","Juston","Justus","Justyn","Juvenal","Juwan","Kacey","Kaci","Kacie","Kade","Kaden","Kadin","Kaela","Kaelyn","Kaia","Kailee","Kailey","Kailyn","Kaitlin","Kaitlyn","Kale","Kaleb","Kaleigh","Kaley","Kali","Kallie","Kameron","Kamille","Kamren","Kamron","Kamryn","Kane","Kara","Kareem","Karelle","Karen","Kari","Kariane","Karianne","Karina","Karine","Karl","Karlee","Karley","Karli","Karlie","Karolann","Karson","Kasandra","Kasey","Kassandra","Katarina","Katelin","Katelyn","Katelynn","Katharina","Katherine","Katheryn","Kathleen","Kathlyn","Kathryn","Kathryne","Katlyn","Katlynn","Katrina","Katrine","Kattie","Kavon","Kay","Kaya","Kaycee","Kayden","Kayla","Kaylah","Kaylee","Kayleigh","Kayley","Kayli","Kaylie","Kaylin","Keagan","Keanu","Keara","Keaton","Keegan","Keeley","Keely","Keenan","Keira","Keith","Kellen","Kelley","Kelli","Kellie","Kelly","Kelsi","Kelsie","Kelton","Kelvin","Ken","Kendall","Kendra","Kendrick","Kenna","Kennedi","Kennedy","Kenneth","Kennith","Kenny","Kenton","Kenya","Kenyatta","Kenyon","Keon","Keshaun","Keshawn","Keven","Kevin","Kevon","Keyon","Keyshawn","Khalid","Khalil","Kian","Kiana","Kianna","Kiara","Kiarra","Kiel","Kiera","Kieran","Kiley","Kim","Kimberly","King","Kip","Kira","Kirk","Kirsten","Kirstin","Kitty","Kobe","Koby","Kody","Kolby","Kole","Korbin","Korey","Kory","Kraig","Kris","Krista","Kristian","Kristin","Kristina","Kristofer","Kristoffer","Kristopher","Kristy","Krystal","Krystel","Krystina","Kurt","Kurtis","Kyla","Kyle","Kylee","Kyleigh","Kyler","Kylie","Kyra","Lacey","Lacy","Ladarius","Lafayette","Laila","Laisha","Lamar","Lambert","Lamont","Lance","Landen","Lane","Laney","Larissa","Laron","Larry","Larue","Laura","Laurel","Lauren","Laurence","Lauretta","Lauriane","Laurianne","Laurie","Laurine","Laury","Lauryn","Lavada","Lavern","Laverna","Laverne","Lavina","Lavinia","Lavon","Lavonne","Lawrence","Lawson","Layla","Layne","Lazaro","Lea","Leann","Leanna","Leanne","Leatha","Leda","Lee","Leif","Leila","Leilani","Lela","Lelah","Leland","Lelia","Lempi","Lemuel","Lenna","Lennie","Lenny","Lenora","Lenore","Leo","Leola","Leon","Leonard","Leonardo","Leone","Leonel","Leonie","Leonor","Leonora","Leopold","Leopoldo","Leora","Lera","Lesley","Leslie","Lesly","Lessie","Lester","Leta","Letha","Letitia","Levi","Lew","Lewis","Lexi","Lexie","Lexus","Lia","Liam","Liana","Libbie","Libby","Lila","Lilian","Liliana","Liliane","Lilla","Lillian","Lilliana","Lillie","Lilly","Lily","Lilyan","Lina","Lincoln","Linda","Lindsay","Lindsey","Linnea","Linnie","Linwood","Lionel","Lisa","Lisandro","Lisette","Litzy","Liza","Lizeth","Lizzie","Llewellyn","Lloyd","Logan","Lois","Lola","Lolita","Loma","Lon","London","Lonie","Lonnie","Lonny","Lonzo","Lora","Loraine","Loren","Lorena","Lorenz","Lorenza","Lorenzo","Lori","Lorine","Lorna","Lottie","Lou","Louie","Louisa","Lourdes","Louvenia","Lowell","Loy","Loyal","Loyce","Lucas","Luciano","Lucie","Lucienne","Lucile","Lucinda","Lucio","Lucious","Lucius","Lucy","Ludie","Ludwig","Lue","Luella","Luigi","Luis","Luisa","Lukas","Lula","Lulu","Luna","Lupe","Lura","Lurline","Luther","Luz","Lyda","Lydia","Lyla","Lynn","Lyric","Lysanne","Mabel","Mabelle","Mable","Mac","Macey","Maci","Macie","Mack","Mackenzie","Macy","Madaline","Madalyn","Maddison","Madeline","Madelyn","Madelynn","Madge","Madie","Madilyn","Madisen","Madison","Madisyn","Madonna","Madyson","Mae","Maegan","Maeve","Mafalda","Magali","Magdalen","Magdalena","Maggie","Magnolia","Magnus","Maia","Maida","Maiya","Major","Makayla","Makenna","Makenzie","Malachi","Malcolm","Malika","Malinda","Mallie","Mallory","Malvina","Mandy","Manley","Manuel","Manuela","Mara","Marc","Marcel","Marcelina","Marcelino","Marcella","Marcelle","Marcellus","Marcelo","Marcia","Marco","Marcos","Marcus","Margaret","Margarete","Margarett","Margaretta","Margarette","Margarita","Marge","Margie","Margot","Margret","Marguerite","Maria","Mariah","Mariam","Marian","Mariana","Mariane","Marianna","Marianne","Mariano","Maribel","Marie","Mariela","Marielle","Marietta","Marilie","Marilou","Marilyne","Marina","Mario","Marion","Marisa","Marisol","Maritza","Marjolaine","Marjorie","Marjory","Mark","Markus","Marlee","Marlen","Marlene","Marley","Marlin","Marlon","Marques","Marquis","Marquise","Marshall","Marta","Martin","Martina","Martine","Marty","Marvin","Mary","Maryam","Maryjane","Maryse","Mason","Mateo","Mathew","Mathias","Mathilde","Matilda","Matilde","Matt","Matteo","Mattie","Maud","Maude","Maudie","Maureen","Maurice","Mauricio","Maurine","Maverick","Mavis","Max","Maxie","Maxime","Maximilian","Maximillia","Maximillian","Maximo","Maximus","Maxine","Maxwell","May","Maya","Maybell","Maybelle","Maye","Maymie","Maynard","Mayra","Mazie","Mckayla","Mckenna","Mckenzie","Meagan","Meaghan","Meda","Megane","Meggie","Meghan","Mekhi","Melany","Melba","Melisa","Melissa","Mellie","Melody","Melvin","Melvina","Melyna","Melyssa","Mercedes","Meredith","Merl","Merle","Merlin","Merritt","Mertie","Mervin","Meta","Mia","Micaela","Micah","Michael","Michaela","Michale","Micheal","Michel","Michele","Michelle","Miguel","Mikayla","Mike","Mikel","Milan","Miles","Milford","Miller","Millie","Milo","Milton","Mina","Minerva","Minnie","Miracle","Mireille","Mireya","Misael","Missouri","Misty","Mitchel","Mitchell","Mittie","Modesta","Modesto","Mohamed","Mohammad","Mohammed","Moises","Mollie","Molly","Mona","Monica","Monique","Monroe","Monserrat","Monserrate","Montana","Monte","Monty","Morgan","Moriah","Morris","Mortimer","Morton","Mose","Moses","Moshe","Mossie","Mozell","Mozelle","Muhammad","Muriel","Murl","Murphy","Murray","Mustafa","Mya","Myah","Mylene","Myles","Myra","Myriam","Myrl","Myrna","Myron","Myrtice","Myrtie","Myrtis","Myrtle","Nadia","Nakia","Name","Nannie","Naomi","Naomie","Napoleon","Narciso","Nash","Nasir","Nat","Natalia","Natalie","Natasha","Nathan","Nathanael","Nathanial","Nathaniel","Nathen","Nayeli","Neal","Ned","Nedra","Neha","Neil","Nelda","Nella","Nelle","Nellie","Nels","Nelson","Neoma","Nestor","Nettie","Neva","Newell","Newton","Nia","Nicholas","Nicholaus","Nichole","Nick","Nicklaus","Nickolas","Nico","Nicola","Nicolas","Nicole","Nicolette","Nigel","Nikita","Nikki","Nikko","Niko","Nikolas","Nils","Nina","Noah","Noble","Noe","Noel","Noelia","Noemi","Noemie","Noemy","Nola","Nolan","Nona","Nora","Norbert","Norberto","Norene","Norma","Norris","Norval","Norwood","Nova","Novella","Nya","Nyah","Nyasia","Obie","Oceane","Ocie","Octavia","Oda","Odell","Odessa","Odie","Ofelia","Okey","Ola","Olaf","Ole","Olen","Oleta","Olga","Olin","Oliver","Ollie","Oma","Omari","Omer","Ona","Onie","Opal","Ophelia","Ora","Oral","Oran","Oren","Orie","Orin","Orion","Orland","Orlando","Orlo","Orpha","Orrin","Orval","Orville","Osbaldo","Osborne","Oscar","Osvaldo","Oswald","Oswaldo","Otha","Otho","Otilia","Otis","Ottilie","Ottis","Otto","Ova","Owen","Ozella","Pablo","Paige","Palma","Pamela","Pansy","Paolo","Paris","Parker","Pascale","Pasquale","Pat","Patience","Patricia","Patrick","Patsy","Pattie","Paul","Paula","Pauline","Paxton","Payton","Pearl","Pearlie","Pearline","Pedro","Peggie","Penelope","Percival","Percy","Perry","Pete","Peter","Petra","Peyton","Philip","Phoebe","Phyllis","Pierce","Pierre","Pietro","Pink","Pinkie","Piper","Polly","Porter","Precious","Presley","Preston","Price","Prince","Princess","Priscilla","Providenci","Prudence","Queen","Queenie","Quentin","Quincy","Quinn","Quinten","Quinton","Rachael","Rachel","Rachelle","Rae","Raegan","Rafael","Rafaela","Raheem","Rahsaan","Rahul","Raina","Raleigh","Ralph","Ramiro","Ramon","Ramona","Randal","Randall","Randi","Randy","Ransom","Raoul","Raphael","Raphaelle","Raquel","Rashad","Rashawn","Rasheed","Raul","Raven","Ray","Raymond","Raymundo","Reagan","Reanna","Reba","Rebeca","Rebecca","Rebeka","Rebekah","Reece","Reed","Reese","Regan","Reggie","Reginald","Reid","Reilly","Reina","Reinhold","Remington","Rene","Renee","Ressie","Reta","Retha","Retta","Reuben","Reva","Rex","Rey","Reyes","Reymundo","Reyna","Reynold","Rhea","Rhett","Rhianna","Rhiannon","Rhoda","Ricardo","Richard","Richie","Richmond","Rick","Rickey","Rickie","Ricky","Rico","Rigoberto","Riley","Rita","River","Robb","Robbie","Robert","Roberta","Roberto","Robin","Robyn","Rocio","Rocky","Rod","Roderick","Rodger","Rodolfo","Rodrick","Rodrigo","Roel","Rogelio","Roger","Rogers","Rolando","Rollin","Roma","Romaine","Roman","Ron","Ronaldo","Ronny","Roosevelt","Rory","Rosa","Rosalee","Rosalia","Rosalind","Rosalinda","Rosalyn","Rosamond","Rosanna","Rosario","Roscoe","Rose","Rosella","Roselyn","Rosemarie","Rosemary","Rosendo","Rosetta","Rosie","Rosina","Roslyn","Ross","Rossie","Rowan","Rowena","Rowland","Roxane","Roxanne","Roy","Royal","Royce","Rozella","Ruben","Rubie","Ruby","Rubye","Rudolph","Rudy","Rupert","Russ","Russel","Russell","Rusty","Ruth","Ruthe","Ruthie","Ryan","Ryann","Ryder","Rylan","Rylee","Ryleigh","Ryley","Sabina","Sabrina","Sabryna","Sadie","Sadye","Sage","Saige","Sallie","Sally","Salma","Salvador","Salvatore","Sam","Samanta","Samantha","Samara","Samir","Sammie","Sammy","Samson","Sandra","Sandrine","Sandy","Sanford","Santa","Santiago","Santina","Santino","Santos","Sarah","Sarai","Sarina","Sasha","Saul","Savanah","Savanna","Savannah","Savion","Scarlett","Schuyler","Scot","Scottie","Scotty","Seamus","Sean","Sebastian","Sedrick","Selena","Selina","Selmer","Serena","Serenity","Seth","Shad","Shaina","Shakira","Shana","Shane","Shanel","Shanelle","Shania","Shanie","Shaniya","Shanna","Shannon","Shanny","Shanon","Shany","Sharon","Shaun","Shawn","Shawna","Shaylee","Shayna","Shayne","Shea","Sheila","Sheldon","Shemar","Sheridan","Sherman","Sherwood","Shirley","Shyann","Shyanne","Sibyl","Sid","Sidney","Sienna","Sierra","Sigmund","Sigrid","Sigurd","Silas","Sim","Simeon","Simone","Sincere","Sister","Skye","Skyla","Skylar","Sofia","Soledad","Solon","Sonia","Sonny","Sonya","Sophia","Sophie","Spencer","Stacey","Stacy","Stan","Stanford","Stanley","Stanton","Stefan","Stefanie","Stella","Stephan","Stephania","Stephanie","Stephany","Stephen","Stephon","Sterling","Steve","Stevie","Stewart","Stone","Stuart","Summer","Sunny","Susan","Susana","Susanna","Susie","Suzanne","Sven","Syble","Sydnee","Sydney","Sydni","Sydnie","Sylvan","Sylvester","Sylvia","Tabitha","Tad","Talia","Talon","Tamara","Tamia","Tania","Tanner","Tanya","Tara","Taryn","Tate","Tatum","Tatyana","Taurean","Tavares","Taya","Taylor","Teagan","Ted","Telly","Terence","Teresa","Terrance","Terrell","Terrence","Terrill","Terry","Tess","Tessie","Tevin","Thad","Thaddeus","Thalia","Thea","Thelma","Theo","Theodora","Theodore","Theresa","Therese","Theresia","Theron","Thomas","Thora","Thurman","Tia","Tiana","Tianna","Tiara","Tierra","Tiffany","Tillman","Timmothy","Timmy","Timothy","Tina","Tito","Titus","Tobin","Toby","Tod","Tom","Tomas","Tomasa","Tommie","Toney","Toni","Tony","Torey","Torrance","Torrey","Toy","Trace","Tracey","Tracy","Travis","Travon","Tre","Tremaine","Tremayne","Trent","Trenton","Tressa","Tressie","Treva","Trever","Trevion","Trevor","Trey","Trinity","Trisha","Tristian","Tristin","Triston","Troy","Trudie","Trycia","Trystan","Turner","Twila","Tyler","Tyra","Tyree","Tyreek","Tyrel","Tyrell","Tyrese","Tyrique","Tyshawn","Tyson","Ubaldo","Ulices","Ulises","Una","Unique","Urban","Uriah","Uriel","Ursula","Vada","Valentin","Valentina","Valentine","Valerie","Vallie","Van","Vance","Vanessa","Vaughn","Veda","Velda","Vella","Velma","Velva","Vena","Verda","Verdie","Vergie","Verla","Verlie","Vern","Verna","Verner","Vernice","Vernie","Vernon","Verona","Veronica","Vesta","Vicenta","Vicente","Vickie","Vicky","Victor","Victoria","Vida","Vidal","Vilma","Vince","Vincent","Vincenza","Vincenzo","Vinnie","Viola","Violet","Violette","Virgie","Virgil","Virginia","Virginie","Vita","Vito","Viva","Vivian","Viviane","Vivianne","Vivien","Vivienne","Vladimir","Wade","Waino","Waldo","Walker","Wallace","Walter","Walton","Wanda","Ward","Warren","Watson","Wava","Waylon","Wayne","Webster","Weldon","Wellington","Wendell","Wendy","Werner","Westley","Weston","Whitney","Wilber","Wilbert","Wilburn","Wiley","Wilford","Wilfred","Wilfredo","Wilfrid","Wilhelm","Wilhelmine","Will","Willa","Willard","William","Willie","Willis","Willow","Willy","Wilma","Wilmer","Wilson","Wilton","Winfield","Winifred","Winnifred","Winona","Winston","Woodrow","Wyatt","Wyman","Xander","Xavier","Xzavier","Yadira","Yasmeen","Yasmin","Yasmine","Yazmin","Yesenia","Yessenia","Yolanda","Yoshiko","Yvette","Yvonne","Zachariah","Zachary","Zachery","Zack","Zackary","Zackery","Zakary","Zander","Zane","Zaria","Zechariah","Zelda","Zella","Zelma","Zena","Zetta","Zion","Zita","Zoe","Zoey","Zoie","Zoila","Zola","Zora","Zula"],
last_name:["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Eichmann","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Friesen","Fritsch","Funk","Gaylord","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"],prefix:["Mr.","Mrs.","Ms.","Miss","Dr."],suffix:["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"],title:{descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liason","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]},en.phone_number={formats:["###-###-####","(###) ###-####","1-###-###-####","###.###.####","###-###-####","(###) ###-####","1-###-###-####","###.###.####","###-###-#### x###","(###) ###-#### x###","1-###-###-#### x###","###.###.#### x###","###-###-#### x####","(###) ###-#### x####","1-###-###-#### x####","###.###.#### x####","###-###-#### x#####","(###) ###-#### x#####","1-###-###-#### x#####","###.###.#### x#####"]},en.cell_phone={formats:["###-###-####","(###) ###-####","1-###-###-####","###.###.####"]},en.business={credit_card_numbers:["1234-2121-1221-1211","1212-1221-1121-1234","1211-1221-1234-2201","1228-1221-1221-1431"],credit_card_expiry_dates:["2011-10-12","2012-11-12","2015-11-11","2013-9-12"],credit_card_types:["visa","mastercard","americanexpress","discover"]},en.commerce={color:["red","green","blue","yellow","purple","mint green","teal","white","black","orange","pink","grey","maroon","violet","turquoise","tan","sky blue","salmon","plum","orchid","olive","magenta","lime","ivory","indigo","gold","fuchsia","cyan","azure","lavender","silver"],department:["Books","Movies","Music","Games","Electronics","Computers","Home","Garden","Tools","Grocery","Health","Beauty","Toys","Kids","Baby","Clothing","Shoes","Jewelery","Sports","Outdoors","Automotive","Industrial"],product_name:{adjective:["Small","Ergonomic","Rustic","Intelligent","Gorgeous","Incredible","Fantastic","Practical","Sleek","Awesome"],material:["Steel","Wooden","Concrete","Plastic","Cotton","Granite","Rubber"],product:["Chair","Car","Computer","Gloves","Pants","Shirt","Table","Shoes","Hat"]}},en.team={creature:["ants","bats","bears","bees","birds","buffalo","cats","chickens","cattle","dogs","dolphins","ducks","elephants","fishes","foxes","frogs","geese","goats","horses","kangaroos","lions","monkeys","owls","oxen","penguins","people","pigs","rabbits","sheep","tigers","whales","wolves","zebras","banshees","crows","black cats","chimeras","ghosts","conspirators","dragons","dwarves","elves","enchanters","exorcists","sons","foes","giants","gnomes","goblins","gooses","griffins","lycanthropes","nemesis","ogres","oracles","prophets","sorcerors","spiders","spirits","vampires","warlocks","vixens","werewolves","witches","worshipers","zombies","druids"],name:["#{Address.state} #{creature}"]},en.hacker={abbreviation:["TCP","HTTP","SDD","RAM","GB","CSS","SSL","AGP","SQL","FTP","PCI","AI","ADP","RSS","XML","EXE","COM","HDD","THX","SMTP","SMS","USB","PNG","SAS","IB","SCSI","JSON","XSS","JBOD"],adjective:["auxiliary","primary","back-end","digital","open-source","virtual","cross-platform","redundant","online","haptic","multi-byte","bluetooth","wireless","1080p","neural","optical","solid state","mobile"],noun:["driver","protocol","bandwidth","panel","microchip","program","port","card","array","interface","system","sensor","firewall","hard drive","pixel","alarm","feed","monitor","application","transmitter","bus","circuit","capacitor","matrix"],verb:["back up","bypass","hack","override","compress","copy","navigate","index","connect","generate","quantify","calculate","synthesize","input","transmit","program","reboot","parse"],ingverb:["backing up","bypassing","hacking","overriding","compressing","copying","navigating","indexing","connecting","generating","quantifying","calculating","synthesizing","transmitting","programming","parsing"]},en.app={name:["Redhold","Treeflex","Trippledex","Kanlam","Bigtax","Daltfresh","Toughjoyfax","Mat Lam Tam","Otcom","Tres-Zap","Y-Solowarm","Tresom","Voltsillam","Biodex","Greenlam","Viva","Matsoft","Temp","Zoolab","Subin","Rank","Job","Stringtough","Tin","It","Home Ing","Zamit","Sonsing","Konklab","Alpha","Latlux","Voyatouch","Alphazap","Holdlamis","Zaam-Dox","Sub-Ex","Quo Lux","Bamity","Ventosanzap","Lotstring","Hatity","Tempsoft","Overhold","Fixflex","Konklux","Zontrax","Tampflex","Span","Namfix","Transcof","Stim","Fix San","Sonair","Stronghold","Fintone","Y-find","Opela","Lotlux","Ronstring","Zathin","Duobam","Keylex"],version:["0.#.#","0.##","#.##","#.#","#.#.#"],author:["#{Name.name}","#{Company.name}"]},en.finance={},en.finance.account_type=["Checking","Savings","Money Market","Investment","Home Loan","Credit Card","Auto Loan","Personal Loan"],en.finance.transaction_type=["deposit","withdrawal","payment","invoice"],en.finance.currency={"UAE Dirham":{code:"AED",symbol:""},Afghani:{code:"AFN",symbol:"؋"},Lek:{code:"ALL",symbol:"Lek"},"Armenian Dram":{code:"AMD",symbol:""},"Netherlands Antillian Guilder":{code:"ANG",symbol:"ƒ"},Kwanza:{code:"AOA",symbol:""},"Argentine Peso":{code:"ARS",symbol:"$"},"Australian Dollar":{code:"AUD",symbol:"$"},"Aruban Guilder":{code:"AWG",symbol:"ƒ"},"Azerbaijanian Manat":{code:"AZN",symbol:"ман"},"Convertible Marks":{code:"BAM",symbol:"KM"},"Barbados Dollar":{code:"BBD",symbol:"$"},Taka:{code:"BDT",symbol:""},"Bulgarian Lev":{code:"BGN",symbol:"лв"},"Bahraini Dinar":{code:"BHD",symbol:""},"Burundi Franc":{code:"BIF",symbol:""},"Bermudian Dollar (customarily known as Bermuda Dollar)":{code:"BMD",symbol:"$"},"Brunei Dollar":{code:"BND",symbol:"$"},"Boliviano Mvdol":{code:"BOB BOV",symbol:"$b"},"Brazilian Real":{code:"BRL",symbol:"R$"},"Bahamian Dollar":{code:"BSD",symbol:"$"},Pula:{code:"BWP",symbol:"P"},"Belarussian Ruble":{code:"BYR",symbol:"p."},"Belize Dollar":{code:"BZD",symbol:"BZ$"},"Canadian Dollar":{code:"CAD",symbol:"$"},"Congolese Franc":{code:"CDF",symbol:""},"Swiss Franc":{code:"CHF",symbol:"CHF"},"Chilean Peso Unidades de fomento":{code:"CLP CLF",symbol:"$"},"Yuan Renminbi":{code:"CNY",symbol:"¥"},"Colombian Peso Unidad de Valor Real":{code:"COP COU",symbol:"$"},"Costa Rican Colon":{code:"CRC",symbol:"₡"},"Cuban Peso Peso Convertible":{code:"CUP CUC",symbol:"₱"},"Cape Verde Escudo":{code:"CVE",symbol:""},"Czech Koruna":{code:"CZK",symbol:"Kč"},"Djibouti Franc":{code:"DJF",symbol:""},"Danish Krone":{code:"DKK",symbol:"kr"},"Dominican Peso":{code:"DOP",symbol:"RD$"},"Algerian Dinar":{code:"DZD",symbol:""},Kroon:{code:"EEK",symbol:""},"Egyptian Pound":{code:"EGP",symbol:"£"},Nakfa:{code:"ERN",symbol:""},"Ethiopian Birr":{code:"ETB",symbol:""},Euro:{code:"EUR",symbol:"€"},"Fiji Dollar":{code:"FJD",symbol:"$"},"Falkland Islands Pound":{code:"FKP",symbol:"£"},"Pound Sterling":{code:"GBP",symbol:"£"},Lari:{code:"GEL",symbol:""},Cedi:{code:"GHS",symbol:""},"Gibraltar Pound":{code:"GIP",symbol:"£"},Dalasi:{code:"GMD",symbol:""},"Guinea Franc":{code:"GNF",symbol:""},Quetzal:{code:"GTQ",symbol:"Q"},"Guyana Dollar":{code:"GYD",symbol:"$"},"Hong Kong Dollar":{code:"HKD",symbol:"$"},Lempira:{code:"HNL",symbol:"L"},"Croatian Kuna":{code:"HRK",symbol:"kn"},"Gourde US Dollar":{code:"HTG USD",symbol:""},Forint:{code:"HUF",symbol:"Ft"},Rupiah:{code:"IDR",symbol:"Rp"},"New Israeli Sheqel":{code:"ILS",symbol:"₪"},"Indian Rupee":{code:"INR",symbol:""},"Indian Rupee Ngultrum":{code:"INR BTN",symbol:""},"Iraqi Dinar":{code:"IQD",symbol:""},"Iranian Rial":{code:"IRR",symbol:"﷼"},"Iceland Krona":{code:"ISK",symbol:"kr"},"Jamaican Dollar":{code:"JMD",symbol:"J$"},"Jordanian Dinar":{code:"JOD",symbol:""},Yen:{code:"JPY",symbol:"¥"},"Kenyan Shilling":{code:"KES",symbol:""},Som:{code:"KGS",symbol:"лв"},Riel:{code:"KHR",symbol:"៛"},"Comoro Franc":{code:"KMF",symbol:""},"North Korean Won":{code:"KPW",symbol:"₩"},Won:{code:"KRW",symbol:"₩"},"Kuwaiti Dinar":{code:"KWD",symbol:""},"Cayman Islands Dollar":{code:"KYD",symbol:"$"},Tenge:{code:"KZT",symbol:"лв"},Kip:{code:"LAK",symbol:"₭"},"Lebanese Pound":{code:"LBP",symbol:"£"},"Sri Lanka Rupee":{code:"LKR",symbol:"₨"},"Liberian Dollar":{code:"LRD",symbol:"$"},"Lithuanian Litas":{code:"LTL",symbol:"Lt"},"Latvian Lats":{code:"LVL",symbol:"Ls"},"Libyan Dinar":{code:"LYD",symbol:""},"Moroccan Dirham":{code:"MAD",symbol:""},"Moldovan Leu":{code:"MDL",symbol:""},"Malagasy Ariary":{code:"MGA",symbol:""},Denar:{code:"MKD",symbol:"ден"},Kyat:{code:"MMK",symbol:""},Tugrik:{code:"MNT",symbol:"₮"},Pataca:{code:"MOP",symbol:""},Ouguiya:{code:"MRO",symbol:""},"Mauritius Rupee":{code:"MUR",symbol:"₨"},Rufiyaa:{code:"MVR",symbol:""},Kwacha:{code:"MWK",symbol:""},"Mexican Peso Mexican Unidad de Inversion (UDI)":{code:"MXN MXV",symbol:"$"},"Malaysian Ringgit":{code:"MYR",symbol:"RM"},Metical:{code:"MZN",symbol:"MT"},Naira:{code:"NGN",symbol:"₦"},"Cordoba Oro":{code:"NIO",symbol:"C$"},"Norwegian Krone":{code:"NOK",symbol:"kr"},"Nepalese Rupee":{code:"NPR",symbol:"₨"},"New Zealand Dollar":{code:"NZD",symbol:"$"},"Rial Omani":{code:"OMR",symbol:"﷼"},"Balboa US Dollar":{code:"PAB USD",symbol:"B/."},"Nuevo Sol":{code:"PEN",symbol:"S/."},Kina:{code:"PGK",symbol:""},"Philippine Peso":{code:"PHP",symbol:"Php"},"Pakistan Rupee":{code:"PKR",symbol:"₨"},Zloty:{code:"PLN",symbol:"zł"},Guarani:{code:"PYG",symbol:"Gs"},"Qatari Rial":{code:"QAR",symbol:"﷼"},"New Leu":{code:"RON",symbol:"lei"},"Serbian Dinar":{code:"RSD",symbol:"Дин."},"Russian Ruble":{code:"RUB",symbol:"руб"},"Rwanda Franc":{code:"RWF",symbol:""},"Saudi Riyal":{code:"SAR",symbol:"﷼"},"Solomon Islands Dollar":{code:"SBD",symbol:"$"},"Seychelles Rupee":{code:"SCR",symbol:"₨"},"Sudanese Pound":{code:"SDG",symbol:""},"Swedish Krona":{code:"SEK",symbol:"kr"},"Singapore Dollar":{code:"SGD",symbol:"$"},"Saint Helena Pound":{code:"SHP",symbol:"£"},Leone:{code:"SLL",symbol:""},"Somali Shilling":{code:"SOS",symbol:"S"},"Surinam Dollar":{code:"SRD",symbol:"$"},Dobra:{code:"STD",symbol:""},"El Salvador Colon US Dollar":{code:"SVC USD",symbol:"$"},"Syrian Pound":{code:"SYP",symbol:"£"},Lilangeni:{code:"SZL",symbol:""},Baht:{code:"THB",symbol:"฿"},Somoni:{code:"TJS",symbol:""},Manat:{code:"TMT",symbol:""},"Tunisian Dinar":{code:"TND",symbol:""},"Pa'anga":{code:"TOP",symbol:""},"Turkish Lira":{code:"TRY",symbol:"TL"},"Trinidad and Tobago Dollar":{code:"TTD",symbol:"TT$"},"New Taiwan Dollar":{code:"TWD",symbol:"NT$"},"Tanzanian Shilling":{code:"TZS",symbol:""},Hryvnia:{code:"UAH",symbol:"₴"},"Uganda Shilling":{code:"UGX",symbol:""},"US Dollar":{code:"USD",symbol:"$"},"Peso Uruguayo Uruguay Peso en Unidades Indexadas":{code:"UYU UYI",symbol:"$U"},"Uzbekistan Sum":{code:"UZS",symbol:"лв"},"Bolivar Fuerte":{code:"VEF",symbol:"Bs"},Dong:{code:"VND",symbol:"₫"},Vatu:{code:"VUV",symbol:""},Tala:{code:"WST",symbol:""},"CFA Franc BEAC":{code:"XAF",symbol:""},Silver:{code:"XAG",symbol:""},Gold:{code:"XAU",symbol:""},"Bond Markets Units European Composite Unit (EURCO)":{code:"XBA",symbol:""},"European Monetary Unit (E.M.U.-6)":{code:"XBB",symbol:""},"European Unit of Account 9(E.U.A.-9)":{code:"XBC",symbol:""},"European Unit of Account 17(E.U.A.-17)":{code:"XBD",symbol:""},"East Caribbean Dollar":{code:"XCD",symbol:"$"},SDR:{code:"XDR",symbol:""},"UIC-Franc":{code:"XFU",symbol:""},"CFA Franc BCEAO":{code:"XOF",symbol:""},Palladium:{code:"XPD",symbol:""},"CFP Franc":{code:"XPF",symbol:""},Platinum:{code:"XPT",symbol:""},"Codes specifically reserved for testing purposes":{code:"XTS",symbol:""},"Yemeni Rial":{code:"YER",symbol:"﷼"},Rand:{code:"ZAR",symbol:"R"},"Rand Loti":{code:"ZAR LSL",symbol:""},"Rand Namibia Dollar":{code:"ZAR NAD",symbol:""},"Zambian Kwacha":{code:"ZMK",symbol:""},"Zimbabwe Dollar":{code:"ZWL",symbol:""}};

},{}],96:[function(require,module,exports){
var en_AU={};module.exports=en_AU,en_AU.title="Australia (English)",en_AU.name={first_name:["William","Jack","Oliver","Joshua","Thomas","Lachlan","Cooper","Noah","Ethan","Lucas","James","Samuel","Jacob","Liam","Alexander","Benjamin","Max","Isaac","Daniel","Riley","Ryan","Charlie","Tyler","Jake","Matthew","Xavier","Harry","Jayden","Nicholas","Harrison","Levi","Luke","Adam","Henry","Aiden","Dylan","Oscar","Michael","Jackson","Logan","Joseph","Blake","Nathan","Connor","Elijah","Nate","Archie","Bailey","Marcus","Cameron","Jordan","Zachary","Caleb","Hunter","Ashton","Toby","Aidan","Hayden","Mason","Hamish","Edward","Angus","Eli","Sebastian","Christian","Patrick","Andrew","Anthony","Luca","Kai","Beau","Alex","George","Callum","Finn","Zac","Mitchell","Jett","Jesse","Gabriel","Leo","Declan","Charles","Jasper","Jonathan","Aaron","Hugo","David","Christopher","Chase","Owen","Justin","Ali","Darcy","Lincoln","Cody","Phoenix","Sam","John","Joel","Isabella","Ruby","Chloe","Olivia","Charlotte","Mia","Lily","Emily","Ella","Sienna","Sophie","Amelia","Grace","Ava","Zoe","Emma","Sophia","Matilda","Hannah","Jessica","Lucy","Georgia","Sarah","Abigail","Zara","Eva","Scarlett","Jasmine","Chelsea","Lilly","Ivy","Isla","Evie","Isabelle","Maddison","Layla","Summer","Annabelle","Alexis","Elizabeth","Bella","Holly","Lara","Madison","Alyssa","Maya","Tahlia","Claire","Hayley","Imogen","Jade","Ellie","Sofia","Addison","Molly","Phoebe","Alice","Savannah","Gabriella","Kayla","Mikayla","Abbey","Eliza","Willow","Alexandra","Poppy","Samantha","Stella","Amy","Amelie","Anna","Piper","Gemma","Isabel","Victoria","Stephanie","Caitlin","Heidi","Paige","Rose","Amber","Audrey","Claudia","Taylor","Madeline","Angelina","Natalie","Charli","Lauren","Ashley","Violet","Mackenzie","Abby","Skye","Lillian","Alana","Lola","Leah","Eve","Kiara"],last_name:["Smith","Jones","Williams","Brown","Wilson","Taylor","Johnson","White","Martin","Anderson","Thompson","Nguyen","Thomas","Walker","Harris","Lee","Ryan","Robinson","Kelly","King","Davis","Wright","Evans","Roberts","Green","Hall","Wood","Jackson","Clarke","Patel","Khan","Lewis","James","Phillips","Mason","Mitchell","Rose","Davies","Rodriguez","Cox","Alexander","Garden","Campbell","Johnston","Moore","Smyth","O'neill","Doherty","Stewart","Quinn","Murphy","Graham","Mclaughlin","Hamilton","Murray","Hughes","Robertson","Thomson","Scott","Macdonald","Reid","Clark","Ross","Young","Watson","Paterson","Morrison","Morgan","Griffiths","Edwards","Rees","Jenkins","Owen","Price","Moss","Richards","Abbott","Adams","Armstrong","Bahringer","Bailey","Barrows","Bartell","Bartoletti","Barton","Bauch","Baumbach","Bayer","Beahan","Beatty","Becker","Beier","Berge","Bergstrom","Bode","Bogan","Borer","Bosco","Botsford","Boyer","Boyle","Braun","Bruen","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Connelly","Conroy","Corkery","Cormier","Corwin","Cronin","Crooks","Cruickshank","Cummings","D'amore","Daniel","Dare","Daugherty","Dickens","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","Durgan","Ebert","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feil","Ferry","Fisher","Flatley","Gibson","Gleason","Glover","Goldner","Goodwin","Grady","Grant","Greenfelder","Greenholt","Grimes","Gutmann","Hackett","Hahn","Haley","Hammes","Hand","Hane","Hansen","Harber","Hartmann","Harvey","Hayes","Heaney","Heathcote","Heller","Hermann","Hermiston","Hessel","Hettinger","Hickle","Hill","Hills","Hoppe","Howe","Howell","Hudson","Huel","Hyatt","Jacobi","Jacobs","Jacobson","Jerde","Johns","Keeling","Kemmer","Kessler","Kiehn","Kirlin","Klein","Koch","Koelpin","Kohler","Koss","Kovacek","Kreiger","Kris","Kuhlman","Kuhn","Kulas","Kunde","Kutch","Lakin","Lang","Langworth","Larkin","Larson","Leannon","Leffler","Little","Lockman","Lowe","Lynch","Mann","Marks","Marvin","Mayer","Mccullough","Mcdermott","Mckenzie","Miller","Mills","Monahan","Morissette","Mueller","Muller","Nader","Nicolas","Nolan","O'connell","O'conner","O'hara","O'keefe","Olson","O'reilly","Parisian","Parker","Quigley","Reilly","Reynolds","Rice","Ritchie","Rohan","Rolfson","Rowe","Russel","Rutherford","Sanford","Sauer","Schmidt","Schmitt","Schneider","Schroeder","Schultz","Shields","Smitham","Spencer","Stanton","Stark","Stokes","Swift","Tillman","Towne","Tremblay","Tromp","Turcotte","Turner","Walsh","Walter","Ward","Waters","Weber","Welch","West","Wilderman","Wilkinson","Williamson","Windler","Wolf"]},en_AU.company={suffix:["Pty Ltd","and Sons","Corp","Group","Brothers","Partners"]},en_AU.internet={domain_suffix:["com.au","com","net.au","net","org.au","org"]},en_AU.address={state_abbr:["NSW","QLD","NT","SA","WA","TAS","ACT","VIC"],state:["New South Wales","Queensland","Northern Territory","South Australia","Western Australia","Tasmania","Australian Capital Territory","Victoria"],postcode:["0###","2###","3###","4###","5###","6###","7###"],building_number:["####","###","##"],street_suffix:["Avenue","Boulevard","Circle","Circuit","Court","Crescent","Crest","Drive","Estate Dr","Grove","Hill","Island","Junction","Knoll","Lane","Loop","Mall","Manor","Meadow","Mews","Parade","Parkway","Pass","Place","Plaza","Ridge","Road","Run","Square","Station St","Street","Summit","Terrace","Track","Trail","View Rd","Way"],default_country:["Australia"]},en_AU.phone_number={formats:["0# #### ####","+61 # #### ####","04## ### ###","+61 4## ### ###"]};

},{}],97:[function(require,module,exports){
var en_BORK={};module.exports=en_BORK,en_BORK.title="Bork (English)",en_BORK.lorem={words:["Boot","I","Nu","Nur","Tu","Um","a","becoose-a","boot","bork","burn","chuuses","cumplete-a","cun","cunseqooences","curcoomstunces","dee","deeslikes","denuoonceeng","desures","du","eccuoont","ectooel","edfuntege-a","efueeds","egeeen","ell","ere-a","feend","foolt","frum","geefe-a","gesh","greet","heem","heppeeness","hes","hoo","hoomun","idea","ifer","in","incuoonter","injuy","itselff","ixcept","ixemple-a","ixerceese-a","ixpleeen","ixplurer","ixpuoond","ixtremely","knoo","lebureeuoos","lufes","meestekee","mester-booeelder","moost","mun","nu","nut","oobteeen","oocceseeunelly","ooccoor","ooff","oone-a","oor","peeen","peeenffool","physeecel","pleesoore-a","poorsooe-a","poorsooes","preeesing","prucoore-a","prudooces","reeght","reshunelly","resooltunt","sume-a","teecheengs","teke-a","thees","thet","thuse-a","treefiel","troot","tu","tueel","und","undertekes","unnuyeeng","uny","unyune-a","us","veell","veet","ves","vheech","vhu","yuoo","zee","zeere-a"]};

},{}],98:[function(require,module,exports){
var en_CA={};module.exports=en_CA,en_CA.title="Canada (English)",en_CA.address={postcode:["?#? #?#","?#?#?#"],state:["Alberta","British Columbia","Manitoba","New Brunswick","Newfoundland and Labrador","Nova Scotia","Northwest Territories","Nunavut","Ontario","Prince Edward Island","Quebec","Saskatchewan","Yukon"],state_abbr:["AB","BC","MB","NB","NL","NS","NU","NT","ON","PE","QC","SK","YK"],default_country:["Canada"]},en_CA.internet={free_email:["gmail.com","yahoo.ca","hotmail.com"],domain_suffix:["ca","com","biz","info","name","net","org"]},en_CA.phone_number={formats:["###-###-####","(###)###-####","###.###.####","1-###-###-####","###-###-#### x###","(###)###-#### x###","1-###-###-#### x###","###.###.#### x###","###-###-#### x####","(###)###-#### x####","1-###-###-#### x####","###.###.#### x####","###-###-#### x#####","(###)###-#### x#####","1-###-###-#### x#####","###.###.#### x#####"]};

},{}],99:[function(require,module,exports){
var en_GB={};module.exports=en_GB,en_GB.title="Great Britain (English)",en_GB.address={postcode:"/[A-PR-UWYZ][A-HK-Y]?[0-9][ABEHMNPRVWXY0-9]? [0-9][ABD-HJLN-UW-Z]{2}/",county:["Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"],uk_country:["England","Scotland","Wales","Northern Ireland"],default_country:["England","Scotland","Wales","Northern Ireland"]},en_GB.internet={domain_suffix:["co.uk","com","biz","info","name"]},en_GB.phone_number={formats:["01#### #####","01### ######","01#1 ### ####","011# ### ####","02# #### ####","03## ### ####","055 #### ####","056 #### ####","0800 ### ####","08## ### ####","09## ### ####","016977 ####","01### #####","0500 ######","0800 ######"]},en_GB.cell_phone={formats:["074## ######","075## ######","076## ######","077## ######","078## ######","079## ######"]};

},{}],100:[function(require,module,exports){
var en_IND={};module.exports=en_IND,en_IND.title="India (English)",en_IND.name={first_name:["Aadrika","Aanandinii","Aaratrika","Aarya","Arya","Aashritha","Aatmaja","Atmaja","Abhaya","Adwitiya","Agrata","Ahilya","Ahalya","Aishani","Akshainie","Akshata","Akshita","Akula","Ambar","Amodini","Amrita","Amritambu","Anala","Anamika","Ananda","Anandamayi","Ananta","Anila","Anjali","Anjushri","Anjushree","Annapurna","Anshula","Anuja","Anusuya","Anasuya","Anasooya","Anwesha","Apsara","Aruna","Asha","Aasa","Aasha","Aslesha","Atreyi","Atreyee","Avani","Abani","Avantika","Ayushmati","Baidehi","Vaidehi","Bala","Baala","Balamani","Basanti","Vasanti","Bela","Bhadra","Bhagirathi","Bhagwanti","Bhagwati","Bhamini","Bhanumati","Bhaanumati","Bhargavi","Bhavani","Bhilangana","Bilwa","Bilva","Buddhana","Chakrika","Chanda","Chandi","Chandni","Chandini","Chandani","Chandra","Chandira","Chandrabhaga","Chandrakala","Chandrakin","Chandramani","Chandrani","Chandraprabha","Chandraswaroopa","Chandravati","Chapala","Charumati","Charvi","Chatura","Chitrali","Chitramala","Chitrangada","Daksha","Dakshayani","Damayanti","Darshwana","Deepali","Dipali","Deeptimoyee","Deeptimayee","Devangana","Devani","Devasree","Devi","Daevi","Devika","Daevika","Dhaanyalakshmi","Dhanalakshmi","Dhana","Dhanadeepa","Dhara","Dharani","Dharitri","Dhatri","Diksha","Deeksha","Divya","Draupadi","Dulari","Durga","Durgeshwari","Ekaparnika","Elakshi","Enakshi","Esha","Eshana","Eshita","Gautami","Gayatri","Geeta","Geetanjali","Gitanjali","Gemine","Gemini","Girja","Girija","Gita","Hamsini","Harinakshi","Harita","Heema","Himadri","Himani","Hiranya","Indira","Jaimini","Jaya","Jyoti","Jyotsana","Kali","Kalinda","Kalpana","Kalyani","Kama","Kamala","Kamla","Kanchan","Kanishka","Kanti","Kashyapi","Kumari","Kumuda","Lakshmi","Laxmi","Lalita","Lavanya","Leela","Lila","Leela","Madhuri","Malti","Malati","Mandakini","Mandaakin","Mangala","Mangalya","Mani","Manisha","Manjusha","Meena","Mina","Meenakshi","Minakshi","Menka","Menaka","Mohana","Mohini","Nalini","Nikita","Ojaswini","Omana","Oormila","Urmila","Opalina","Opaline","Padma","Parvati","Poornima","Purnima","Pramila","Prasanna","Preity","Prema","Priya","Priyala","Pushti","Radha","Rageswari","Rageshwari","Rajinder","Ramaa","Rati","Rita","Rohana","Rukhmani","Rukmin","Rupinder","Sanya","Sarada","Sharda","Sarala","Sarla","Saraswati","Sarisha","Saroja","Shakti","Shakuntala","Shanti","Sharmila","Shashi","Shashikala","Sheela","Shivakari","Shobhana","Shresth","Shresthi","Shreya","Shreyashi","Shridevi","Shrishti","Shubha","Shubhaprada","Siddhi","Sitara","Sloka","Smita","Smriti","Soma","Subhashini","Subhasini","Sucheta","Sudeva","Sujata","Sukanya","Suma","Suma","Sumitra","Sunita","Suryakantam","Sushma","Swara","Swarnalata","Sweta","Shwet","Tanirika","Tanushree","Tanushri","Tanushri","Tanya","Tara","Trisha","Uma","Usha","Vaijayanti","Vaijayanthi","Baijayanti","Vaishvi","Vaishnavi","Vaishno","Varalakshmi","Vasudha","Vasundhara","Veda","Vedanshi","Vidya","Vimala","Vrinda","Vrund","Aadi","Aadidev","Aadinath","Aaditya","Aagam","Aagney","Aamod","Aanandaswarup","Anand Swarup","Aanjaneya","Anjaneya","Aaryan","Aryan","Aatmaj","Aatreya","Aayushmaan","Aayushman","Abhaidev","Abhaya","Abhirath","Abhisyanta","Acaryatanaya","Achalesvara","Acharyanandana","Acharyasuta","Achintya","Achyut","Adheesh","Adhiraj","Adhrit","Adikavi","Adinath","Aditeya","Aditya","Adityanandan","Adityanandana","Adripathi","Advaya","Agasti","Agastya","Agneya","Aagneya","Agnimitra","Agniprava","Agnivesh","Agrata","Ajit","Ajeet","Akroor","Akshaj","Akshat","Akshayakeerti","Alok","Aalok","Amaranaath","Amarnath","Amaresh","Ambar","Ameyatma","Amish","Amogh","Amrit","Anaadi","Anagh","Anal","Anand","Aanand","Anang","Anil","Anilaabh","Anilabh","Anish","Ankal","Anunay","Anurag","Anuraag","Archan","Arindam","Arjun","Arnesh","Arun","Ashlesh","Ashok","Atmanand","Atmananda","Avadhesh","Baalaaditya","Baladitya","Baalagopaal","Balgopal","Balagopal","Bahula","Bakula","Bala","Balaaditya","Balachandra","Balagovind","Bandhu","Bandhul","Bankim","Bankimchandra","Bhadrak","Bhadraksh","Bhadran","Bhagavaan","Bhagvan","Bharadwaj","Bhardwaj","Bharat","Bhargava","Bhasvan","Bhaasvan","Bhaswar","Bhaaswar","Bhaumik","Bhaves","Bheeshma","Bhisham","Bhishma","Bhima","Bhoj","Bhramar","Bhudev","Bhudeva","Bhupati","Bhoopati","Bhoopat","Bhupen","Bhushan","Bhooshan","Bhushit","Bhooshit","Bhuvanesh","Bhuvaneshwar","Bilva","Bodhan","Brahma","Brahmabrata","Brahmanandam","Brahmaanand","Brahmdev","Brajendra","Brajesh","Brijesh","Birjesh","Budhil","Chakor","Chakradhar","Chakravartee","Chakravarti","Chanakya","Chaanakya","Chandak","Chandan","Chandra","Chandraayan","Chandrabhan","Chandradev","Chandraketu","Chandramauli","Chandramohan","Chandran","Chandranath","Chapal","Charak","Charuchandra","Chaaruchandra","Charuvrat","Chatur","Chaturaanan","Chaturbhuj","Chetan","Chaten","Chaitan","Chetanaanand","Chidaakaash","Chidaatma","Chidambar","Chidambaram","Chidananda","Chinmayanand","Chinmayananda","Chiranjeev","Chiranjeeve","Chitraksh","Daiwik","Daksha","Damodara","Dandak","Dandapaani","Darshan","Datta","Dayaamay","Dayamayee","Dayaananda","Dayaanidhi","Kin","Deenabandhu","Deepan","Deepankar","Dipankar","Deependra","Dipendra","Deepesh","Dipesh","Deeptanshu","Deeptendu","Diptendu","Deeptiman","Deeptimoy","Deeptimay","Dev","Deb","Devadatt","Devagya","Devajyoti","Devak","Devdan","Deven","Devesh","Deveshwar","Devi","Devvrat","Dhananjay","Dhanapati","Dhanpati","Dhanesh","Dhanu","Dhanvin","Dharmaketu","Dhruv","Dhyanesh","Dhyaneshwar","Digambar","Digambara","Dinakar","Dinkar","Dinesh","Divaakar","Divakar","Deevakar","Divjot","Dron","Drona","Dwaipayan","Dwaipayana","Eekalabya","Ekalavya","Ekaksh","Ekaaksh","Ekaling","Ekdant","Ekadant","Gajaadhar","Gajadhar","Gajbaahu","Gajabahu","Ganak","Ganaka","Ganapati","Gandharv","Gandharva","Ganesh","Gangesh","Garud","Garuda","Gati","Gatik","Gaurang","Gauraang","Gauranga","Gouranga","Gautam","Gautama","Goutam","Ghanaanand","Ghanshyam","Ghanashyam","Giri","Girik","Girika","Girindra","Giriraaj","Giriraj","Girish","Gopal","Gopaal","Gopi","Gopee","Gorakhnath","Gorakhanatha","Goswamee","Goswami","Gotum","Gautam","Govinda","Gobinda","Gudakesha","Gudakesa","Gurdev","Guru","Hari","Harinarayan","Harit","Himadri","Hiranmay","Hiranmaya","Hiranya","Inder","Indra","Indra","Jagadish","Jagadisha","Jagathi","Jagdeep","Jagdish","Jagmeet","Jahnu","Jai","Javas","Jay","Jitendra","Jitender","Jyotis","Kailash","Kama","Kamalesh","Kamlesh","Kanak","Kanaka","Kannan","Kannen","Karan","Karthik","Kartik","Karunanidhi","Kashyap","Kiran","Kirti","Keerti","Krishna","Krishnadas","Krishnadasa","Kumar","Lai","Lakshman","Laxman","Lakshmidhar","Lakshminath","Lal","Laal","Mahendra","Mohinder","Mahesh","Maheswar","Mani","Manik","Manikya","Manoj","Marut","Mayoor","Meghnad","Meghnath","Mohan","Mukesh","Mukul","Nagabhushanam","Nanda","Narayan","Narendra","Narinder","Naveen","Navin","Nawal","Naval","Nimit","Niranjan","Nirbhay","Niro","Param","Paramartha","Pran","Pranay","Prasad","Prathamesh","Prayag","Prem","Puneet","Purushottam","Rahul","Raj","Rajan","Rajendra","Rajinder","Rajiv","Rakesh","Ramesh","Rameshwar","Ranjit","Ranjeet","Ravi","Ritesh","Rohan","Rohit","Rudra","Sachin","Sameer","Samir","Sanjay","Sanka","Sarvin","Satish","Satyen","Shankar","Shantanu","Shashi","Sher","Shiv","Siddarth","Siddhran","Som","Somu","Somnath","Subhash","Subodh","Suman","Suresh","Surya","Suryakant","Suryakanta","Sushil","Susheel","Swami","Swapnil","Tapan","Tara","Tarun","Tej","Tejas","Trilochan","Trilochana","Trilok","Trilokesh","Triloki","Triloki Nath","Trilokanath","Tushar","Udai","Udit","Ujjawal","Ujjwal","Umang","Upendra","Uttam","Vasudev","Vasudeva","Vedang","Vedanga","Vidhya","Vidur","Vidhur","Vijay","Vimal","Vinay","Vishnu","Bishnu","Vishwamitra","Vyas","Yogendra","Yoginder","Yogesh"],last_name:["Abbott","Achari","Acharya","Adiga","Agarwal","Ahluwalia","Ahuja","Arora","Asan","Bandopadhyay","Banerjee","Bharadwaj","Bhat","Butt","Bhattacharya","Bhattathiri","Chaturvedi","Chattopadhyay","Chopra","Desai","Deshpande","Devar","Dhawan","Dubashi","Dutta","Dwivedi","Embranthiri","Ganaka","Gandhi","Gill","Gowda","Guha","Guneta","Gupta","Iyer","Iyengar","Jain","Jha","Johar","Joshi","Kakkar","Kaniyar","Kapoor","Kaul","Kaur","Khan","Khanna","Khatri","Kocchar","Mahajan","Malik","Marar","Menon","Mehra","Mehrotra","Mishra","Mukhopadhyay","Nayar","Naik","Nair","Nambeesan","Namboothiri","Nehru","Pandey","Panicker","Patel","Patil","Pilla","Pillai","Pothuvaal","Prajapat","Rana","Reddy","Saini","Sethi","Shah","Sharma","Shukla","Singh","Sinha","Somayaji","Tagore","Talwar","Tandon","Trivedi","Varrier","Varma","Varman","Verma"]},en_IND.address={postcode:["?#? #?#"],state:["Andra Pradesh","Arunachal Pradesh","Assam","Bihar","Chhattisgarh","Goa","Gujarat","Haryana","Himachal Pradesh","Jammu and Kashmir","Jharkhand","Karnataka","Kerala","Madya Pradesh","Maharashtra","Manipur","Meghalaya","Mizoram","Nagaland","Orissa","Punjab","Rajasthan","Sikkim","Tamil Nadu","Tripura","Uttaranchal","Uttar Pradesh","West Bengal","Andaman and Nicobar Islands","Chandigarh","Dadar and Nagar Haveli","Daman and Diu","Delhi","Lakshadweep","Pondicherry"],state_abbr:["AP","AR","AS","BR","CG","DL","GA","GJ","HR","HP","JK","JS","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TR","UK","UP","WB","AN","CH","DN","DD","LD","PY"],default_country:["India","Indian Republic","Bharat","Hindustan"]},en_IND.internet={free_email:["gmail.com","yahoo.co.in","hotmail.com"],domain_suffix:["in","com","biz","info","name","net","org","co.in"]},en_IND.company={suffix:["Pvt Ltd","Limited","Ltd","and Sons","Corp","Group","Brothers"]},en_IND.phone_number={formats:["+91###-###-####","+91##########","+91-###-#######"]};

},{}],101:[function(require,module,exports){
var en_US={};module.exports=en_US,en_US.title="United States (English)",en_US.internet={domain_suffix:["com","us","biz","info","name","net","org"]},en_US.address={default_country:["United States","United States of America","USA"],postcode_by_state:{AL:"350##",AK:"995##",AS:"967##",AZ:"850##",AR:"717##",CA:"900##",CO:"800##",CT:"061##",DC:"204##",DE:"198##",FL:"322##",GA:"301##",HI:"967##",ID:"832##",IL:"600##",IN:"463##",IA:"510##",KS:"666##",KY:"404##",LA:"701##",ME:"042##",MD:"210##",MA:"026##",MI:"480##",MN:"555##",MS:"387##",MO:"650##",MT:"590##",NE:"688##",NV:"898##",NH:"036##",NJ:"076##",NM:"880##",NY:"122##",NC:"288##",ND:"586##",OH:"444##",OK:"730##",OR:"979##",PA:"186##",RI:"029##",SC:"299##",SD:"577##",TN:"383##",TX:"798##",UT:"847##",VT:"050##",VA:"222##",WA:"990##",WV:"247##",WI:"549##",WY:"831##"}},en_US.phone_number={area_code:["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","330","331","334","336","337","339","347","351","352","360","361","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","434","435","440","443","445","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","540","541","551","557","559","561","562","563","564","567","570","571","573","574","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","630","631","636","641","646","650","651","660","661","662","667","678","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","727","731","732","734","737","740","754","757","760","763","765","770","772","773","774","775","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","835","843","845","847","848","850","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","931","936","937","940","941","947","949","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"],exchange_code:["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","330","331","334","336","337","339","347","351","352","360","361","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","434","435","440","443","445","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","540","541","551","557","559","561","562","563","564","567","570","571","573","574","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","630","631","636","641","646","650","651","660","661","662","667","678","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","727","731","732","734","737","740","754","757","760","763","765","770","772","773","774","775","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","835","843","845","847","848","850","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","931","936","937","940","941","947","949","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]};

},{}],102:[function(require,module,exports){
var en_au_ocker={};module.exports=en_au_ocker,en_au_ocker.title="Australia Ocker (English)",en_au_ocker.name={first_name:["Charlotte","Ava","Chloe","Emily","Olivia","Zoe","Lily","Sophie","Amelia","Sofia","Ella","Isabella","Ruby","Sienna","Mia+3","Grace","Emma","Ivy","Layla","Abigail","Isla","Hannah","Zara","Lucy","Evie","Annabelle","Madison","Alice","Georgia","Maya","Madeline","Audrey","Scarlett","Isabelle","Chelsea","Mila","Holly","Indiana","Poppy","Harper","Sarah","Alyssa","Jasmine","Imogen","Hayley","Pheobe","Eva","Evelyn","Mackenzie","Ayla","Oliver","Jack","Jackson","William","Ethan","Charlie","Lucas","Cooper","Lachlan","Noah","Liam","Alexander","Max","Isaac","Thomas","Xavier","Oscar","Benjamin","Aiden","Mason","Samuel","James","Levi","Riley","Harrison","Ryan","Henry","Jacob","Joshua","Leo","Zach","Harry","Hunter","Flynn","Archie","Tyler","Elijah","Hayden","Jayden","Blake","Archer","Ashton","Sebastian","Zachery","Lincoln","Mitchell","Luca","Nathan","Kai","Connor","Tom","Nigel","Matt","Sean"],last_name:["Smith","Jones","Williams","Brown","Wilson","Taylor","Morton","White","Martin","Anderson","Thompson","Nguyen","Thomas","Walker","Harris","Lee","Ryan","Robinson","Kelly","King","Rausch","Ridge","Connolly","LeQuesne"],ocker_first_name:["Bazza","Bluey","Davo","Johno","Shano","Shazza"]},en_au_ocker.company={suffix:["Pty Ltd","and Sons","Corp","Group","Brothers","Partners"]},en_au_ocker.internet={domain_suffix:["com.au","com","net.au","net","org.au","org"]},en_au_ocker.address={street_root:["Ramsay Street","Bonnie Doon","Cavill Avenue","Queen Street"],street_name:["#{street_root}"],city_prefix:["Bondi","Burleigh Heads","Carlton","Fitzroy","Fremantle","Glenelg","Manly","Noosa","Stones Corner","St Kilda","Surry Hills","Yarra Valley"],city:["#{city_prefix}"],state_abbr:["NSW","QLD","NT","SA","WA","TAS","ACT","VIC"],region:["South East Queensland","Wide Bay Burnett","Margaret River","Port Pirie","Gippsland","Elizabeth","Barossa"],state:["New South Wales","Queensland","Northern Territory","South Australia","Western Australia","Tasmania","Australian Capital Territory","Victoria"],postcode:["0###","2###","3###","4###","5###","6###","7###"],building_number:["####","###","##"],street_suffix:["Avenue","Boulevard","Circle","Circuit","Court","Crescent","Crest","Drive","Estate Dr","Grove","Hill","Island","Junction","Knoll","Lane","Loop","Mall","Manor","Meadow","Mews","Parade","Parkway","Pass","Place","Plaza","Ridge","Road","Run","Square","Station St","Street","Summit","Terrace","Track","Trail","View Rd","Way"],default_country:["Australia"]},en_au_ocker.phone_number={formats:["0# #### ####","+61 # #### ####","04## ### ###","+61 4## ### ###"]};

},{}],103:[function(require,module,exports){
var es={};module.exports=es,es.title="Spanish",es.address={city_prefix:["Parla","Telde","Baracaldo","San Fernando","Torrevieja","Lugo","Santiago de Compostela","Gerona","Cáceres","Lorca","Coslada","Talavera de la Reina","El Puerto de Santa María","Cornellá de Llobregat","Avilés","Palencia","Gecho","Orihuela","Pontevedra","Pozuelo de Alarcón","Toledo","El Ejido","Guadalajara","Gandía","Ceuta","Ferrol","Chiclana de la Frontera","Manresa","Roquetas de Mar","Ciudad Real","Rubí","Benidorm","San Sebastían de los Reyes","Ponferrada","Zamora","Alcalá de Guadaira","Fuengirola","Mijas","Sanlúcar de Barrameda","La Línea de la Concepción","Majadahonda","Sagunto","El Prat de LLobregat","Viladecans","Linares","Alcoy","Irún","Estepona","Torremolinos","Rivas-Vaciamadrid","Molina de Segura","Paterna","Granollers","Santa Lucía de Tirajana","Motril","Cerdañola del Vallés","Arrecife","Segovia","Torrelavega","Elda","Mérida","Ávila","Valdemoro","Cuenta","Collado Villalba","Benalmádena","Mollet del Vallés","Puertollano","Madrid","Barcelona","Valencia","Sevilla","Zaragoza","Málaga","Murcia","Palma de Mallorca","Las Palmas de Gran Canaria","Bilbao","Córdoba","Alicante","Valladolid","Vigo","Gijón","Hospitalet de LLobregat","La Coruña","Granada","Vitoria","Elche","Santa Cruz de Tenerife","Oviedo","Badalona","Cartagena","Móstoles","Jerez de la Frontera","Tarrasa","Sabadell","Alcalá de Henares","Pamplona","Fuenlabrada","Almería","San Sebastián","Leganés","Santander","Burgos","Castellón de la Plana","Alcorcón","Albacete","Getafe","Salamanca","Huelva","Logroño","Badajoz","San Cristróbal de la Laguna","León","Tarragona","Cádiz","Lérida","Marbella","Mataró","Dos Hermanas","Santa Coloma de Gramanet","Jaén","Algeciras","Torrejón de Ardoz","Orense","Alcobendas","Reus","Calahorra","Inca"],country:["Afganistán","Albania","Argelia","Andorra","Angola","Argentina","Armenia","Aruba","Australia","Austria","Azerbayán","Bahamas","Barein","Bangladesh","Barbados","Bielorusia","Bélgica","Belice","Bermuda","Bután","Bolivia","Bosnia Herzegovina","Botswana","Brasil","Bulgaria","Burkina Faso","Burundi","Camboya","Camerún","Canada","Cabo Verde","Islas Caimán","Chad","Chile","China","Isla de Navidad","Colombia","Comodos","Congo","Costa Rica","Costa de Marfil","Croacia","Cuba","Chipre","República Checa","Dinamarca","Dominica","República Dominicana","Ecuador","Egipto","El Salvador","Guinea Ecuatorial","Eritrea","Estonia","Etiopía","Islas Faro","Fiji","Finlandia","Francia","Gabón","Gambia","Georgia","Alemania","Ghana","Grecia","Groenlandia","Granada","Guadalupe","Guam","Guatemala","Guinea","Guinea-Bisau","Guayana","Haiti","Honduras","Hong Kong","Hungria","Islandia","India","Indonesia","Iran","Irak","Irlanda","Italia","Jamaica","Japón","Jordania","Kazajistan","Kenia","Kiribati","Corea","Kuwait","Letonia","Líbano","Liberia","Liechtenstein","Lituania","Luxemburgo","Macao","Macedonia","Madagascar","Malawi","Malasia","Maldivas","Mali","Malta","Martinica","Mauritania","Méjico","Micronesia","Moldavia","Mónaco","Mongolia","Montenegro","Montserrat","Marruecos","Mozambique","Namibia","Nauru","Nepal","Holanda","Nueva Zelanda","Nicaragua","Niger","Nigeria","Noruega","Omán","Pakistan","Panamá","Papúa Nueva Guinea","Paraguay","Perú","Filipinas","Poland","Portugal","Puerto Rico","Rusia","Ruanda","Samoa","San Marino","Santo Tomé y Principe","Arabia Saudí","Senegal","Serbia","Seychelles","Sierra Leona","Singapur","Eslovaquia","Eslovenia","Somalia","España","Sri Lanka","Sudán","Suriname","Suecia","Suiza","Siria","Taiwan","Tajikistan","Tanzania","Tailandia","Timor-Leste","Togo","Tonga","Trinidad y Tobago","Tunez","Turquia","Uganda","Ucrania","Emiratos Árabes Unidos","Reino Unido","Estados Unidos de América","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"],building_number:[" s/n.",", #",", ##"," #"," ##"],street_suffix:["Aldea","Apartamento","Arrabal","Arroyo","Avenida","Bajada","Barranco","Barrio","Bloque","Calle","Calleja","Camino","Carretera","Caserio","Colegio","Colonia","Conjunto","Cuesta","Chalet","Edificio","Entrada","Escalinata","Explanada","Extramuros","Extrarradio","Ferrocarril","Glorieta","Gran Subida","Grupo","Huerta","Jardines","Lado","Lugar","Manzana","Masía","Mercado","Monte","Muelle","Municipio","Parcela","Parque","Partida","Pasaje","Paseo","Plaza","Poblado","Polígono","Prolongación","Puente","Puerta","Quinta","Ramal","Rambla","Rampa","Riera","Rincón","Ronda","Rua","Salida","Sector","Sección","Senda","Solar","Subida","Terrenos","Torrente","Travesía","Urbanización","Vía","Vía Pública"],secondary_address:["Esc. ###","Puerta ###"],postcode:["#####"],province:["Álava","Albacete","Alicante","Almería","Asturias","Ávila","Badajoz","Barcelona","Burgos","Cantabria","Castellón","Ciudad Real","Cuenca","Cáceres","Cádiz","Córdoba","Gerona","Granada","Guadalajara","Guipúzcoa","Huelva","Huesca","Islas Baleares","Jaén","La Coruña","La Rioja","Las Palmas","León","Lugo","lérida","Madrid","Murcia","Málaga","Navarra","Orense","Palencia","Pontevedra","Salamanca","Santa Cruz de Tenerife","Segovia","Sevilla","Soria","Tarragona","Teruel","Toledo","Valencia","Valladolid","Vizcaya","Zamora","Zaragoza"],state:["Andalucía","Aragón","Principado de Asturias","Baleares","Canarias","Cantabria","Castilla-La Mancha","Castilla y León","Cataluña","Comunidad Valenciana","Extremadura","Galicia","La Rioja","Comunidad de Madrid","Navarra","País Vasco","Región de Murcia"],state_abbr:["And","Ara","Ast","Bal","Can","Cbr","Man","Leo","Cat","Com","Ext","Gal","Rio","Mad","Nav","Vas","Mur"],time_zone:["Pacífico/Midway","Pacífico/Pago_Pago","Pacífico/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europa/Dublin","Europa/London","Europa/Lisbon","Europa/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europa/Belgrade","Europa/Bratislava","Europa/Budapest","Europa/Ljubljana","Europa/Prague","Europa/Sarajevo","Europa/Skopje","Europa/Warsaw","Europa/Zagreb","Europa/Brussels","Europa/Copenhagen","Europa/Madrid","Europa/Paris","Europa/Amsterdam","Europa/Berlin","Europa/Berlin","Europa/Rome","Europa/Stockholm","Europa/Vienna","Africa/Algiers","Europa/Bucharest","Africa/Cairo","Europa/Helsinki","Europa/Kiev","Europa/Riga","Europa/Sofia","Europa/Tallinn","Europa/Vilnius","Europa/Athens","Europa/Istanbul","Europa/Minsk","Asia/Jerusalen","Africa/Harare","Africa/Johannesburg","Europa/Moscú","Europa/Moscú","Europa/Moscú","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacífico/Guam","Pacífico/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacífico/Noumea","Pacífico/Fiji","Asia/Kamchatka","Pacífico/Majuro","Pacífico/Auckland","Pacífico/Auckland","Pacífico/Tongatapu","Pacífico/Fakaofo","Pacífico/Apia"],city:["#{city_prefix}"],street_name:["#{street_suffix} #{Name.first_name}","#{street_suffix} #{Name.first_name} #{Name.last_name}"],street_address:["#{street_name}#{building_number}","#{street_name}#{building_number} #{secondary_address}"],default_country:["España"]},es.company={suffix:["S.L.","e Hijos","S.A.","Hermanos"],noun:["habilidad","acceso","adaptador","algoritmo","alianza","analista","aplicación","enfoque","arquitectura","archivo","inteligencia artificial","array","actitud","medición","gestión presupuestaria","capacidad","desafío","circuito","colaboración","complejidad","concepto","conglomeración","contingencia","núcleo","fidelidad","base de datos","data-warehouse","definición","emulación","codificar","encriptar","extranet","firmware","flexibilidad","focus group","previsión","base de trabajo","función","funcionalidad","Interfaz Gráfica","groupware","Interfaz gráfico de usuario","hardware","Soporte","jerarquía","conjunto","implementación","infraestructura","iniciativa","instalación","conjunto de instrucciones","interfaz","intranet","base del conocimiento","red de area local","aprovechar","matrices","metodologías","middleware","migración","modelo","moderador","monitorizar","arquitectura abierta","sistema abierto","orquestar","paradigma","paralelismo","política","portal","estructura de precios","proceso de mejora","producto","productividad","proyecto","proyección","protocolo","línea segura","software","solución","estandardización","estrategia","estructura","éxito","superestructura","soporte","sinergia","mediante","marco de tiempo","caja de herramientas","utilización","website","fuerza de trabajo"],descriptor:["24 horas","24/7","3rd generación","4th generación","5th generación","6th generación","analizada","asimétrica","asíncrona","monitorizada por red","bidireccional","bifurcada","generada por el cliente","cliente servidor","coherente","cohesiva","compuesto","sensible al contexto","basado en el contexto","basado en contenido","dedicada","generado por la demanda","didactica","direccional","discreta","dinámica","potenciada","acompasada","ejecutiva","explícita","tolerante a fallos","innovadora","amplio ábanico","global","heurística","alto nivel","holística","homogénea","hibrida","incremental","intangible","interactiva","intermedia","local","logística","maximizada","metódica","misión crítica","móbil","modular","motivadora","multimedia","multiestado","multitarea","nacional","basado en necesidades","neutral","nueva generación","no-volátil","orientado a objetos","óptima","optimizada","radical","tiempo real","recíproca","regional","escalable","secundaria","orientada a soluciones","estable","estatica","sistemática","sistémica","tangible","terciaria","transicional","uniforme","valor añadido","vía web","defectos cero","tolerancia cero"],adjective:["Adaptativo","Avanzado","Asimilado","Automatizado","Equilibrado","Centrado en el negocio","Centralizado","Clonado","Compatible","Configurable","Multi grupo","Multi plataforma","Centrado en el usuario","Configurable","Descentralizado","Digitalizado","Distribuido","Diverso","Reducido","Mejorado","Para toda la empresa","Ergonomico","Exclusivo","Expandido","Extendido","Cara a cara","Enfocado","Totalmente configurable","Fundamental","Orígenes","Horizontal","Implementado","Innovador","Integrado","Intuitivo","Inverso","Gestionado","Obligatorio","Monitorizado","Multi canal","Multi lateral","Multi capa","En red","Orientado a objetos","Open-source","Operativo","Optimizado","Opcional","Organico","Organizado","Perseverando","Persistente","en fases","Polarizado","Pre-emptivo","Proactivo","Enfocado a benficios","Profundo","Programable","Progresivo","Public-key","Enfocado en la calidad","Reactivo","Realineado","Re-contextualizado","Re-implementado","Reducido","Ingenieria inversa","Robusto","Fácil","Seguro","Auto proporciona","Compartible","Intercambiable","Sincronizado","Orientado a equipos","Total","Universal","Mejorado","Actualizable","Centrado en el usuario","Amigable","Versatil","Virtual","Visionario"],name:["#{Name.last_name} #{suffix}","#{Name.last_name} y #{Name.last_name}","#{Name.last_name} #{Name.last_name} #{suffix}","#{Name.last_name}, #{Name.last_name} y #{Name.last_name} Asociados"]},es.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","es","info","com.es","org"]},es.name={first_name:["Adán","Agustín","Alberto","Alejandro","Alfonso","Alfredo","Andrés","Antonio","Armando","Arturo","Benito","Benjamín","Bernardo","Carlos","César","Claudio","Clemente","Cristian","Cristobal","Daniel","David","Diego","Eduardo","Emilio","Enrique","Ernesto","Esteban","Federico","Felipe","Fernando","Francisco","Gabriel","Gerardo","Germán","Gilberto","Gonzalo","Gregorio","Guillermo","Gustavo","Hernán","Homero","Horacio","Hugo","Ignacio","Jacobo","Jaime","Javier","Jerónimo","Jesús","Joaquín","Jorge","Jorge Luis","José","José Eduardo","José Emilio","José Luis","José María","Juan","Juan Carlos","Julio","Julio César","Lorenzo","Lucas","Luis","Luis Miguel","Manuel","Marco Antonio","Marcos","Mariano","Mario","Martín","Mateo","Miguel","Miguel Ángel","Nicolás","Octavio","Óscar","Pablo","Patricio","Pedro","Rafael","Ramiro","Ramón","Raúl","Ricardo","Roberto","Rodrigo","Rubén","Salvador","Samuel","Sancho","Santiago","Sergio","Teodoro","Timoteo","Tomás","Vicente","Víctor","Adela","Adriana","Alejandra","Alicia","Amalia","Ana","Ana Luisa","Ana María","Andrea","Anita","Ángela","Antonia","Ariadna","Barbara","Beatriz","Berta","Blanca","Caridad","Carla","Carlota","Carmen","Carolina","Catalina","Cecilia","Clara","Claudia","Concepción","Conchita","Cristina","Daniela","Débora","Diana","Dolores","Lola","Dorotea","Elena","Elisa","Eloisa","Elsa","Elvira","Emilia","Esperanza","Estela","Ester","Eva","Florencia","Francisca","Gabriela","Gloria","Graciela","Guadalupe","Guillermina","Inés","Irene","Isabel","Isabela","Josefina","Juana","Julia","Laura","Leonor","Leticia","Lilia","Lorena","Lourdes","Lucia","Luisa","Luz","Magdalena","Manuela","Marcela","Margarita","María","María del Carmen","María Cristina","María Elena","María Eugenia","María José","María Luisa","María Soledad","María Teresa","Mariana","Maricarmen","Marilu","Marisol","Marta","Mayte","Mercedes","Micaela","Mónica","Natalia","Norma","Olivia","Patricia","Pilar","Ramona","Raquel","Rebeca","Reina","Rocio","Rosa","Rosalia","Rosario","Sara","Silvia","Sofia","Soledad","Sonia","Susana","Teresa","Verónica","Victoria","Virginia","Yolanda"],last_name:["Abeyta","Abrego","Abreu","Acevedo","Acosta","Acuña","Adame","Adorno","Agosto","Aguayo","Águilar","Aguilera","Aguirre","Alanis","Alaniz","Alarcón","Alba","Alcala","Alcántar","Alcaraz","Alejandro","Alemán","Alfaro","Alicea","Almanza","Almaraz","Almonte","Alonso","Alonzo","Altamirano","Alva","Alvarado","Alvarez","Amador","Amaya","Anaya","Anguiano","Angulo","Aparicio","Apodaca","Aponte","Aragón","Araña","Aranda","Arce","Archuleta","Arellano","Arenas","Arevalo","Arguello","Arias","Armas","Armendáriz","Armenta","Armijo","Arredondo","Arreola","Arriaga","Arroyo","Arteaga","Atencio","Ávalos","Ávila","Avilés","Ayala","Baca","Badillo","Báez","Baeza","Bahena","Balderas","Ballesteros","Banda","Bañuelos","Barajas","Barela","Barragán","Barraza","Barrera","Barreto","Barrientos","Barrios","Batista","Becerra","Beltrán","Benavides","Benavídez","Benítez","Bermúdez","Bernal","Berríos","Bétancourt","Blanco","Bonilla","Borrego","Botello","Bravo","Briones","Briseño","Brito","Bueno","Burgos","Bustamante","Bustos","Caballero","Cabán","Cabrera","Cadena","Caldera","Calderón","Calvillo","Camacho","Camarillo","Campos","Canales","Candelaria","Cano","Cantú","Caraballo","Carbajal","Cardenas","Cardona","Carmona","Carranza","Carrasco","Carrasquillo","Carreón","Carrera","Carrero","Carrillo","Carrion","Carvajal","Casanova","Casares","Casárez","Casas","Casillas","Castañeda","Castellanos","Castillo","Castro","Cavazos","Cazares","Ceballos","Cedillo","Ceja","Centeno","Cepeda","Cerda","Cervantes","Cervántez","Chacón","Chapa","Chavarría","Chávez","Cintrón","Cisneros","Collado","Collazo","Colón","Colunga","Concepción","Contreras","Cordero","Córdova","Cornejo","Corona","Coronado","Corral","Corrales","Correa","Cortés","Cortez","Cotto","Covarrubias","Crespo","Cruz","Cuellar","Curiel","Dávila","de Anda","de Jesús","Delacrúz","Delafuente","Delagarza","Delao","Delapaz","Delarosa","Delatorre","Deleón","Delgadillo","Delgado","Delrío","Delvalle","Díaz","Domínguez","Domínquez","Duarte","Dueñas","Duran","Echevarría","Elizondo","Enríquez","Escalante","Escamilla","Escobar","Escobedo","Esparza","Espinal","Espino","Espinosa","Espinoza","Esquibel","Esquivel","Estévez","Estrada","Fajardo","Farías","Feliciano","Fernández","Ferrer","Fierro","Figueroa","Flores","Flórez","Fonseca","Franco","Frías","Fuentes","Gaitán","Galarza","Galindo","Gallardo","Gallegos","Galván","Gálvez","Gamboa","Gamez","Gaona","Garay","García","Garibay","Garica","Garrido","Garza","Gastélum","Gaytán","Gil","Girón","Godínez","Godoy","Gómez","Gonzales","González","Gollum","Gracia","Granado","Granados","Griego","Grijalva","Guajardo","Guardado","Guerra","Guerrero","Guevara","Guillen","Gurule","Gutiérrez","Guzmán","Haro","Henríquez","Heredia","Hernádez","Hernandes","Hernández","Herrera","Hidalgo","Hinojosa","Holguín","Huerta","Hurtado","Ibarra","Iglesias","Irizarry","Jaime","Jaimes","Jáquez","Jaramillo","Jasso","Jiménez","Jimínez","Juárez","Jurado","Laboy","Lara","Laureano","Leal","Lebrón","Ledesma","Leiva","Lemus","León","Lerma","Leyva","Limón","Linares","Lira","Llamas","Loera","Lomeli","Longoria","López","Lovato","Loya","Lozada","Lozano","Lucero","Lucio","Luevano","Lugo","Luna","Macías","Madera","Madrid","Madrigal","Maestas","Magaña","Malave","Maldonado","Manzanares","Mares","Marín","Márquez","Marrero","Marroquín","Martínez","Mascareñas","Mata","Mateo","Matías","Matos","Maya","Mayorga","Medina","Medrano","Mejía","Meléndez","Melgar","Mena","Menchaca","Méndez","Mendoza","Menéndez","Meraz","Mercado","Merino","Mesa","Meza","Miramontes","Miranda","Mireles","Mojica","Molina","Mondragón","Monroy","Montalvo","Montañez","Montaño","Montemayor","Montenegro","Montero","Montes","Montez","Montoya","Mora","Morales","Moreno","Mota","Moya","Munguía","Muñiz","Muñoz","Murillo","Muro","Nájera","Naranjo","Narváez","Nava","Navarrete","Navarro","Nazario","Negrete","Negrón","Nevárez","Nieto","Nieves","Niño","Noriega","Núñez","Ocampo","Ocasio","Ochoa","Ojeda","Olivares","Olivárez","Olivas","Olivera","Olivo","Olmos","Olvera","Ontiveros","Oquendo","Ordóñez","Orellana","Ornelas","Orosco","Orozco","Orta","Ortega","Ortiz","Osorio","Otero","Ozuna","Pabón","Pacheco","Padilla","Padrón","Páez","Pagan","Palacios","Palomino","Palomo","Pantoja","Paredes","Parra","Partida","Patiño","Paz","Pedraza","Pedroza","Pelayo","Peña","Perales","Peralta","Perea","Peres","Pérez","Pichardo","Piña","Pineda","Pizarro","Polanco","Ponce","Porras","Portillo","Posada","Prado","Preciado","Prieto","Puente","Puga","Pulido","Quesada","Quezada","Quiñones","Quiñónez","Quintana","Quintanilla","Quintero","Quiroz","Rael","Ramírez","Ramón","Ramos","Rangel","Rascón","Raya","Razo","Regalado","Rendón","Rentería","Reséndez","Reyes","Reyna","Reynoso","Rico","Rincón","Riojas","Ríos","Rivas","Rivera","Rivero","Robledo","Robles","Rocha","Rodarte","Rodrígez","Rodríguez","Rodríquez","Rojas","Rojo","Roldán","Rolón","Romero","Romo","Roque","Rosado","Rosales","Rosario","Rosas","Roybal","Rubio","Ruelas","Ruiz","Saavedra","Sáenz","Saiz","Salas","Salazar","Salcedo","Salcido","Saldaña","Saldivar","Salgado","Salinas","Samaniego","Sanabria","Sanches","Sánchez","Sandoval","Santacruz","Santana","Santiago","Santillán","Sarabia","Sauceda","Saucedo","Sedillo","Segovia","Segura","Sepúlveda","Serna","Serrano","Serrato","Sevilla","Sierra","Sisneros","Solano","Solís","Soliz","Solorio","Solorzano","Soria","Sosa","Sotelo","Soto","Suárez","Tafoya","Tamayo","Tamez","Tapia","Tejada","Tejeda","Téllez","Tello","Terán","Terrazas","Tijerina","Tirado","Toledo","Toro","Torres","Tórrez","Tovar","Trejo","Treviño","Trujillo","Ulibarri","Ulloa","Urbina","Ureña","Urías","Uribe","Urrutia","Vaca","Valadez","Valdés","Valdez","Valdivia","Valencia","Valentín","Valenzuela","Valladares","Valle","Vallejo","Valles","Valverde","Vanegas","Varela","Vargas","Vásquez","Vázquez","Vega","Vela","Velasco","Velásquez","Velázquez","Vélez","Véliz","Venegas","Vera","Verdugo","Verduzco","Vergara","Viera","Vigil","Villa","Villagómez","Villalobos","Villalpando","Villanueva","Villareal","Villarreal","Villaseñor","Villegas","Yáñez","Ybarra","Zambrano","Zamora","Zamudio","Zapata","Zaragoza","Zarate","Zavala","Zayas","Zelaya","Zepeda","Zúñiga"],prefix:["Sr.","Sra.","Sta."],suffix:["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"],title:{descriptor:["Jefe","Senior","Directo","Corporativo","Dinánmico","Futuro","Producto","Nacional","Regional","Distrito","Central","Global","Cliente","Inversor","International","Heredado","Adelante","Interno","Humano","Gerente","Director"],level:["Soluciones","Programa","Marca","Seguridada","Investigación","Marketing","Normas","Implementación","Integración","Funcionalidad","Respuesta","Paradigma","Tácticas","Identidad","Mercados","Grupo","División","Aplicaciones","Optimización","Operaciones","Infraestructura","Intranet","Comunicaciones","Web","Calidad","Seguro","Mobilidad","Cuentas","Datos","Creativo","Configuración","Contabilidad","Interacciones","Factores","Usabilidad","Métricas"],job:["Supervisor","Asociado","Ejecutivo","Relacciones","Oficial","Gerente","Ingeniero","Especialista","Director","Coordinador","Administrador","Arquitecto","Analista","Diseñador","Planificador","Técnico","Funcionario","Desarrollador","Productor","Consultor","Asistente","Facilitador","Agente","Representante","Estratega"]},name:["#{prefix} #{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name}"]},es.phone_number={formats:["9##-###-###","9##.###.###","9## ### ###","9########"]},es.cell_phone={formats:["6##-###-###","6##.###.###","6## ### ###","6########"]};

},{}],104:[function(require,module,exports){
var fa={};module.exports=fa,fa.title="Farsi",fa.name={first_name:["آبان دخت","آبتین","آتوسا","آفر","آفره دخت","آذرنوش‌","آذین","آراه","آرزو","آرش","آرتین","آرتام","آرتمن","آرشام","آرمان","آرمین","آرمیتا","آریا فر","آریا","آریا مهر","آرین","آزاده","آزرم","آزرمدخت","آزیتا","آناهیتا","آونگ","آهو","آیدا","اتسز","اختر","ارد","ارد شیر","اردوان","ارژن","ارژنگ","ارسلان","ارغوان","ارمغان","ارنواز","اروانه","استر","اسفندیار","اشکان","اشکبوس","افسانه","افسون","افشین","امید","انوش (‌ آنوشا )","انوشروان","اورنگ","اوژن","اوستا","اهورا","ایاز","ایران","ایراندخت","ایرج","ایزدیار","بابک","باپوک","باربد","بارمان","بامداد","بامشاد","بانو","بختیار","برانوش","بردیا","برزو","برزویه","برزین","برمک","بزرگمهر","بنفشه","بوژان","بویان","بهار","بهارک","بهاره","بهتاش","بهداد","بهرام","بهدیس","بهرخ","بهرنگ","بهروز","بهزاد","بهشاد","بهمن","بهناز","بهنام","بهنود","بهنوش","بیتا","بیژن","پارسا","پاکان","پاکتن","پاکدخت","پانته آ","پدرام","پرتو","پرشنگ","پرتو","پرستو","پرویز","پردیس","پرهام","پژمان","پژوا","پرنیا","پشنگ","پروانه","پروین","پری","پریچهر","پریدخت","پریسا","پرناز","پریوش","پریا","پوپک","پوران","پوراندخت","پوریا","پولاد","پویا","پونه","پیام","پیروز","پیمان","تابان","تاباندخت","تاجی","تارا","تاویار","ترانه","تناز","توران","توراندخت","تورج","تورتک","توفان","توژال","تیر داد","تینا","تینو","جابان","جامین","جاوید","جریره","جمشید","جوان","جویا","جهان","جهانبخت","جهانبخش","جهاندار","جهانگیر","جهان بانو","جهاندخت","جهان ناز","جیران","چابک","چالاک","چاوش","چترا","چوبین","چهرزاد","خاوردخت","خداداد","خدایار","خرم","خرمدخت","خسرو","خشایار","خورشید","دادمهر","دارا","داراب","داریا","داریوش","دانوش","داور‌","دایان","دریا","دل آرا","دل آویز","دلارام","دل انگیز","دلبر","دلبند","دلربا","دلشاد","دلکش","دلناز","دلنواز","دورشاسب","دنیا","دیااکو","دیانوش","دیبا","دیبا دخت","رابو","رابین","رادبانو","رادمان","رازبان","راژانه","راسا","رامتین","رامش","رامشگر","رامونا","رامیار","رامیلا","رامین","راویار","رژینا","رخپاک","رخسار","رخشانه","رخشنده","رزمیار","رستم","رکسانا","روبینا","رودابه","روزبه","روشنک","روناک","رهام","رهی","ریبار","راسپینا","زادبخت","زاد به","زاد چهر","زاد فر","زال","زادماسب","زاوا","زردشت","زرنگار","زری","زرین","زرینه","زمانه","زونا","زیبا","زیبار","زیما","زینو","ژاله","ژالان","ژیار","ژینا","ژیوار","سارا","سارک","سارنگ","ساره","ساسان","ساغر","سام","سامان","سانا","ساناز","سانیار","ساویز","ساهی","ساینا","سایه","سپنتا","سپند","سپهر","سپهرداد","سپیدار","سپید بانو","سپیده","ستاره","ستی","سرافراز","سرور","سروش","سرور","سوبا","سوبار","سنبله","سودابه","سوری","سورن","سورنا","سوزان","سوزه","سوسن","سومار","سولان","سولماز","سوگند","سهراب","سهره","سهند","سیامک","سیاوش","سیبوبه ‌","سیما","سیمدخت","سینا","سیمین","سیمین دخت","شاپرک","شادی","شادمهر","شاران","شاهپور","شاهدخت","شاهرخ","شاهین","شاهیندخت","شایسته","شباهنگ","شب بو","شبدیز","شبنم","شراره","شرمین","شروین","شکوفه","شکفته","شمشاد","شمین","شوان","شمیلا","شورانگیز","شوری","شهاب","شهبار","شهباز","شهبال","شهپر","شهداد","شهرآرا","شهرام","شهربانو","شهرزاد","شهرناز","شهرنوش","شهره","شهریار","شهرزاد","شهلا","شهنواز","شهین","شیبا","شیدا","شیده","شیردل","شیرزاد","شیرنگ","شیرو","شیرین دخت","شیما","شینا","شیرین","شیوا","طوس","طوطی","طهماسب","طهمورث","غوغا","غنچه","فتانه","فدا","فراز","فرامرز","فرانک","فراهان","فربد","فربغ","فرجاد","فرخ","فرخ پی","فرخ داد","فرخ رو","فرخ زاد","فرخ لقا","فرخ مهر","فرداد","فردیس","فرین","فرزاد","فرزام","فرزان","فرزانه","فرزین","فرشاد","فرشته","فرشید","فرمان","فرناز","فرنگیس","فرنود","فرنوش","فرنیا","فروتن","فرود","فروز","فروزان","فروزش","فروزنده","فروغ","فرهاد","فرهنگ","فرهود","فربار","فریبا","فرید","فریدخت","فریدون","فریمان","فریناز","فرینوش","فریوش","فیروز","فیروزه","قابوس","قباد","قدسی","کابان","کابوک","کارا","کارو","کاراکو","کامبخت","کامبخش","کامبیز","کامجو","کامدین","کامران","کامراوا","کامک","کامنوش","کامیار","کانیار","کاووس","کاوه","کتایون","کرشمه","کسری","کلاله","کمبوجیه","کوشا","کهبد","کهرام","کهزاد","کیارش","کیان","کیانا","کیانچهر","کیاندخت","کیانوش","کیاوش","کیخسرو","کیقباد","کیکاووس","کیوان","کیوان دخت","کیومرث","کیهان","کیاندخت","کیهانه","گرد آفرید","گردان","گرشا","گرشاسب","گرشین","گرگین","گزل","گشتاسب","گشسب","گشسب بانو","گل","گل آذین","گل آرا‌","گلاره","گل افروز","گلاله","گل اندام","گلاویز","گلباد","گلبار","گلبام","گلبان","گلبانو","گلبرگ","گلبو","گلبهار","گلبیز","گلپاره","گلپر","گلپری","گلپوش","گل پونه","گلچین","گلدخت","گلدیس","گلربا","گلرخ","گلرنگ","گلرو","گلشن","گلریز","گلزاد","گلزار","گلسا","گلشید","گلنار","گلناز","گلنسا","گلنواز","گلنوش","گلی","گودرز","گوماتو","گهر چهر","گوهر ناز","گیتی","گیسو","گیلدا","گیو","لادن","لاله","لاله رخ","لاله دخت","لبخند","لقاء","لومانا","لهراسب","مارال","ماری","مازیار","ماکان","مامک","مانا","ماندانا","مانوش","مانی","مانیا","ماهان","ماهاندخت","ماه برزین","ماه جهان","ماهچهر","ماهدخت","ماهور","ماهرخ","ماهزاد","مردآویز","مرداس","مرزبان","مرمر","مزدک","مژده","مژگان","مستان","مستانه","مشکاندخت","مشکناز","مشکین دخت","منیژه","منوچهر","مهبانو","مهبد","مه داد","مهتاب","مهدیس","مه جبین","مه دخت","مهر آذر","مهر آرا","مهر آسا","مهر آفاق","مهر افرین","مهرآب","مهرداد","مهر افزون","مهرام","مهران","مهراندخت","مهراندیش","مهرانفر","مهرانگیز","مهرداد","مهر دخت","مهرزاده ‌","مهرناز","مهرنوش","مهرنکار","مهرنیا","مهروز","مهری","مهریار","مهسا","مهستی","مه سیما","مهشاد","مهشید","مهنام","مهناز","مهنوش","مهوش","مهیار","مهین","مهین دخت","میترا","میخک","مینا","مینا دخت","مینو","مینودخت","مینو فر","نادر","ناز آفرین","نازبانو","نازپرور","نازچهر","نازفر","نازلی","نازی","نازیدخت","نامور","ناهید","ندا","نرسی","نرگس","نرمک","نرمین","نریمان","نسترن","نسرین","نسرین دخت","نسرین نوش","نکیسا","نگار","نگاره","نگارین","نگین","نوا","نوش","نوش آذر","نوش آور","نوشا","نوش آفرین","نوشدخت","نوشروان","نوشفر","نوشناز","نوشین","نوید","نوین","نوین دخت","نیش ا","نیک بین","نیک پی","نیک چهر","نیک خواه","نیکداد","نیکدخت","نیکدل","نیکزاد","نیلوفر","نیما","وامق","ورجاوند","وریا","وشمگیر","وهرز","وهسودان","ویدا","ویس","ویشتاسب","ویگن","هژیر","هخامنش","هربد( هیربد )","هرمز","همایون","هما","همادخت","همدم","همراز","همراه","هنگامه","هوتن","هور","هورتاش","هورچهر","هورداد","هوردخت","هورزاد","هورمند","هوروش","هوشنگ","هوشیار","هومان","هومن","هونام","هویدا","هیتاسب","هیرمند","هیما","هیوا","یادگار","یاسمن ( یاسمین )","یاشار","یاور","یزدان","یگانه","یوشیتا"],last_name:["عارف","عاشوری","عالی","عبادی","عبدالکریمی","عبدالملکی","عراقی","عزیزی","عصار","عقیلی","علم","علم‌الهدی","علی عسگری","علی‌آبادی","علیا","علی‌پور","علی‌زمانی","عنایت","غضنفری","غنی","فارسی","فاطمی","فانی","فتاحی","فرامرزی","فرج","فرشیدورد","فرمانفرمائیان","فروتن","فرهنگ","فریاد","فنایی","فنی‌زاده","فولادوند","فهمیده","قاضی","قانعی","قانونی","قمیشی","قنبری","قهرمان","قهرمانی","قهرمانیان","قهستانی","کاشی","کاکاوند","کامکار","کاملی","کاویانی","کدیور","کردبچه","کرمانی","کریمی","کلباسی","کمالی","کوشکی","کهنمویی","کیان","کیانی (نام خانوادگی)","کیمیایی","گل محمدی","گلپایگانی","گنجی","لاجوردی","لاچینی","لاهوتی","لنکرانی","لوکس","مجاهد","مجتبایی","مجتبوی","مجتهد شبستری","مجتهدی","مجرد","محجوب","محجوبی","محدثی","محمدرضایی","محمدی","مددی","مرادخانی","مرتضوی","مستوفی","مشا","مصاحب","مصباح","مصباح‌زاده","مطهری","مظفر","معارف","معروف","معین","مفتاح","مفتح","مقدم","ملایری","ملک","ملکیان","منوچهری","موحد","موسوی","موسویان","مهاجرانی","مهدی‌پور","میرباقری","میردامادی","میرزاده","میرسپاسی","میزبانی","ناظری","نامور","نجفی","ندوشن","نراقی","نعمت‌زاده","نقدی","نقیب‌زاده","نواب","نوبخت","نوبختی","نهاوندی","نیشابوری","نیلوفری","واثقی","واعظ","واعظ‌زاده","واعظی","وکیلی","هاشمی","هاشمی رفسنجانی","هاشمیان","هامون","هدایت","هراتی","هروی","همایون","همت","همدانی","هوشیار","هومن","یاحقی","یادگار","یثربی","یلدا"],prefix:["آقای","خانم","دکتر"]};

},{}],105:[function(require,module,exports){
var fr={};module.exports=fr,fr.title="French",fr.address={building_number:["####","###","##","#"],street_prefix:["Allée, Voie","Rue","Avenue","Boulevard","Quai","Passage","Impasse","Place"],secondary_address:["Apt. ###","# étage"],postcode:["#####"],state:["Alsace","Aquitaine","Auvergne","Basse-Normandie","Bourgogne","Bretagne","Centre","Champagne-Ardenne","Corse","Franche-Comté","Haute-Normandie","Île-de-France","Languedoc-Roussillon","Limousin","Lorraine","Midi-Pyrénées","Nord-Pas-de-Calais","Pays de la Loire","Picardie","Poitou-Charentes","Provence-Alpes-Côte d'Azur","Rhône-Alpes"],city_name:["Paris","Marseille","Lyon","Toulouse","Nice","Nantes","Strasbourg","Montpellier","Bordeaux","Lille13","Rennes","Reims","Le Havre","Saint-Étienne","Toulon","Grenoble","Dijon","Angers","Saint-Denis","Villeurbanne","Le Mans","Aix-en-Provence","Brest","Nîmes","Limoges","Clermont-Ferrand","Tours","Amiens","Metz","Perpignan","Besançon","Orléans","Boulogne-Billancourt","Mulhouse","Rouen","Caen","Nancy","Saint-Denis","Saint-Paul","Montreuil","Argenteuil","Roubaix","Dunkerque14","Tourcoing","Nanterre","Avignon","Créteil","Poitiers","Fort-de-France","Courbevoie","Versailles","Vitry-sur-Seine","Colombes","Pau","Aulnay-sous-Bois","Asnières-sur-Seine","Rueil-Malmaison","Saint-Pierre","Antibes","Saint-Maur-des-Fossés","Champigny-sur-Marne","La Rochelle","Aubervilliers","Calais","Cannes","Le Tampon","Béziers","Colmar","Bourges","Drancy","Mérignac","Saint-Nazaire","Valence","Ajaccio","Issy-les-Moulineaux","Villeneuve-d'Ascq","Levallois-Perret","Noisy-le-Grand","Quimper","La Seyne-sur-Mer","Antony","Troyes","Neuilly-sur-Seine","Sarcelles","Les Abymes","Vénissieux","Clichy","Lorient","Pessac","Ivry-sur-Seine","Cergy","Cayenne","Niort","Chambéry","Montauban","Saint-Quentin","Villejuif","Hyères","Beauvais","Cholet"],city:["#{city_name}"],street_suffix:["de l'Abbaye","Adolphe Mille","d'Alésia","d'Argenteuil","d'Assas","du Bac","de Paris","La Boétie","Bonaparte","de la Bûcherie","de Caumartin","Charlemagne","du Chat-qui-Pêche","de la Chaussée-d'Antin","du Dahomey","Dauphine","Delesseux","du Faubourg Saint-Honoré","du Faubourg-Saint-Denis","de la Ferronnerie","des Francs-Bourgeois","des Grands Augustins","de la Harpe","du Havre","de la Huchette","Joubert","Laffitte","Lepic","des Lombards","Marcadet","Molière","Monsieur-le-Prince","de Montmorency","Montorgueil","Mouffetard","de Nesle","Oberkampf","de l'Odéon","d'Orsel","de la Paix","des Panoramas","Pastourelle","Pierre Charron","de la Pompe","de Presbourg","de Provence","de Richelieu","de Rivoli","des Rosiers","Royale","d'Abbeville","Saint-Honoré","Saint-Bernard","Saint-Denis","Saint-Dominique","Saint-Jacques","Saint-Séverin","des Saussaies","de Seine","de Solférino","Du Sommerard","de Tilsitt","Vaneau","de Vaugirard","de la Victoire","Zadkine"],street_name:["#{street_prefix} #{street_suffix}"],street_address:["#{building_number} #{street_name}"],default_country:["France"]},fr.company={suffix:["SARL","SA","EURL","SAS","SEM","SCOP","GIE","EI"],adjective:["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],descriptor:["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],noun:["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],bs_verb:["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],bs_adjective:["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"],bs_noun:["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"],name:["#{Name.last_name} #{suffix}","#{Name.last_name} et #{Name.last_name}"]},fr.internet={free_email:["gmail.com","yahoo.fr","hotmail.fr"],domain_suffix:["com","fr","eu","info","name","net","org"]},fr.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"],supplemental:["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]},fr.name={first_name:["Enzo","Lucas","Mathis","Nathan","Thomas","Hugo","Théo","Tom","Louis","Raphaël","Clément","Léo","Mathéo","Maxime","Alexandre","Antoine","Yanis","Paul","Baptiste","Alexis","Gabriel","Arthur","Jules","Ethan","Noah","Quentin","Axel","Evan","Mattéo","Romain","Valentin","Maxence","Noa","Adam","Nicolas","Julien","Mael","Pierre","Rayan","Victor","Mohamed","Adrien","Kylian","Sacha","Benjamin","Léa","Clara","Manon","Chloé","Camille","Ines","Sarah","Jade","Lola","Anaïs","Lucie","Océane","Lilou","Marie","Eva","Romane","Lisa","Zoe","Julie","Mathilde","Louise","Juliette","Clémence","Célia","Laura","Lena","Maëlys","Charlotte","Ambre","Maeva","Pauline","Lina","Jeanne","Lou","Noémie","Justine","Louna","Elisa","Alice","Emilie","Carla","Maëlle","Alicia","Mélissa"],last_name:["Martin","Bernard","Dubois","Thomas","Robert","Richard","Petit","Durand","Leroy","Moreau","Simon","Laurent","Lefebvre","Michel","Garcia","David","Bertrand","Roux","Vincent","Fournier","Morel","Girard","Andre","Lefevre","Mercier","Dupont","Lambert","Bonnet","Francois","Martinez","Legrand","Garnier","Faure","Rousseau","Blanc","Guerin","Muller","Henry","Roussel","Nicolas","Perrin","Morin","Mathieu","Clement","Gauthier","Dumont","Lopez","Fontaine","Chevalier","Robin","Masson","Sanchez","Gerard","Nguyen","Boyer","Denis","Lemaire","Duval","Joly","Gautier","Roger","Roche","Roy","Noel","Meyer","Lucas","Meunier","Jean","Perez","Marchand","Dufour","Blanchard","Marie","Barbier","Brun","Dumas","Brunet","Schmitt","Leroux","Colin","Fernandez","Pierre","Renard","Arnaud","Rolland","Caron","Aubert","Giraud","Leclerc","Vidal","Bourgeois","Renaud","Lemoine","Picard","Gaillard","Philippe","Leclercq","Lacroix","Fabre","Dupuis","Olivier","Rodriguez","Da silva","Hubert","Louis","Charles","Guillot","Riviere","Le gall","Guillaume","Adam","Rey","Moulin","Gonzalez","Berger","Lecomte","Menard","Fleury","Deschamps","Carpentier","Julien","Benoit","Paris","Maillard","Marchal","Aubry","Vasseur","Le roux","Renault","Jacquet","Collet","Prevost","Poirier","Charpentier","Royer","Huet","Baron","Dupuy","Pons","Paul","Laine","Carre","Breton","Remy","Schneider","Perrot","Guyot","Barre","Marty","Cousin"],prefix:["M","Mme","Mlle","Dr","Prof"],title:{job:["Superviseur","Executif","Manager","Ingenieur","Specialiste","Directeur","Coordinateur","Administrateur","Architecte","Analyste","Designer","Technicien","Developpeur","Producteur","Consultant","Assistant","Agent","Stagiaire"]},name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{last_name} #{first_name}"]},fr.phone_number={formats:["01########","02########","03########","04########","05########","06########","07########","+33 1########","+33 2########","+33 3########","+33 4########","+33 5########","+33 6########","+33 7########"]};

},{}],106:[function(require,module,exports){
var it={};module.exports=it,it.title="Italian",it.address={city_prefix:["San","Borgo","Sesto","Quarto","Settimo"],city_suffix:["a mare","lido","ligure","del friuli","salentino","calabro","veneto","nell'emilia","umbro","laziale","terme","sardo"],country:["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antartide (territori a sud del 60° parallelo)","Antigua e Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Bielorussia","Belgio","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia e Herzegovina","Botswana","Bouvet Island (Bouvetoya)","Brasile","Territorio dell'arcipelago indiano","Isole Vergini Britanniche","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambogia","Cameroon","Canada","Capo Verde","Isole Cayman","Repubblica Centrale Africana","Chad","Cile","Cina","Isola di Pasqua","Isola di Cocos (Keeling)","Colombia","Comoros","Congo","Isole Cook","Costa Rica","Costa d'Avorio","Croazia","Cuba","Cipro","Repubblica Ceca","Danimarca","Gibuti","Repubblica Dominicana","Equador","Egitto","El Salvador","Guinea Equatoriale","Eritrea","Estonia","Etiopia","Isole Faroe","Isole Falkland (Malvinas)","Fiji","Finlandia","Francia","Guyana Francese","Polinesia Francese","Territori Francesi del sud","Gabon","Gambia","Georgia","Germania","Ghana","Gibilterra","Grecia","Groenlandia","Grenada","Guadalupa","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Città del Vaticano","Honduras","Hong Kong","Ungheria","Islanda","India","Indonesia","Iran","Iraq","Irlanda","Isola di Man","Israele","Italia","Giamaica","Giappone","Jersey","Giordania","Kazakhstan","Kenya","Kiribati","Korea","Kuwait","Republicca Kirgiza","Repubblica del Laos","Latvia","Libano","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lituania","Lussemburgo","Macao","Macedonia","Madagascar","Malawi","Malesia","Maldive","Mali","Malta","Isole Marshall","Martinica","Mauritania","Mauritius","Mayotte","Messico","Micronesia","Moldova","Principato di Monaco","Mongolia","Montenegro","Montserrat","Marocco","Mozambico","Myanmar","Namibia","Nauru","Nepal","Antille Olandesi","Olanda","Nuova Caledonia","Nuova Zelanda","Nicaragua","Niger","Nigeria","Niue","Isole Norfolk","Northern Mariana Islands","Norvegia","Oman","Pakistan","Palau","Palestina","Panama","Papua Nuova Guinea","Paraguay","Peru","Filippine","Pitcairn Islands","Polonia","Portogallo","Porto Rico","Qatar","Reunion","Romania","Russia","Rwanda","San Bartolomeo","Sant'Elena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Arabia Saudita","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovenia","Isole Solomon","Somalia","Sud Africa","Georgia del sud e South Sandwich Islands","Spagna","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Svezia","Svizzera","Siria","Taiwan","Tajikistan","Tanzania","Tailandia","Timor-Leste","Togo","Tokelau","Tonga","Trinidad e Tobago","Tunisia","Turchia","Turkmenistan","Isole di Turks and Caicos","Tuvalu","Uganda","Ucraina","Emirati Arabi Uniti","Regno Unito","Stati Uniti d'America","United States Minor Outlying Islands","Isole Vergini Statunitensi","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"],building_number:["###","##","#"],street_suffix:["Piazza","Strada","Via","Borgo","Contrada","Rotonda","Incrocio"],secondary_address:["Appartamento ##","Piano #"],postcode:["#####"],state:["Agrigento","Alessandria","Ancona","Aosta","Arezzo","Ascoli Piceno","Asti","Avellino","Bari","Barletta-Andria-Trani","Belluno","Benevento","Bergamo","Biella","Bologna","Bolzano","Brescia","Brindisi","Cagliari","Caltanissetta","Campobasso","Carbonia-Iglesias","Caserta","Catania","Catanzaro","Chieti","Como","Cosenza","Cremona","Crotone","Cuneo","Enna","Fermo","Ferrara","Firenze","Foggia","Forlì-Cesena","Frosinone","Genova","Gorizia","Grosseto","Imperia","Isernia","La Spezia","L'Aquila","Latina","Lecce","Lecco","Livorno","Lodi","Lucca","Macerata","Mantova","Massa-Carrara","Matera","Messina","Milano","Modena","Monza e della Brianza","Napoli","Novara","Nuoro","Olbia-Tempio","Oristano","Padova","Palermo","Parma","Pavia","Perugia","Pesaro e Urbino","Pescara","Piacenza","Pisa","Pistoia","Pordenone","Potenza","Prato","Ragusa","Ravenna","Reggio Calabria","Reggio Emilia","Rieti","Rimini","Roma","Rovigo","Salerno","Medio Campidano","Sassari","Savona","Siena","Siracusa","Sondrio","Taranto","Teramo","Terni","Torino","Ogliastra","Trapani","Trento","Treviso","Trieste","Udine","Varese","Venezia","Verbano-Cusio-Ossola","Vercelli","Verona","Vibo Valentia","Vicenza","Viterbo"],state_abbr:["AG","AL","AN","AO","AR","AP","AT","AV","BA","BT","BL","BN","BG","BI","BO","BZ","BS","BR","CA","CL","CB","CI","CE","CT","CZ","CH","CO","CS","CR","KR","CN","EN","FM","FE","FI","FG","FC","FR","GE","GO","GR","IM","IS","SP","AQ","LT","LE","LC","LI","LO","LU","MC","MN","MS","MT","ME","MI","MO","MB","NA","NO","NU","OT","OR","PD","PA","PR","PV","PG","PU","PE","PC","PI","PT","PN","PZ","PO","RG","RA","RC","RE","RI","RN","RM","RO","SA","VS","SS","SV","SI","SR","SO","TA","TE","TR","TO","OG","TP","TN","TV","TS","UD","VA","VE","VB","VC","VR","VV","VI","VT"],city:["#{city_prefix} #{Name.first_name} #{city_suffix}","#{city_prefix} #{Name.first_name}","#{Name.first_name} #{city_suffix}","#{Name.last_name} #{city_suffix}"],street_name:["#{street_suffix} #{Name.first_name}","#{street_suffix} #{Name.last_name}"],street_address:["#{street_name} #{building_number}","#{street_name} #{building_number}, #{secondary_address}"],default_country:["Italia"]},it.company={suffix:["SPA","e figli","Group","s.r.l."],noun:["Abilità","Access","Adattatore","Algoritmo","Alleanza","Analizzatore","Applicazione","Approccio","Architettura","Archivio","Intelligenza artificiale","Array","Attitudine","Benchmark","Capacità","Sfida","Circuito","Collaborazione","Complessità","Concetto","Conglomerato","Contingenza","Core","Database","Data-warehouse","Definizione","Emulazione","Codifica","Criptazione","Firmware","Flessibilità","Previsione","Frame","framework","Funzione","Funzionalità","Interfaccia grafica","Hardware","Help-desk","Gerarchia","Hub","Implementazione","Infrastruttura","Iniziativa","Installazione","Set di istruzioni","Interfaccia","Soluzione internet","Intranet","Conoscenza base","Matrici","Matrice","Metodologia","Middleware","Migrazione","Modello","Moderazione","Monitoraggio","Moratoria","Rete","Architettura aperta","Sistema aperto","Orchestrazione","Paradigma","Parallelismo","Policy","Portale","Struttura di prezzo","Prodotto","Produttività","Progetto","Proiezione","Protocollo","Servizio clienti","Software","Soluzione","Standardizzazione","Strategia","Struttura","Successo","Sovrastruttura","Supporto","Sinergia","Task-force","Finestra temporale","Strumenti","Utilizzazione","Sito web","Forza lavoro"],descriptor:["adattiva","avanzata","migliorata","assimilata","automatizzata","bilanciata","centralizzata","compatibile","configurabile","cross-platform","decentralizzata","digitalizzata","distribuita","piccola","ergonomica","esclusiva","espansa","estesa","configurabile","fondamentale","orizzontale","implementata","innovativa","integrata","intuitiva","inversa","gestita","obbligatoria","monitorata","multi-canale","multi-laterale","open-source","operativa","ottimizzata","organica","persistente","polarizzata","proattiva","programmabile","progressiva","reattiva","riallineata","ricontestualizzata","ridotta","robusta","sicura","condivisibile","stand-alone","switchabile","sincronizzata","sinergica","totale","universale","user-friendly","versatile","virtuale","visionaria"],adjective:["24 ore","24/7","terza generazione","quarta generazione","quinta generazione","sesta generazione","asimmetrica","asincrona","background","bi-direzionale","biforcata","bottom-line","coerente","coesiva","composita","sensibile al contesto","basta sul contesto","basata sul contenuto","dedicata","didattica","direzionale","discreta","dinamica","eco-centrica","esecutiva","esplicita","full-range","globale","euristica","alto livello","olistica","omogenea","ibrida","impattante","incrementale","intangibile","interattiva","intermediaria","locale","logistica","massimizzata","metodica","mission-critical","mobile","modulare","motivazionale","multimedia","multi-tasking","nazionale","neutrale","nextgeneration","non-volatile","object-oriented","ottima","ottimizzante","radicale","real-time","reciproca","regionale","responsiva","scalabile","secondaria","stabile","statica","sistematica","sistemica","tangibile","terziaria","uniforme","valore aggiunto"],bs_noun:["partnerships","comunità","ROI","soluzioni","e-services","nicchie","tecnologie","contenuti","supply-chains","convergenze","relazioni","architetture","interfacce","mercati","e-commerce","sistemi","modelli","schemi","reti","applicazioni","metriche","e-business","funzionalità","esperienze","webservices","metodologie"],bs_verb:["implementate","utilizzo","integrate","ottimali","evolutive","abilitate","reinventate","aggregate","migliorate","incentivate","monetizzate","sinergizzate","strategiche","deploy","marchi","accrescitive","target","sintetizzate","spedizioni","massimizzate","innovazione","guida","estensioni","generate","exploit","transizionali","matrici","ricontestualizzate"],bs_adjective:["valore aggiunto","verticalizzate","proattive","forti","rivoluzionari","scalabili","innovativi","intuitivi","strategici","e-business","mission-critical","24/7","globali","B2B","B2C","granulari","virtuali","virali","dinamiche","magnetiche","web","interattive","sexy","back-end","real-time","efficienti","front-end","distributivi","estensibili","mondiali","open-source","cross-platform","sinergiche","out-of-the-box","enterprise","integrate","di impatto","wireless","trasparenti","next-generation","cutting-edge","visionari","plug-and-play","collaborative","olistiche","ricche"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name} #{suffix}","#{Name.last_name}, #{Name.last_name} e #{Name.last_name} #{suffix}"]},it.internet={free_email:["gmail.com","yahoo.com","hotmail.com","email.it","libero.it","yahoo.it"],domain_suffix:["com","com","com","net","org","it","it","it"]},it.name={first_name:["Aaron","Akira","Alberto","Alessandro","Alighieri","Amedeo","Amos","Anselmo","Antonino","Arcibaldo","Armando","Artes","Audenico","Ausonio","Bacchisio","Battista","Bernardo","Boris","Caio","Carlo","Cecco","Cirino","Cleros","Costantino","Damiano","Danny","Davide","Demian","Dimitri","Domingo","Dylan","Edilio","Egidio","Elio","Emanuel","Enrico","Ercole","Ermes","Ethan","Eusebio","Evangelista","Fabiano","Ferdinando","Fiorentino","Flavio","Fulvio","Gabriele","Gastone","Germano","Giacinto","Gianantonio","Gianleonardo","Gianmarco","Gianriccardo","Gioacchino","Giordano","Giuliano","Graziano","Guido","Harry","Iacopo","Ilario","Ione","Italo","Jack","Jari","Joey","Joseph","Kai","Kociss","Laerte","Lauro","Leonardo","Liborio","Lorenzo","Ludovico","Maggiore","Manuele","Mariano","Marvin","Matteo","Mauro","Michael","Mirco","Modesto","Muzio","Nabil","Nathan","Nick","Noah","Odino","Olo","Oreste","Osea","Pablo","Patrizio","Piererminio","Pierfrancesco","Piersilvio","Priamo","Quarto","Quirino","Radames","Raniero","Renato","Rocco","Romeo","Rosalino","Rudy","Sabatino","Samuel","Santo","Sebastian","Serse","Silvano","Sirio","Tancredi","Terzo","Timoteo","Tolomeo","Trevis","Ubaldo","Ulrico","Valdo","Neri","Vinicio","Walter","Xavier","Yago","Zaccaria","Abramo","Adriano","Alan","Albino","Alessio","Alighiero","Amerigo","Anastasio","Antimo","Antonio","Arduino","Aroldo","Arturo","Augusto","Avide","Baldassarre","Bettino","Bortolo","Caligola","Carmelo","Celeste","Ciro","Costanzo","Dante","Danthon","Davis","Demis","Dindo","Domiziano","Edipo","Egisto","Eliziario","Emidio","Enzo","Eriberto","Erminio","Ettore","Eustachio","Fabio","Fernando","Fiorenzo","Folco","Furio","Gaetano","Gavino","Gerlando","Giacobbe","Giancarlo","Gianmaria","Giobbe","Giorgio","Giulio","Gregorio","Hector","Ian","Ippolito","Ivano","Jacopo","Jarno","Joannes","Joshua","Karim","Kris","Lamberto","Lazzaro","Leone","Lino","Loris","Luigi","Manfredi","Marco","Marino","Marzio","Mattia","Max","Michele","Mirko","Moreno","Nadir","Nazzareno","Nestore","Nico","Noel","Odone","Omar","Orfeo","Osvaldo","Pacifico","Pericle","Pietro","Primo","Quasimodo","Radio","Raoul","Renzo","Rodolfo","Romolo","Rosolino","Rufo","Sabino","Sandro","Sasha","Secondo","Sesto","Silverio","Siro","Tazio","Teseo","Timothy","Tommaso","Tristano","Umberto","Ariel","Artemide","Assia","Azue","Benedetta","Bibiana","Brigitta","Carmela","Cassiopea","Cesidia","Cira","Clea","Cleopatra","Clodovea","Concetta","Cosetta","Cristyn","Damiana","Danuta","Deborah","Demi","Diamante","Diana","Donatella","Doriana","Edvige","Elda","Elga","Elsa","Emilia","Enrica","Erminia","Eufemia","Evita","Fatima","Felicia","Filomena","Flaviana","Fortunata","Gelsomina","Genziana","Giacinta","Gilda","Giovanna","Giulietta","Grazia","Guendalina","Helga","Ileana","Ingrid","Irene","Isabel","Isira","Ivonne","Jelena","Jole","Claudia","Kayla","Kristel","Laura","Lucia","Lia","Lidia","Lisa","Loredana","Loretta","Luce","Lucrezia","Luna","Maika","Marcella","Maria","Mariagiulia","Marianita","Mariapia","Marieva","Marina","Maristella","Maruska","Matilde","Mecren","Mercedes","Mietta","Miriana","Miriam","Monia","Morgana","Naomi","Nayade","Nicoletta","Ninfa","Noemi","Nunzia","Olimpia","Oretta","Ortensia","Penelope","Piccarda","Prisca","Rebecca","Rita","Rosalba","Rosaria","Rosita","Ruth","Samira","Sarita","Selvaggia","Shaira","Sibilla","Soriana","Thea","Tosca","Ursula","Vania","Vera","Vienna","Violante","Vitalba","Zelida"],last_name:["Amato","Barbieri","Barone","Basile","Battaglia","Bellini","Benedetti","Bernardi","Bianc","Bianchi","Bruno","Caputo","Carbon","Caruso","Cattaneo","Colombo","Cont","Conte","Coppola","Costa","Costantin","D'amico","D'angelo","Damico","De Angelis","De luca","De rosa","De Santis","Donati","Esposito","Fabbri","Farin","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Fior","Fontana","Galli","Gallo","Gatti","Gentile","Giordano","Giuliani","Grassi","Grasso","Greco","Guerra","Leone","Lombardi","Lombardo","Longo","Mancini","Marchetti","Marian","Marini","Marino","Martinelli","Martini","Martino","Mazza","Messina","Milani","Montanari","Monti","Morelli","Moretti","Negri","Neri","Orlando","Pagano","Palmieri","Palumbo","Parisi","Pellegrini","Pellegrino","Piras","Ricci","Rinaldi","Riva","Rizzi","Rizzo","Romano","Ross","Rossetti","Ruggiero","Russo","Sala","Sanna","Santoro","Sartori","Serr","Silvestri","Sorrentino","Testa","Valentini","Villa","Vitale","Vitali"],prefix:["Sig.","Dott.","Dr.","Ing."],suffix:[],name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]},it.phone_number={formats:["+## ### ## ## ####","+## ## #######","+## ## ########","+## ### #######","+## ### ########","+## #### #######","+## #### ########","0## ### ####","+39 0## ### ###","3## ### ###","+39 3## ### ###"]};

},{}],107:[function(require,module,exports){
var ja={};module.exports=ja,ja.title="Japanese",ja.address={postcode:["###-####"],state:["北海道","青森県","岩手県","宮城県","秋田県","山形県","福島県","茨城県","栃木県","群馬県","埼玉県","千葉県","東京都","神奈川県","新潟県","富山県","石川県","福井県","山梨県","長野県","岐阜県","静岡県","愛知県","三重県","滋賀県","京都府","大阪府","兵庫県","奈良県","和歌山県","鳥取県","島根県","岡山県","広島県","山口県","徳島県","香川県","愛媛県","高知県","福岡県","佐賀県","長崎県","熊本県","大分県","宮崎県","鹿児島県","沖縄県"],state_abbr:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47"],city_prefix:["北","東","西","南","新","湖","港"],city_suffix:["市","区","町","村"],city:["#{city_prefix}#{Name.first_name}#{city_suffix}","#{Name.first_name}#{city_suffix}","#{city_prefix}#{Name.last_name}#{city_suffix}","#{Name.last_name}#{city_suffix}"],street_name:["#{Name.first_name}#{street_suffix}","#{Name.last_name}#{street_suffix}"]},ja.phone_number={formats:["0####-#-####","0###-##-####","0##-###-####","0#-####-####"]},ja.cell_phone={formats:["090-####-####","080-####-####","070-####-####"]},ja.name={last_name:["佐藤","鈴木","高橋","田中","渡辺","伊藤","山本","中村","小林","加藤","吉田","山田","佐々木","山口","斎藤","松本","井上","木村","林","清水"],first_name:["大翔","蓮","颯太","樹","大和","陽翔","陸斗","太一","海翔","蒼空","翼","陽菜","結愛","結衣","杏","莉子","美羽","結菜","心愛","愛菜","美咲"],name:["#{last_name} #{first_name}"]};

},{}],108:[function(require,module,exports){
var ko={};module.exports=ko,ko.title="Korean",ko.address={postcode:["###-###"],state:["강원","경기","경남","경북","광주","대구","대전","부산","서울","울산","인천","전남","전북","제주","충남","충북","세종"],state_abbr:["강원","경기","경남","경북","광주","대구","대전","부산","서울","울산","인천","전남","전북","제주","충남","충북","세종"],city_suffix:["구","시","군"],city_name:["강릉","양양","인제","광주","구리","부천","밀양","통영","창원","거창","고성","양산","김천","구미","영주","광산","남","북","고창","군산","남원","동작","마포","송파","용산","부평","강화","수성"],city:["#{city_name}#{city_suffix}"],street_root:["상계","화곡","신정","목","잠실","면목","주안","안양","중","정왕","구로","신월","연산","부평","창","만수","중계","검단","시흥","상도","방배","장유","상","광명","신길","행신","대명","동탄"],street_suffix:["읍","면","동"],street_name:["#{street_root}#{street_suffix}"]},ko.phone_number={formats:["0#-#####-####","0##-###-####","0##-####-####"]},ko.company={suffix:["연구소","게임즈","그룹","전자","물산","코리아"],prefix:["주식회사","한국"],name:["#{prefix} #{Name.first_name}","#{Name.first_name} #{suffix}"]},ko.internet={free_email:["gmail.com","yahoo.co.kr","hanmail.net","naver.com"],domain_suffix:["co.kr","com","biz","info","ne.kr","net","or.kr","org"]},ko.lorem={words:["국가는","법률이","정하는","바에","의하여","재외국민을","보호할","의무를","진다.","모든","국민은","신체의","자유를","가진다.","국가는","전통문화의","계승·발전과","민족문화의","창달에","노력하여야","한다.","통신·방송의","시설기준과","신문의","기능을","보장하기","위하여","필요한","사항은","법률로","정한다.","헌법에","의하여","체결·공포된","조약과","일반적으로","승인된","국제법규는","국내법과","같은","효력을","가진다.","다만,","현행범인인","경우와","장기","3년","이상의","형에","해당하는","죄를","범하고","도피","또는","증거인멸의","염려가","있을","때에는","사후에","영장을","청구할","수","있다.","저작자·발명가·과학기술자와","예술가의","권리는","법률로써","보호한다.","형사피고인은","유죄의","판결이","확정될","때까지는","무죄로","추정된다.","모든","국민은","행위시의","법률에","의하여","범죄를","구성하지","아니하는","행위로","소추되지","아니하며,","동일한","범죄에","대하여","거듭","처벌받지","아니한다.","국가는","평생교육을","진흥하여야","한다.","모든","국민은","사생활의","비밀과","자유를","침해받지","아니한다.","의무교육은","무상으로","한다.","저작자·발명가·과학기술자와","예술가의","권리는","법률로써","보호한다.","국가는","모성의","보호를","위하여","노력하여야","한다.","헌법에","의하여","체결·공포된","조약과","일반적으로","승인된","국제법규는","국내법과","같은","효력을","가진다."]},ko.name={last_name:["김","이","박","최","정","강","조","윤","장","임","오","한","신","서","권","황","안","송","류","홍"],first_name:["서연","민서","서현","지우","서윤","지민","수빈","하은","예은","윤서","민준","지후","지훈","준서","현우","예준","건우","현준","민재","우진","은주"],name:["#{last_name} #{first_name}"]};

},{}],109:[function(require,module,exports){
var nb_NO={};module.exports=nb_NO,nb_NO.title="Norwegian",nb_NO.address={city_root:["Fet","Gjes","Høy","Inn","Fager","Lille","Lo","Mal","Nord","Nær","Sand","Sme","Stav","Stor","Tand","Ut","Vest"],city_suffix:["berg","borg","by","bø","dal","eid","fjell","fjord","foss","grunn","hamn","havn","helle","mark","nes","odden","sand","sjøen","stad","strand","strøm","sund","vik","vær","våg","ø","øy","ås"],street_prefix:["Øvre","Nedre","Søndre","Gamle","Østre","Vestre"],street_root:["Eike","Bjørke","Gran","Vass","Furu","Litj","Lille","Høy","Fosse","Elve","Ku","Konvall","Soldugg","Hestemyr","Granitt","Hegge","Rogne","Fiol","Sol","Ting","Malm","Klokker","Preste","Dam","Geiterygg","Bekke","Berg","Kirke","Kors","Bru","Blåveis","Torg","Sjø"],street_suffix:["alléen","bakken","berget","bråten","eggen","engen","ekra","faret","flata","gata","gjerdet","grenda","gropa","hagen","haugen","havna","holtet","høgda","jordet","kollen","kroken","lia","lunden","lyngen","løkka","marka","moen","myra","plassen","ringen","roa","røa","skogen","skrenten","spranget","stien","stranda","stubben","stykket","svingen","tjernet","toppen","tunet","vollen","vika","åsen"],common_street_suffix:["sgate","svei","s Gate","s Vei","gata","veien"],building_number:["#","##"],secondary_address:["Leil. ###","Oppgang A","Oppgang B"],postcode:["####","####","####","0###"],state:[""],city:["#{city_root}#{city_suffix}"],street_name:["#{street_root}#{street_suffix}","#{street_prefix} #{street_root}#{street_suffix}","#{Name.first_name}#{common_street_suffix}","#{Name.last_name}#{common_street_suffix}"],street_address:["#{street_name} #{building_number}"],default_country:["Norge"]},nb_NO.company={suffix:["Gruppen","AS","ASA","BA","RFH","og Sønner"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} og #{Name.last_name}"]},nb_NO.internet={domain_suffix:["no","com","net","org"]},nb_NO.name={first_name:["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine","Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"],feminine_name:["Emma","Sara","Thea","Ida","Julie","Nora","Emilie","Ingrid","Hanna","Maria","Sofie","Anna","Malin","Amalie","Vilde","Frida","Andrea","Tuva","Victoria","Mia","Karoline","Mathilde","Martine","Linnea","Marte","Hedda","Marie","Helene","Silje","Leah","Maja","Elise","Oda","Kristine","Aurora","Kaja","Camilla","Mari","Maren","Mina","Selma","Jenny","Celine","Eline","Sunniva","Natalie","Tiril","Synne","Sandra","Madeleine"],masculine_name:["Markus","Mathias","Kristian","Jonas","Andreas","Alexander","Martin","Sander","Daniel","Magnus","Henrik","Tobias","Kristoffer","Emil","Adrian","Sebastian","Marius","Elias","Fredrik","Thomas","Sondre","Benjamin","Jakob","Oliver","Lucas","Oskar","Nikolai","Filip","Mats","William","Erik","Simen","Ole","Eirik","Isak","Kasper","Noah","Lars","Joakim","Johannes","Håkon","Sindre","Jørgen","Herman","Anders","Jonathan","Even","Theodor","Mikkel","Aksel"],last_name:["Johansen","Hansen","Andersen","Kristiansen","Larsen","Olsen","Solberg","Andresen","Pedersen","Nilsen","Berg","Halvorsen","Karlsen","Svendsen","Jensen","Haugen","Martinsen","Eriksen","Sørensen","Johnsen","Myhrer","Johannessen","Nielsen","Hagen","Pettersen","Bakke","Skuterud","Løken","Gundersen","Strand","Jørgensen","Kvarme","Røed","Sæther","Stensrud","Moe","Kristoffersen","Jakobsen","Holm","Aas","Lie","Moen","Andreassen","Vedvik","Nguyen","Jacobsen","Torgersen","Ruud","Krogh","Christiansen","Bjerke","Aalerud","Borge","Sørlie","Berge","Østli","Ødegård","Torp","Henriksen","Haukelidsæter","Fjeld","Danielsen","Aasen","Fredriksen","Dahl","Berntsen","Arnesen","Wold","Thoresen","Solheim","Skoglund","Bakken","Amundsen","Solli","Smogeli","Kristensen","Glosli","Fossum","Evensen","Eide","Carlsen","Østby","Vegge","Tangen","Smedsrud","Olstad","Lunde","Kleven","Huseby","Bjørnstad","Ryan","Rasmussen","Nygård","Nordskaug","Nordby","Mathisen","Hopland","Gran","Finstad","Edvardsen"],prefix:["Dr.","Prof."],suffix:["Jr.","Sr.","I","II","III","IV","V"],name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{feminine_name} #{feminine_name} #{last_name}","#{masculine_name} #{masculine_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name}"]},nb_NO.phone_number={formats:["########","## ## ## ##","### ## ###","+47 ## ## ## ##"]};

},{}],110:[function(require,module,exports){
var nep={};module.exports=nep,nep.title="Nepalese",nep.name={first_name:["Aarav","Ajita","Amit","Amita","Amrit","Arijit","Ashmi","Asmita","Bibek","Bijay","Bikash","Bina","Bishal","Bishnu","Buddha","Deepika","Dipendra","Gagan","Ganesh","Khem","Krishna","Laxmi","Manisha","Nabin","Nikita","Niraj","Nischal","Padam","Pooja","Prabin","Prakash","Prashant","Prem","Purna","Rajendra","Rajina","Raju","Rakesh","Ranjan","Ratna","Sagar","Sandeep","Sanjay","Santosh","Sarita","Shilpa","Shirisha","Shristi","Siddhartha","Subash","Sumeet","Sunita","Suraj","Susan","Sushant"],last_name:["Adhikari","Aryal","Baral","Basnet","Bastola","Basynat","Bhandari","Bhattarai","Chettri","Devkota","Dhakal","Dongol","Ghale","Gurung","Gyawali","Hamal","Jung","KC","Kafle","Karki","Khadka","Koirala","Lama","Limbu","Magar","Maharjan","Niroula","Pandey","Pradhan","Rana","Raut","Sai","Shai","Shakya","Sherpa","Shrestha","Subedi","Tamang","Thapa"]},nep.address={postcode:[0],state:["Baglung","Banke","Bara","Bardiya","Bhaktapur","Bhojupu","Chitwan","Dailekh","Dang","Dhading","Dhankuta","Dhanusa","Dolakha","Dolpha","Gorkha","Gulmi","Humla","Ilam","Jajarkot","Jhapa","Jumla","Kabhrepalanchok","Kalikot","Kapilvastu","Kaski","Kathmandu","Lalitpur","Lamjung","Manang","Mohottari","Morang","Mugu","Mustang","Myagdi","Nawalparasi","Nuwakot","Palpa","Parbat","Parsa","Ramechhap","Rauswa","Rautahat","Rolpa","Rupandehi","Sankhuwasabha","Sarlahi","Sindhuli","Sindhupalchok","Sunsari","Surket","Syangja","Tanahu","Terhathum"],city:["Bhaktapur","Biratnagar","Birendranagar","Birgunj","Butwal","Damak","Dharan","Gaur","Gorkha","Hetauda","Itahari","Janakpur","Kathmandu","Lahan","Nepalgunj","Pokhara"],default_country:["Nepal"]},nep.internet={free_email:["worldlink.com.np","gmail.com","yahoo.com","hotmail.com"],domain_suffix:["np","com","info","net","org"]},nep.company={suffix:["Pvt Ltd","Group","Ltd","Limited"]},nep.phone_number={formats:["##-#######","+977-#-#######","+977########"]};

},{}],111:[function(require,module,exports){
var nl={};module.exports=nl,nl.title="Dutch",nl.address={city_prefix:["Noord","Oost","West","Zuid","Nieuw","Oud"],city_suffix:["dam","berg"," aan de Rijn"," aan de IJssel","swaerd","endrecht","recht","ambacht","enmaes","wijk","sland","stroom","sluus","dijk","dorp","burg","veld","sluis","koop","lek","hout","geest","kerk","woude","hoven","hoten","ingen","plas","meer"],city:["#{Name.first_name}#{city_suffix}","#{Name.last_name}#{city_suffix}","#{city_prefix} #{Name.first_name}#{city_suffix}","#{city_prefix} #{Name.last_name}#{city_suffix}"],country:["Afghanistan","Akrotiri","Albanië","Algerije","Amerikaanse Maagdeneilanden","Amerikaans-Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua en Barbuda","Arctic Ocean","Argentinië","Armenië","Aruba","Ashmore and Cartier Islands","Atlantic Ocean","Australië","Azerbeidzjan","Bahama's","Bahrein","Bangladesh","Barbados","Belarus","België","Belize","Benin","Bermuda","Bhutan","Bolivië","Bosnië-Herzegovina","Botswana","Bouvet Island","Brazilië","British Indian Ocean Territory","Britse Maagdeneilanden","Brunei","Bulgarije","Burkina Faso","Burundi","Cambodja","Canada","Caymaneilanden","Centraal-Afrikaanse Republiek","Chili","China","Christmas Island","Clipperton Island","Cocos (Keeling) Islands","Colombia","Comoren (Unie)","Congo (Democratische Republiek)","Congo (Volksrepubliek)","Cook","Coral Sea Islands","Costa Rica","Cuba","Cyprus","Denemarken","Dhekelia","Djibouti","Dominica","Dominicaanse Republiek","Duitsland","Ecuador","Egypte","El Salvador","Equatoriaal-Guinea","Eritrea","Estland","Ethiopië","European Union","Falkland","Faroe Islands","Fiji","Filipijnen","Finland","Frankrijk","Frans-Polynesië","French Southern and Antarctic Lands","Gabon","Gambia","Gaza Strip","Georgië","Ghana","Gibraltar","Grenada","Griekenland","Groenland","Guam","Guatemala","Guernsey","Guinea","Guinee-Bissau","Guyana","Haïti","Heard Island and McDonald Islands","Heilige Stoel","Honduras","Hongarije","Hongkong","Ierland","IJsland","India","Indian Ocean","Indonesië","Irak","Iran","Isle of Man","Israël","Italië","Ivoorkust","Jamaica","Jan Mayen","Japan","Jemen","Jersey","Jordanië","Kaapverdië","Kameroen","Kazachstan","Kenia","Kirgizstan","Kiribati","Koeweit","Kroatië","Laos","Lesotho","Letland","Libanon","Liberia","Libië","Liechtenstein","Litouwen","Luxemburg","Macao","Macedonië","Madagaskar","Malawi","Maldiven","Maleisië","Mali","Malta","Marokko","Marshall Islands","Mauritanië","Mauritius","Mayotte","Mexico","Micronesia, Federated States of","Moldavië","Monaco","Mongolië","Montenegro","Montserrat","Mozambique","Myanmar","Namibië","Nauru","Navassa Island","Nederland","Nederlandse Antillen","Nepal","Ngwane","Nicaragua","Nieuw-Caledonië","Nieuw-Zeeland","Niger","Nigeria","Niue","Noordelijke Marianen","Noord-Korea","Noorwegen","Norfolk Island","Oekraïne","Oezbekistan","Oman","Oostenrijk","Pacific Ocean","Pakistan","Palau","Panama","Papoea-Nieuw-Guinea","Paracel Islands","Paraguay","Peru","Pitcairn","Polen","Portugal","Puerto Rico","Qatar","Roemenië","Rusland","Rwanda","Saint Helena","Saint Lucia","Saint Vincent en de Grenadines","Saint-Pierre en Miquelon","Salomon","Samoa","San Marino","São Tomé en Principe","Saudi-Arabië","Senegal","Servië","Seychellen","Sierra Leone","Singapore","Sint-Kitts en Nevis","Slovenië","Slowakije","Soedan","Somalië","South Georgia and the South Sandwich Islands","Southern Ocean","Spanje","Spratly Islands","Sri Lanka","Suriname","Svalbard","Syrië","Tadzjikistan","Taiwan","Tanzania","Thailand","Timor Leste","Togo","Tokelau","Tonga","Trinidad en Tobago","Tsjaad","Tsjechië","Tunesië","Turkije","Turkmenistan","Turks-en Caicoseilanden","Tuvalu","Uganda","Uruguay","Vanuatu","Venezuela","Verenigd Koninkrijk","Verenigde Arabische Emiraten","Verenigde Staten van Amerika","Vietnam","Wake Island","Wallis en Futuna","Wereld","West Bank","Westelijke Sahara","Zambia","Zimbabwe","Zuid-Afrika","Zuid-Korea","Zweden","Zwitserland"],building_number:["#","##","###","###a","###b","###c","### I","### II","### III"],street_suffix:["straat","laan","weg","plantsoen","park"],secondary_address:["1 hoog","2 hoog","3 hoog"],street_name:["#{Name.first_name}#{street_suffix}","#{Name.last_name}#{street_suffix}"],street_address:["#{street_name} #{building_number}"],postcode:["#### ??"],state:["Noord-Holland","Zuid-Holland","Utrecht","Zeeland","Overijssel","Gelderland","Drenthe","Friesland","Groningen","Noord-Brabant","Limburg","Flevoland"],default_country:["Nederland"]},nl.company={suffix:["BV","V.O.F.","Group","en Zonen"]},nl.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["nl","com","net","org"]},nl.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"],supplemental:["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]},nl.name={first_name:["Amber","Anna","Anne","Anouk","Bas","Bram","Britt","Daan","Emma","Eva","Femke","Finn","Fleur","Iris","Isa","Jan","Jasper","Jayden","Jesse","Johannes","Julia","Julian","Kevin","Lars","Lieke","Lisa","Lotte","Lucas","Luuk","Maud","Max","Mike","Milan","Nick","Niels","Noa","Rick","Roos","Ruben","Sander","Sanne","Sem","Sophie","Stijn","Sven","Thijs","Thijs","Thomas","Tim","Tom"],tussenvoegsel:["van","van de","van den","van 't","van het","de","den"],last_name:["Bakker","Beek","Berg","Boer","Bos","Bosch","Brink","Broek","Brouwer","Bruin","Dam","Dekker","Dijk","Dijkstra","Graaf","Groot","Haan","Hendriks","Heuvel","Hoek","Jacobs","Jansen","Janssen","Jong","Klein","Kok","Koning","Koster","Leeuwen","Linden","Maas","Meer","Meijer","Mulder","Peters","Ruiter","Schouten","Smit","Smits","Stichting","Veen","Ven","Vermeulen","Visser","Vliet","Vos","Vries","Wal","Willems","Wit"],prefix:["Dhr.","Mevr. Dr.","Bsc","Msc","Prof."],suffix:["Jr.","Sr.","I","II","III","IV","V"],name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name} #{suffix}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{tussenvoegsel} #{last_name}","#{first_name} #{tussenvoegsel} #{last_name}"]},nl.phone_number={formats:["(####) ######","##########","06########","06 #### ####"]};

},{}],112:[function(require,module,exports){
var pl={};module.exports=pl,pl.title="Polish",pl.name={first_name:["Aaron","Abraham","Adam","Adrian","Atanazy","Agaton","Alan","Albert","Aleksander","Aleksy","Alfred","Alwar","Ambroży","Anatol","Andrzej","Antoni","Apollinary","Apollo","Arkady","Arkadiusz","Archibald","Arystarch","Arnold","Arseniusz","Artur","August","Baldwin","Bazyli","Benedykt","Beniamin","Bernard","Bertrand","Bertram","Borys","Brajan","Bruno","Cezary","Cecyliusz","Karol","Krystian","Krzysztof","Klarencjusz","Klaudiusz","Klemens","Konrad","Konstanty","Konstantyn","Kornel","Korneliusz","Korneli","Cyryl","Cyrus","Damian","Daniel","Dariusz","Dawid","Dionizy","Demetriusz","Dominik","Donald","Dorian","Edgar","Edmund","Edward","Edwin","Efrem","Efraim","Eliasz","Eleazar","Emil","Emanuel","Erast","Ernest","Eugeniusz","Eustracjusz","Fabian","Feliks","Florian","Franciszek","Fryderyk","Gabriel","Gedeon","Galfryd","Jerzy","Gerald","Gerazym","Gilbert","Gonsalwy","Grzegorz","Gwido","Harald","Henryk","Herbert","Herman","Hilary","Horacy","Hubert","Hugo","Ignacy","Igor","Hilarion","Innocenty","Hipolit","Ireneusz","Erwin","Izaak","Izajasz","Izydor","Jakub","Jeremi","Jeremiasz","Hieronim","Gerald","Joachim","Jan","Janusz","Jonatan","Józef","Jozue","Julian","Juliusz","Justyn","Kalistrat","Kazimierz","Wawrzyniec","Laurenty","Laurencjusz","Łazarz","Leon","Leonard","Leonid","Leon","Ludwik","Łukasz","Lucjan","Magnus","Makary","Marceli","Marek","Marcin","Mateusz","Maurycy","Maksym","Maksymilian","Michał","Miron","Modest","Mojżesz","Natan","Natanael","Nazariusz","Nazary","Nestor","Mikołaj","Nikodem","Olaf","Oleg","Oliwier","Onufry","Orestes","Oskar","Ansgary","Osmund","Pankracy","Pantaleon","Patryk","Patrycjusz","Patrycy","Paweł","Piotr","Filemon","Filip","Platon","Polikarp","Porfiry","Porfiriusz","Prokles","Prokul","Prokop","Kwintyn","Randolf","Rafał","Rajmund","Reginald","Rajnold","Ryszard","Robert","Roderyk","Roger","Roland","Roman","Romeo","Reginald","Rudolf","Samson","Samuel","Salwator","Sebastian","Serafin","Sergiusz","Seweryn","Zygmunt","Sylwester","Szymon","Salomon","Spirydion","Stanisław","Szczepan","Stefan","Terencjusz","Teodor","Tomasz","Tymoteusz","Tobiasz","Walenty","Walentyn","Walerian","Walery","Wiktor","Wincenty","Witalis","Włodzimierz","Władysław","Błażej","Walter","Walgierz","Wacław","Wilfryd","Wilhelm","Ksawery","Ksenofont","Jerzy","Zachariasz","Zachary","Ada","Adelajda","Agata","Agnieszka","Agrypina","Aida","Aleksandra","Alicja","Alina","Amanda","Anastazja","Angela","Andżelika","Angelina","Anna","Hanna","—","Antonina","Ariadna","Aurora","Barbara","Beatrycze","Berta","Brygida","Kamila","Karolina","Karolina","Kornelia","Katarzyna","Cecylia","Karolina","Chloe","Krystyna","Klara","Klaudia","Klementyna","Konstancja","Koralia","Daria","Diana","Dina","Dorota","Edyta","Eleonora","Eliza","Elżbieta","Izabela","Elwira","Emilia","Estera","Eudoksja","Eudokia","Eugenia","Ewa","Ewelina","Ferdynanda","Florencja","Franciszka","Gabriela","Gertruda","Gloria","Gracja","Jadwiga","Helena","Henryka","Nadzieja","Ida","Ilona","Helena","Irena","Irma","Izabela","Izolda","Jakubina","Joanna","Janina","Żaneta","Joanna","Ginewra","Józefina","Judyta","Julia","Julia","Julita","Justyna","Kira","Cyra","Kleopatra","Larysa","Laura","Laurencja","Laurentyna","Lea","Leila","Eleonora","Liliana","Lilianna","Lilia","Lilla","Liza","Eliza","Laura","Ludwika","Luiza","Łucja","Lucja","Lidia","Amabela","Magdalena","Malwina","Małgorzata","Greta","Marianna","Maryna","Marta","Martyna","Maria","Matylda","Maja","Maja","Melania","Michalina","Monika","Nadzieja","Noemi","Natalia","Nikola","Nina","Olga","Olimpia","Oliwia","Ofelia","Patrycja","Paula","Pelagia","Penelopa","Filipa","Paulina","Rachela","Rebeka","Regina","Renata","Rozalia","Róża","Roksana","Rufina","Ruta","Sabina","Sara","Serafina","Sybilla","Sylwia","Zofia","Stella","Stefania","Zuzanna","Tamara","Tacjana","Tekla","Teodora","Teresa","Walentyna","Waleria","Wanesa","Wiara","Weronika","Wiktoria","Wirginia","Bibiana","Bibianna","Wanda","Wilhelmina","Ksawera","Ksenia","Zoe"],last_name:["Adamczak","Adamczyk","Adamek","Adamiak","Adamiec","Adamowicz","Adamski","Adamus","Aleksandrowicz","Andrzejczak","Andrzejewski","Antczak","Augustyn","Augustyniak","Bagiński","Balcerzak","Banach","Banasiak","Banasik","Banaś","Baran","Baranowski","Barański","Bartczak","Bartkowiak","Bartnik","Bartosik","Bednarczyk","Bednarek","Bednarski","Bednarz","Białas","Białek","Białkowski","Bielak","Bielawski","Bielecki","Bielski","Bieniek","Biernacki","Biernat","Bieńkowski","Bilski","Bober","Bochenek","Bogucki","Bogusz","Borek","Borkowski","Borowiec","Borowski","Bożek","Broda","Brzeziński","Brzozowski","Buczek","Buczkowski","Buczyński","Budziński","Budzyński","Bujak","Bukowski","Burzyński","Bąk","Bąkowski","Błaszczak","Błaszczyk","Cebula","Chmiel","Chmielewski","Chmura","Chojnacki","Chojnowski","Cholewa","Chrzanowski","Chudzik","Cichocki","Cichoń","Cichy","Ciesielski","Cieśla","Cieślak","Cieślik","Ciszewski","Cybulski","Cygan","Czaja","Czajka","Czajkowski","Czapla","Czarnecki","Czech","Czechowski","Czekaj","Czerniak","Czerwiński","Czyż","Czyżewski","Dec","Dobosz","Dobrowolski","Dobrzyński","Domagała","Domański","Dominiak","Drabik","Drozd","Drozdowski","Drzewiecki","Dróżdż","Dubiel","Duda","Dudek","Dudziak","Dudzik","Dudziński","Duszyński","Dziedzic","Dziuba","Dąbek","Dąbkowski","Dąbrowski","Dębowski","Dębski","Długosz","Falkowski","Fijałkowski","Filipek","Filipiak","Filipowicz","Flak","Flis","Florczak","Florek","Frankowski","Frąckowiak","Frączek","Frątczak","Furman","Gadomski","Gajda","Gajewski","Gaweł","Gawlik","Gawron","Gawroński","Gałka","Gałązka","Gil","Godlewski","Golec","Gołąb","Gołębiewski","Gołębiowski","Grabowski","Graczyk","Grochowski","Grudzień","Gruszczyński","Gruszka","Grzegorczyk","Grzelak","Grzesiak","Grzesik","Grześkowiak","Grzyb","Grzybowski","Grzywacz","Gutowski","Guzik","Gwóźdź","Góra","Góral","Górecki","Górka","Górniak","Górny","Górski","Gąsior","Gąsiorowski","Głogowski","Głowacki","Głąb","Hajduk","Herman","Iwański","Izdebski","Jabłoński","Jackowski","Jagielski","Jagiełło","Jagodziński","Jakubiak","Jakubowski","Janas","Janiak","Janicki","Janik","Janiszewski","Jankowiak","Jankowski","Janowski","Janus","Janusz","Januszewski","Jaros","Jarosz","Jarząbek","Jasiński","Jastrzębski","Jaworski","Jaśkiewicz","Jezierski","Jurek","Jurkiewicz","Jurkowski","Juszczak","Jóźwiak","Jóźwik","Jędrzejczak","Jędrzejczyk","Jędrzejewski","Kacprzak","Kaczmarczyk","Kaczmarek","Kaczmarski","Kaczor","Kaczorowski","Kaczyński","Kaleta","Kalinowski","Kalisz","Kamiński","Kania","Kaniewski","Kapusta","Karaś","Karczewski","Karpiński","Karwowski","Kasperek","Kasprzak","Kasprzyk","Kaszuba","Kawa","Kawecki","Kałuża","Kaźmierczak","Kiełbasa","Kisiel","Kita","Klimczak","Klimek","Kmiecik","Kmieć","Knapik","Kobus","Kogut","Kolasa","Komorowski","Konieczna","Konieczny","Konopka","Kopczyński","Koper","Kopeć","Korzeniowski","Kos","Kosiński","Kosowski","Kostecki","Kostrzewa","Kot","Kotowski","Kowal","Kowalczuk","Kowalczyk","Kowalewski","Kowalik","Kowalski","Koza","Kozak","Kozieł","Kozioł","Kozłowski","Kołakowski","Kołodziej","Kołodziejczyk","Kołodziejski","Krajewski","Krakowiak","Krawczyk","Krawiec","Kruk","Krukowski","Krupa","Krupiński","Kruszewski","Krysiak","Krzemiński","Krzyżanowski","Król","Królikowski","Książek","Kubacki","Kubiak","Kubica","Kubicki","Kubik","Kuc","Kucharczyk","Kucharski","Kuchta","Kuciński","Kuczyński","Kujawa","Kujawski","Kula","Kulesza","Kulig","Kulik","Kuliński","Kurek","Kurowski","Kuś","Kwaśniewski","Kwiatkowski","Kwiecień","Kwieciński","Kędzierski","Kędziora","Kępa","Kłos","Kłosowski","Lach","Laskowski","Lasota","Lech","Lenart","Lesiak","Leszczyński","Lewandowski","Lewicki","Leśniak","Leśniewski","Lipiński","Lipka","Lipski","Lis","Lisiecki","Lisowski","Maciejewski","Maciąg","Mackiewicz","Madej","Maj","Majcher","Majchrzak","Majewski","Majka","Makowski","Malec","Malicki","Malinowski","Maliszewski","Marchewka","Marciniak","Marcinkowski","Marczak","Marek","Markiewicz","Markowski","Marszałek","Marzec","Masłowski","Matusiak","Matuszak","Matuszewski","Matysiak","Mazur","Mazurek","Mazurkiewicz","Maćkowiak","Małecki","Małek","Maślanka","Michalak","Michalczyk","Michalik","Michalski","Michałek","Michałowski","Mielczarek","Mierzejewski","Mika","Mikołajczak","Mikołajczyk","Mikulski","Milczarek","Milewski","Miller","Misiak","Misztal","Miśkiewicz","Modzelewski","Molenda","Morawski","Motyka","Mroczek","Mroczkowski","Mrozek","Mróz","Mucha","Murawski","Musiał","Muszyński","Młynarczyk","Napierała","Nawrocki","Nawrot","Niedziela","Niedzielski","Niedźwiecki","Niemczyk","Niemiec","Niewiadomski","Noga","Nowacki","Nowaczyk","Nowak","Nowakowski","Nowicki","Nowiński","Olczak","Olejniczak","Olejnik","Olszewski","Orzechowski","Orłowski","Osiński","Ossowski","Ostrowski","Owczarek","Paczkowski","Pająk","Pakuła","Paluch","Panek","Partyka","Pasternak","Paszkowski","Pawelec","Pawlak","Pawlicki","Pawlik","Pawlikowski","Pawłowski","Pałka","Piasecki","Piechota","Piekarski","Pietras","Pietruszka","Pietrzak","Pietrzyk","Pilarski","Pilch","Piotrowicz","Piotrowski","Piwowarczyk","Piórkowski","Piątek","Piątkowski","Piłat","Pluta","Podgórski","Polak","Popławski","Porębski","Prokop","Prus","Przybylski","Przybysz","Przybył","Przybyła","Ptak","Puchalski","Pytel","Płonka","Raczyński","Radecki","Radomski","Rak","Rakowski","Ratajczak","Robak","Rogala","Rogalski","Rogowski","Rojek","Romanowski","Rosa","Rosiak","Rosiński","Ruciński","Rudnicki","Rudziński","Rudzki","Rusin","Rutkowski","Rybak","Rybarczyk","Rybicki","Rzepka","Różański","Różycki","Sadowski","Sawicki","Serafin","Siedlecki","Sienkiewicz","Sieradzki","Sikora","Sikorski","Sitek","Siwek","Skalski","Skiba","Skibiński","Skoczylas","Skowron","Skowronek","Skowroński","Skrzypczak","Skrzypek","Skóra","Smoliński","Sobczak","Sobczyk","Sobieraj","Sobolewski","Socha","Sochacki","Sokołowski","Sokół","Sosnowski","Sowa","Sowiński","Sołtys","Sołtysiak","Sroka","Stachowiak","Stachowicz","Stachura","Stachurski","Stanek","Staniszewski","Stanisławski","Stankiewicz","Stasiak","Staszewski","Stawicki","Stec","Stefaniak","Stefański","Stelmach","Stolarczyk","Stolarski","Strzelczyk","Strzelecki","Stępień","Stępniak","Surma","Suski","Szafrański","Szatkowski","Szczepaniak","Szczepanik","Szczepański","Szczerba","Szcześniak","Szczygieł","Szczęsna","Szczęsny","Szeląg","Szewczyk","Szostak","Szulc","Szwarc","Szwed","Szydłowski","Szymański","Szymczak","Szymczyk","Szymkowiak","Szyszka","Sławiński","Słowik","Słowiński","Tarnowski","Tkaczyk","Tokarski","Tomala","Tomaszewski","Tomczak","Tomczyk","Tracz","Trojanowski","Trzciński","Trzeciak","Turek","Twardowski","Urban","Urbanek","Urbaniak","Urbanowicz","Urbańczyk","Urbański","Walczak","Walkowiak","Warchoł","Wasiak","Wasilewski","Wawrzyniak","Wesołowski","Wieczorek","Wierzbicki","Wilczek","Wilczyński","Wilk","Winiarski","Witczak","Witek","Witkowski","Wiącek","Więcek","Więckowski","Wiśniewski","Wnuk","Wojciechowski","Wojtas","Wojtasik","Wojtczak","Wojtkowiak","Wolak","Woliński","Wolny","Wolski","Woś","Woźniak","Wrona","Wroński","Wróbel","Wróblewski","Wypych","Wysocki","Wyszyński","Wójcicki","Wójcik","Wójtowicz","Wąsik","Węgrzyn","Włodarczyk","Włodarski","Zaborowski","Zabłocki","Zagórski","Zając","Zajączkowski","Zakrzewski","Zalewski","Zaremba","Zarzycki","Zaręba","Zawada","Zawadzki","Zdunek","Zieliński","Zielonka","Ziółkowski","Zięba","Ziętek","Zwoliński","Zych","Zygmunt","Łapiński","Łuczak","Łukasiewicz","Łukasik","Łukaszewski","Śliwa","Śliwiński","Ślusarczyk","Świderski","Świerczyński","Świątek","Żak","Żebrowski","Żmuda","Żuk","Żukowski","Żurawski","Żurek","Żyła"],prefix:["Pan","Pani"],title:{descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liason","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},name:["#{prefix} #{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}","#{first_name} #{last_name}"]},pl.address={country:["Afganistan","Albania","Algieria","Andora","Angola","Antigua i Barbuda","Arabia Saudyjska","Argentyna","Armenia","Australia","Austria","Azerbejdżan","Bahamy","Bahrajn","Bangladesz","Barbados","Belgia","Belize","Benin","Bhutan","Białoruś","Birma","Boliwia","Sucre","Bośnia i Hercegowina","Botswana","Brazylia","Brunei","Bułgaria","Burkina Faso","Burundi","Chile","Chiny","Chorwacja","Cypr","Czad","Czarnogóra","Czechy","Dania","Demokratyczna Republika Konga","Dominika","Dominikana","Dżibuti","Egipt","Ekwador","Erytrea","Estonia","Etiopia","Fidżi","Filipiny","Finlandia","Francja","Gabon","Gambia","Ghana","Grecja","Grenada","Gruzja","Gujana","Gwatemala","Gwinea","Gwinea Bissau","Gwinea Równikowa","Haiti","Hiszpania","Holandia","Haga","Honduras","Indie","Indonezja","Irak","Iran","Irlandia","Islandia","Izrael","Jamajka","Japonia","Jemen","Jordania","Kambodża","Kamerun","Kanada","Katar","Kazachstan","Kenia","Kirgistan","Kiribati","Kolumbia","Komory","Kongo","Korea Południowa","Korea Północna","Kostaryka","Kuba","Kuwejt","Laos","Lesotho","Liban","Liberia","Libia","Liechtenstein","Litwa","Luksemburg","Łotwa","Macedonia","Madagaskar","Malawi","Malediwy","Malezja","Mali","Malta","Maroko","Mauretania","Mauritius","Meksyk","Mikronezja","Mołdawia","Monako","Mongolia","Mozambik","Namibia","Nauru","Nepal","Niemcy","Niger","Nigeria","Nikaragua","Norwegia","Nowa Zelandia","Oman","Pakistan","Palau","Panama","Papua-Nowa Gwinea","Paragwaj","Peru","Polska","322 575","Portugalia","Republika Południowej Afryki","Republika Środkowoafrykańska","Republika Zielonego Przylądka","Rosja","Rumunia","Rwanda","Saint Kitts i Nevis","Saint Lucia","Saint Vincent i Grenadyny","Salwador","Samoa","San Marino","Senegal","Serbia","Seszele","Sierra Leone","Singapur","Słowacja","Słowenia","Somalia","Sri Lanka","Stany Zjednoczone","Suazi","Sudan","Sudan Południowy","Surinam","Syria","Szwajcaria","Szwecja","Tadżykistan","Tajlandia","Tanzania","Timor Wschodni","Togo","Tonga","Trynidad i Tobago","Tunezja","Turcja","Turkmenistan","Tuvalu","Funafuti","Uganda","Ukraina","Urugwaj",2008,"Uzbekistan","Vanuatu","Watykan","Wenezuela","Węgry","Wielka Brytania","Wietnam","Włochy","Wybrzeże Kości Słoniowej","Wyspy Marshalla","Wyspy Salomona","Wyspy Świętego Tomasza i Książęca","Zambia","Zimbabwe","Zjednoczone Emiraty Arabskie"],building_number:["#####","####","###"],street_prefix:["ul.","al."],secondary_address:["Apt. ###","Suite ###"],postcode:["##-###"],state:["Dolnośląskie","Kujawsko-pomorskie","Lubelskie","Lubuskie","Łódzkie","Małopolskie","Mazowieckie","Opolskie","Podkarpackie","Podlaskie","Pomorskie","Śląskie","Świętokrzyskie","Warmińsko-mazurskie","Wielkopolskie","Zachodniopomorskie"],state_abbr:["DŚ","KP","LB","LS","ŁD","MP","MZ","OP","PK","PL","PM","ŚL","ŚK","WM","WP","ZP"],city_name:["Aleksandrów Kujawski","Aleksandrów Łódzki","Alwernia","Andrychów","Annopol","Augustów","Babimost","Baborów","Baranów Sandomierski","Barcin","Barczewo","Bardo","Barlinek","Bartoszyce","Barwice","Bełchatów","Bełżyce","Będzin","Biała","Biała Piska","Biała Podlaska","Biała Rawska","Białobrzegi","Białogard","Biały Bór","Białystok","Biecz","Bielawa","Bielsk Podlaski","Bielsko-Biała","Bieruń","Bierutów","Bieżuń","Biłgoraj","Biskupiec","Bisztynek","Blachownia","Błaszki","Błażowa","Błonie","Bobolice","Bobowa","Bochnia","Bodzentyn","Bogatynia","Boguchwała","Boguszów-Gorce","Bojanowo","Bolesławiec","Bolków","Borek Wielkopolski","Borne Sulinowo","Braniewo","Brańsk","Brodnica","Brok","Brusy","Brwinów","Brzeg","Brzeg Dolny","Brzesko","Brzeszcze","Brześć Kujawski","Brzeziny","Brzostek","Brzozów","Buk","Bukowno","Busko-Zdrój","Bychawa","Byczyna","Bydgoszcz","Bystrzyca Kłodzka","Bytom","Bytom Odrzański","Bytów","Cedynia","Chełm","Chełmek","Chełmno","Chełmża","Chęciny","Chmielnik","Chocianów","Chociwel","Chodecz","Chodzież","Chojna","Chojnice","Chojnów","Choroszcz","Chorzele","Chorzów","Choszczno","Chrzanów","Ciechanowiec","Ciechanów","Ciechocinek","Cieszanów","Cieszyn","Ciężkowice","Cybinka","Czaplinek","Czarna Białostocka","Czarna Woda","Czarne","Czarnków","Czchów","Czechowice-Dziedzice","Czeladź","Czempiń","Czerniejewo","Czersk","Czerwieńsk","Czerwionka-Leszczyny","Częstochowa","Człopa","Człuchów","Czyżew","Ćmielów","Daleszyce","Darłowo","Dąbie","Dąbrowa Białostocka","Dąbrowa Górnicza","Dąbrowa Tarnowska","Debrzno","Dębica","Dęblin","Dębno","Dobczyce","Dobiegniew","Dobra (powiat łobeski)","Dobra (powiat turecki)","Dobre Miasto","Dobrodzień","Dobrzany","Dobrzyń nad Wisłą","Dolsk","Drawno","Drawsko Pomorskie","Drezdenko","Drobin","Drohiczyn","Drzewica","Dukla","Duszniki-Zdrój","Dynów","Działdowo","Działoszyce","Działoszyn","Dzierzgoń","Dzierżoniów","Dziwnów","Elbląg","Ełk","Frampol","Frombork","Garwolin","Gąbin","Gdańsk","Gdynia","Giżycko","Glinojeck","Gliwice","Głogów","Głogów Małopolski","Głogówek","Głowno","Głubczyce","Głuchołazy","Głuszyca","Gniew","Gniewkowo","Gniezno","Gogolin","Golczewo","Goleniów","Golina","Golub-Dobrzyń","Gołańcz","Gołdap","Goniądz","Gorlice","Gorzów Śląski","Gorzów Wielkopolski","Gostynin","Gostyń","Gościno","Gozdnica","Góra","Góra Kalwaria","Górowo Iławeckie","Górzno","Grabów nad Prosną","Grajewo","Grodków","Grodzisk Mazowiecki","Grodzisk Wielkopolski","Grójec","Grudziądz","Grybów","Gryfice","Gryfino","Gryfów Śląski","Gubin","Hajnówka","Halinów","Hel","Hrubieszów","Iława","Iłowa","Iłża","Imielin","Inowrocław","Ińsko","Iwonicz-Zdrój","Izbica Kujawska","Jabłonowo Pomorskie","Janikowo","Janowiec Wielkopolski","Janów Lubelski","Jarocin","Jarosław","Jasień","Jasło","Jastarnia","Jastrowie","Jastrzębie-Zdrój","Jawor","Jaworzno","Jaworzyna Śląska","Jedlicze","Jedlina-Zdrój","Jedwabne","Jelcz-Laskowice","Jelenia Góra","Jeziorany","Jędrzejów","Jordanów","Józefów (powiat biłgorajski)","Józefów (powiat otwocki)","Jutrosin","Kalety","Kalisz","Kalisz Pomorski","Kalwaria Zebrzydowska","Kałuszyn","Kamienna Góra","Kamień Krajeński","Kamień Pomorski","Kamieńsk","Kańczuga","Karczew","Kargowa","Karlino","Karpacz","Kartuzy","Katowice","Kazimierz Dolny","Kazimierza Wielka","Kąty Wrocławskie","Kcynia","Kędzierzyn-Koźle","Kępice","Kępno","Kętrzyn","Kęty","Kielce","Kietrz","Kisielice","Kleczew","Kleszczele","Kluczbork","Kłecko","Kłobuck","Kłodawa","Kłodzko","Knurów","Knyszyn","Kobylin","Kobyłka","Kock","Kolbuszowa","Kolno","Kolonowskie","Koluszki","Kołaczyce","Koło","Kołobrzeg","Koniecpol","Konin","Konstancin-Jeziorna","Konstantynów Łódzki","Końskie","Koprzywnica","Korfantów","Koronowo","Korsze","Kosów Lacki","Kostrzyn","Kostrzyn nad Odrą","Koszalin","Kościan","Kościerzyna","Kowal","Kowalewo Pomorskie","Kowary","Koziegłowy","Kozienice","Koźmin Wielkopolski","Kożuchów","Kórnik","Krajenka","Kraków","Krapkowice","Krasnobród","Krasnystaw","Kraśnik","Krobia","Krosno","Krosno Odrzańskie","Krośniewice","Krotoszyn","Kruszwica","Krynica Morska","Krynica-Zdrój","Krynki","Krzanowice","Krzepice","Krzeszowice","Krzywiń","Krzyż Wielkopolski","Książ Wielkopolski","Kudowa-Zdrój","Kunów","Kutno","Kuźnia Raciborska","Kwidzyn","Lądek-Zdrój","Legionowo","Legnica","Lesko","Leszno","Leśna","Leśnica","Lewin Brzeski","Leżajsk","Lębork","Lędziny","Libiąż","Lidzbark","Lidzbark Warmiński","Limanowa","Lipiany","Lipno","Lipsk","Lipsko","Lubaczów","Lubań","Lubartów","Lubawa","Lubawka","Lubień Kujawski","Lubin","Lublin","Lubliniec","Lubniewice","Lubomierz","Luboń","Lubraniec","Lubsko","Lwówek","Lwówek Śląski","Łabiszyn","Łańcut","Łapy","Łasin","Łask","Łaskarzew","Łaszczów","Łaziska Górne","Łazy","Łeba","Łęczna","Łęczyca","Łęknica","Łobez","Łobżenica","Łochów","Łomianki","Łomża","Łosice","Łowicz","Łódź","Łuków","Maków Mazowiecki","Maków Podhalański","Malbork","Małogoszcz","Małomice","Margonin","Marki","Maszewo","Miasteczko Śląskie","Miastko","Michałowo","Miechów","Miejska Górka","Mielec","Mieroszów","Mieszkowice","Międzybórz","Międzychód","Międzylesie","Międzyrzec Podlaski","Międzyrzecz","Międzyzdroje","Mikołajki","Mikołów","Mikstat","Milanówek","Milicz","Miłakowo","Miłomłyn","Miłosław","Mińsk Mazowiecki","Mirosławiec","Mirsk","Mława","Młynary","Mogielnica","Mogilno","Mońki","Morąg","Mordy","Moryń","Mosina","Mrągowo","Mrocza","Mszana Dolna","Mszczonów","Murowana Goślina","Muszyna","Mysłowice","Myszków","Myszyniec","Myślenice","Myślibórz","Nakło nad Notecią","Nałęczów","Namysłów","Narol","Nasielsk","Nekla","Nidzica","Niemcza","Niemodlin","Niepołomice","Nieszawa","Nisko","Nowa Dęba","Nowa Ruda","Nowa Sarzyna","Nowa Sól","Nowe","Nowe Brzesko","Nowe Miasteczko","Nowe Miasto Lubawskie","Nowe Miasto nad Pilicą","Nowe Skalmierzyce","Nowe Warpno","Nowogard","Nowogrodziec","Nowogród","Nowogród Bobrzański","Nowy Dwór Gdański","Nowy Dwór Mazowiecki","Nowy Sącz","Nowy Staw","Nowy Targ","Nowy Tomyśl","Nowy Wiśnicz","Nysa","Oborniki","Oborniki Śląskie","Obrzycko","Odolanów","Ogrodzieniec","Okonek","Olecko","Olesno","Oleszyce","Oleśnica","Olkusz","Olsztyn","Olsztynek","Olszyna","Oława","Opalenica","Opatów","Opoczno","Opole","Opole Lubelskie","Orneta","Orzesze","Orzysz","Osieczna","Osiek","Ostrołęka","Ostroróg","Ostrowiec Świętokrzyski","Ostróda","Ostrów Lubelski","Ostrów Mazowiecka","Ostrów Wielkopolski","Ostrzeszów","Ośno Lubuskie","Oświęcim","Otmuchów","Otwock","Ozimek","Ozorków","Ożarów","Ożarów Mazowiecki","Pabianice","Paczków","Pajęczno","Pakość","Parczew","Pasłęk","Pasym","Pelplin","Pełczyce","Piaseczno","Piaski","Piastów","Piechowice","Piekary Śląskie","Pieniężno","Pieńsk","Pieszyce","Pilawa","Pilica","Pilzno","Piła","Piława Górna","Pińczów","Pionki","Piotrków Kujawski","Piotrków Trybunalski","Pisz","Piwniczna-Zdrój","Pleszew","Płock","Płońsk","Płoty","Pniewy","Pobiedziska","Poddębice","Podkowa Leśna","Pogorzela","Polanica-Zdrój","Polanów","Police","Polkowice","Połaniec","Połczyn-Zdrój","Poniatowa","Poniec","Poręba","Poznań","Prabuty","Praszka","Prochowice","Proszowice","Prószków","Pruchnik","Prudnik","Prusice","Pruszcz Gdański","Pruszków","Przasnysz","Przecław","Przedbórz","Przedecz","Przemków","Przemyśl","Przeworsk","Przysucha","Pszczyna","Pszów","Puck","Puławy","Pułtusk","Puszczykowo","Pyrzyce","Pyskowice","Pyzdry","Rabka-Zdrój","Raciąż","Racibórz","Radków","Radlin","Radłów","Radom","Radomsko","Radomyśl Wielki","Radymno","Radziejów","Radzionków","Radzymin","Radzyń Chełmiński","Radzyń Podlaski","Rajgród","Rakoniewice","Raszków","Rawa Mazowiecka","Rawicz","Recz","Reda","Rejowiec Fabryczny","Resko","Reszel","Rogoźno","Ropczyce","Różan","Ruciane-Nida","Ruda Śląska","Rudnik nad Sanem","Rumia","Rybnik","Rychwał","Rydułtowy","Rydzyna","Ryglice","Ryki","Rymanów","Ryn","Rypin","Rzepin","Rzeszów","Rzgów","Sandomierz","Sanok","Sejny","Serock","Sędziszów","Sędziszów Małopolski","Sępopol","Sępólno Krajeńskie","Sianów","Siechnice","Siedlce","Siemianowice Śląskie","Siemiatycze","Sieniawa","Sieradz","Sieraków","Sierpc","Siewierz","Skalbmierz","Skała","Skarszewy","Skaryszew","Skarżysko-Kamienna","Skawina","Skępe","Skierniewice","Skoczów","Skoki","Skórcz","Skwierzyna","Sława","Sławków","Sławno","Słomniki","Słubice","Słupca","Słupsk","Sobótka","Sochaczew","Sokołów Małopolski","Sokołów Podlaski","Sokółka","Solec Kujawski","Sompolno","Sopot","Sosnowiec","Sośnicowice","Stalowa Wola","Starachowice","Stargard Szczeciński","Starogard Gdański","Stary Sącz","Staszów","Stawiski","Stawiszyn","Stąporków","Stęszew","Stoczek Łukowski","Stronie Śląskie","Strumień","Stryków","Strzegom","Strzelce Krajeńskie","Strzelce Opolskie","Strzelin","Strzelno","Strzyżów","Sucha Beskidzka","Suchań","Suchedniów","Suchowola","Sulechów","Sulejów","Sulejówek","Sulęcin","Sulmierzyce","Sułkowice","Supraśl","Suraż","Susz","Suwałki","Swarzędz","Syców","Szadek","Szamocin","Szamotuły","Szczawnica","Szczawno-Zdrój","Szczebrzeszyn","Szczecin","Szczecinek","Szczekociny","Szczucin","Szczuczyn","Szczyrk","Szczytna","Szczytno","Szepietowo","Szklarska Poręba","Szlichtyngowa","Szprotawa","Sztum","Szubin","Szydłowiec","Ścinawa","Ślesin","Śmigiel","Śrem","Środa Śląska","Środa Wielkopolska","Świątniki Górne","Świdnica","Świdnik","Świdwin","Świebodzice","Świebodzin","Świecie","Świeradów-Zdrój","Świerzawa","Świętochłowice","Świnoujście","Tarczyn","Tarnobrzeg","Tarnogród","Tarnowskie Góry","Tarnów","Tczew","Terespol","Tłuszcz","Tolkmicko","Tomaszów Lubelski","Tomaszów Mazowiecki","Toruń","Torzym","Toszek","Trzcianka","Trzciel","Trzcińsko-Zdrój","Trzebiatów","Trzebinia","Trzebnica","Trzemeszno","Tuchola","Tuchów","Tuczno","Tuliszków","Turek","Tuszyn","Twardogóra","Tychowo","Tychy","Tyczyn","Tykocin","Tyszowce","Ujazd","Ujście","Ulanów","Uniejów","Ustka","Ustroń","Ustrzyki Dolne","Wadowice","Wałbrzych","Wałcz","Warka","Warszawa","Warta","Wasilków","Wąbrzeźno","Wąchock","Wągrowiec","Wąsosz","Wejherowo","Węgliniec","Węgorzewo","Węgorzyno","Węgrów","Wiązów","Wieleń","Wielichowo","Wieliczka","Wieluń","Wieruszów","Więcbork","Wilamowice","Wisła","Witkowo","Witnica","Wleń","Władysławowo","Włocławek","Włodawa","Włoszczowa","Wodzisław Śląski","Wojcieszów","Wojkowice","Wojnicz","Wolbórz","Wolbrom","Wolin","Wolsztyn","Wołczyn","Wołomin","Wołów","Woźniki","Wrocław","Wronki","Września","Wschowa","Wyrzysk","Wysoka","Wysokie Mazowieckie","Wyszków","Wyszogród","Wyśmierzyce","Zabłudów","Zabrze","Zagórów","Zagórz","Zakliczyn","Zakopane","Zakroczym","Zalewo","Zambrów","Zamość","Zator","Zawadzkie","Zawichost","Zawidów","Zawiercie","Ząbki","Ząbkowice Śląskie","Zbąszynek","Zbąszyń","Zduny","Zduńska Wola","Zdzieszowice","Zelów","Zgierz","Zgorzelec","Zielona Góra","Zielonka","Ziębice","Złocieniec","Złoczew","Złotoryja","Złotów","Złoty Stok","Zwierzyniec","Zwoleń","Żabno","Żagań","Żarki","Żarów","Żary","Żelechów","Żerków","Żmigród","Żnin","Żory","Żukowo","Żuromin","Żychlin","Żyrardów","Żywiec"],city:["#{city_name}"],street_name:["#{street_prefix} #{Name.last_name}"],street_address:["#{street_name} #{building_number}"],default_country:["Polska"]},pl.company={suffix:["Inc","and Sons","LLC","Group"],adjetive:["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],descriptor:["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],noun:["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],bs_verb:["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],bs_adjective:["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"],
bs_noun:["synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} and #{Name.last_name}"]},pl.internet={free_email:["gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","pl","com.pl","net","org"]},pl.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"],supplemental:["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]},pl.phone_number={formats:["12-###-##-##","13-###-##-##","14-###-##-##","15-###-##-##","16-###-##-##","17-###-##-##","18-###-##-##","22-###-##-##","23-###-##-##","24-###-##-##","25-###-##-##","29-###-##-##","32-###-##-##","33-###-##-##","34-###-##-##","41-###-##-##","42-###-##-##","43-###-##-##","44-###-##-##","46-###-##-##","48-###-##-##","52-###-##-##","54-###-##-##","55-###-##-##","56-###-##-##","58-###-##-##","59-###-##-##","61-###-##-##","62-###-##-##","63-###-##-##","65-###-##-##","67-###-##-##","68-###-##-##","71-###-##-##","74-###-##-##","75-###-##-##","76-###-##-##","77-###-##-##","81-###-##-##","82-###-##-##","83-###-##-##","84-###-##-##","85-###-##-##","86-###-##-##","87-###-##-##","89-###-##-##","91-###-##-##","94-###-##-##","95-###-##-##"]},pl.cell_phone={formats:["50-###-##-##","51-###-##-##","53-###-##-##","57-###-##-##","60-###-##-##","66-###-##-##","69-###-##-##","72-###-##-##","73-###-##-##","78-###-##-##","79-###-##-##","88-###-##-##"]};

},{}],113:[function(require,module,exports){
var pt_BR={};module.exports=pt_BR,pt_BR.title="Portuguese (Brazil)",pt_BR.address={city_prefix:["Nova","Velha","Grande","Vila","Município de"],city_suffix:["do Descoberto","de Nossa Senhora","do Norte","do Sul"],country:["Afeganistão","Albânia","Algéria","Samoa","Andorra","Angola","Anguilla","Antigua and Barbada","Argentina","Armênia","Aruba","Austrália","Áustria","Alzerbajão","Bahamas","Barém","Bangladesh","Barbado","Belgrado","Bélgica","Belize","Benin","Bermuda","Bhutan","Bolívia","Bôsnia","Botuasuna","Bouvetoia","Brasil","Arquipélago de Chagos","Ilhas Virgens","Brunei","Bulgária","Burkina Faso","Burundi","Cambójia","Camarões","Canadá","Cabo Verde","Ilhas Caiman","República da África Central","Chad","Chile","China","Ilhas Natal","Ilhas Cocos","Colômbia","Comoros","Congo","Ilhas Cook","Costa Rica","Costa do Marfim","Croácia","Cuba","Cyprus","República Tcheca","Dinamarca","Djibouti","Dominica","República Dominicana","Equador","Egito","El Salvador","Guiné Equatorial","Eritrea","Estônia","Etiópia","Ilhas Faroe","Malvinas","Fiji","Finlândia","França","Guiné Francesa","Polinésia Francesa","Gabão","Gâmbia","Georgia","Alemanha","Gana","Gibraltar","Grécia","Groelândia","Granada","Guadalupe","Guano","Guatemala","Guernsey","Guiné","Guiné-Bissau","Guiana","Haiti","Heard Island and McDonald Islands","Vaticano","Honduras","Hong Kong","Hungria","Iceland","Índia","Indonésia","Irã","Iraque","Irlanda","Ilha de Man","Israel","Itália","Jamaica","Japão","Jersey","Jordânia","Cazaquistão","Quênia","Kiribati","Coreia do Norte","Coreia do Sul","Kuwait","Kyrgyz Republic","República Democrática de Lao People","Latvia","Líbano","Lesotho","Libéria","Libyan Arab Jamahiriya","Liechtenstein","Lituânia","Luxemburgo","Macao","Macedônia","Madagascar","Malawi","Malásia","Maldives","Mali","Malta","Ilhas Marshall","Martinica","Mauritânia","Mauritius","Mayotte","México","Micronésia","Moldova","Mônaco","Mongólia","Montenegro","Montserrat","Marrocos","Moçambique","Myanmar","Namibia","Nauru","Nepal","Antilhas Holandesas","Holanda","Nova Caledonia","Nova Zelândia","Nicarágua","Nigéria","Niue","Ilha Norfolk","Northern Mariana Islands","Noruega","Oman","Paquistão","Palau","Território da Palestina","Panamá","Nova Guiné Papua","Paraguai","Peru","Filipinas","Polônia","Portugal","Puerto Rico","Qatar","Romênia","Rússia","Ruanda","São Bartolomeu","Santa Helena","Santa Lúcia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tomé e Príncipe","Arábia Saudita","Senegal","Sérvia","Seychelles","Serra Leoa","Singapura","Eslováquia","Eslovênia","Ilhas Salomão","Somália","África do Sul","South Georgia and the South Sandwich Islands","Spanha","Sri Lanka","Sudão","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Suécia","Suíça","Síria","Taiwan","Tajiquistão","Tanzânia","Tailândia","Timor-Leste","Togo","Tokelau","Tonga","Trinidá e Tobago","Tunísia","Turquia","Turcomenistão","Turks and Caicos Islands","Tuvalu","Uganda","Ucrânia","Emirados Árabes Unidos","Reino Unido","Estados Unidos da América","Estados Unidos das Ilhas Virgens","Uruguai","Uzbequistão","Vanuatu","Venezuela","Vietnã","Wallis and Futuna","Sahara","Yemen","Zâmbia","Zimbábue"],building_number:["#####","####","###"],street_suffix:["Rua","Avenida","Travessa","Ponte","Alameda","Marginal","Viela","Rodovia"],secondary_address:["Apto. ###","Sobrado ##","Casa #","Lote ##","Quadra ##"],postcode:["#####","#####-###"],state:["Acre","Alagoas","Amapá","Amazonas","Bahia","Ceará","Distrito Federal","Espírito Santo","Goiás","Maranhão","Mato Grosso","Mato Grosso do Sul","Minas Gerais","Pará","Paraíba","Paraná","Pernambuco","Piauí","Rio de Janeiro","Rio Grande do Norte","Rio Grande do Sul","Rondônia","Roraima","Santa Catarina","São Paulo","Sergipe","Tocantins"],state_abbr:["AC","AL","AP","AM","BA","CE","DF","ES","GO","MA","MT","MS","PA","PB","PR","PE","PI","RJ","RN","RS","RO","RR","SC","SP"],default_country:["Brasil"]},pt_BR.company={suffix:["S.A.","LTDA","e Associados","Comércio"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} e #{Name.last_name}"]},pt_BR.internet={free_email:["gmail.com","yahoo.com","hotmail.com","live.com","bol.com.br"],domain_suffix:["br","com","biz","info","name","net","org"]},pt_BR.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"]},pt_BR.name={first_name:["Alessandro","Alessandra","Alexandre","Aline","Antônio","Breno","Bruna","Carlos","Carla","Célia","Cecília","César","Danilo","Dalila","Deneval","Eduardo","Eduarda","Esther","Elísio","Fábio","Fabrício","Fabrícia","Félix","Felícia","Feliciano","Frederico","Fabiano","Gustavo","Guilherme","Gúbio","Heitor","Hélio","Hugo","Isabel","Isabela","Ígor","João","Joana","Júlio César","Júlio","Júlia","Janaína","Karla","Kléber","Lucas","Lorena","Lorraine","Larissa","Ladislau","Marcos","Meire","Marcelo","Marcela","Margarida","Mércia","Márcia","Marli","Morgana","Maria","Norberto","Natália","Nataniel","Núbia","Ofélia","Paulo","Paula","Pablo","Pedro","Raul","Rafael","Rafaela","Ricardo","Roberto","Roberta","Sílvia","Sílvia","Silas","Suélen","Sara","Salvador","Sirineu","Talita","Tertuliano","Vicente","Víctor","Vitória","Yango","Yago","Yuri","Washington","Warley"],last_name:["Silva","Souza","Carvalho","Santos","Reis","Xavier","Franco","Braga","Macedo","Batista","Barros","Moraes","Costa","Pereira","Carvalho","Melo","Saraiva","Nogueira","Oliveira","Martins","Moreira","Albuquerque"],prefix:["Sr.","Sra.","Srta.","Dr."],suffix:["Jr.","Neto","Filho"]},pt_BR.phone_number={formats:["(##) ####-####","+55 (##) ####-####","(##) #####-####"]};

},{}],114:[function(require,module,exports){
var ru={};module.exports=ru,ru.title="Russian",ru.separator=" и ",ru.address={country:["Австралия","Австрия","Азербайджан","Албания","Алжир","Американское Самоа (не признана)","Ангилья","Ангола","Андорра","Антарктика (не признана)","Антигуа и Барбуда","Антильские Острова (не признана)","Аомынь (не признана)","Аргентина","Армения","Афганистан","Багамские Острова","Бангладеш","Барбадос","Бахрейн","Беларусь","Белиз","Бельгия","Бенин","Болгария","Боливия","Босния и Герцеговина","Ботсвана","Бразилия","Бруней","Буркина-Фасо","Бурунди","Бутан","Вануату","Ватикан","Великобритания","Венгрия","Венесуэла","Восточный Тимор","Вьетнам","Габон","Гаити","Гайана","Гамбия","Гана","Гваделупа (не признана)","Гватемала","Гвиана (не признана)","Гвинея","Гвинея-Бисау","Германия","Гондурас","Гренада","Греция","Грузия","Дания","Джибути","Доминика","Доминиканская Республика","Египет","Замбия","Зимбабве","Израиль","Индия","Индонезия","Иордания","Ирак","Иран","Ирландия","Исландия","Испания","Италия","Йемен","Кабо-Верде","Казахстан","Камбоджа","Камерун","Канада","Катар","Кения","Кипр","Кирибати","Китай","Колумбия","Коморские Острова","Конго","Демократическая Республика","Корея (Северная)","Корея (Южная)","Косово","Коста-Рика","Кот-д'Ивуар","Куба","Кувейт","Кука острова","Кыргызстан","Лаос","Латвия","Лесото","Либерия","Ливан","Ливия","Литва","Лихтенштейн","Люксембург","Маврикий","Мавритания","Мадагаскар","Македония","Малави","Малайзия","Мали","Мальдивы","Мальта","Маршалловы Острова","Мексика","Микронезия","Мозамбик","Молдова","Монако","Монголия","Марокко","Мьянма","Намибия","Науру","Непал","Нигер","Нигерия","Нидерланды","Никарагуа","Новая Зеландия","Норвегия","Объединенные Арабские Эмираты","Оман","Пакистан","Палау","Панама","Папуа — Новая Гвинея","Парагвай","Перу","Польша","Португалия","Республика Конго","Россия","Руанда","Румыния","Сальвадор","Самоа","Сан-Марино","Сан-Томе и Принсипи","Саудовская Аравия","Свазиленд","Сейшельские острова","Сенегал","Сент-Винсент и Гренадины","Сент-Киттс и Невис","Сент-Люсия","Сербия","Сингапур","Сирия","Словакия","Словения","Соединенные Штаты Америки","Соломоновы Острова","Сомали","Судан","Суринам","Сьерра-Леоне","Таджикистан","Таиланд","Тайвань (не признана)","Тамил-Илам (не признана)","Танзания","Тёркс и Кайкос (не признана)","Того","Токелау (не признана)","Тонга","Тринидад и Тобаго","Тувалу","Тунис","Турецкая Республика Северного Кипра (не признана)","Туркменистан","Турция","Уганда","Узбекистан","Украина","Уругвай","Фарерские Острова (не признана)","Фиджи","Филиппины","Финляндия","Франция","Французская Полинезия (не признана)","Хорватия","Центральноафриканская Республика","Чад","Черногория","Чехия","Чили","Швейцария","Швеция","Шри-Ланка","Эквадор","Экваториальная Гвинея","Эритрея","Эстония","Эфиопия","Южно-Африканская Республика","Ямайка","Япония"],building_number:["###"],street_suffix:["ул.","улица","проспект","пр.","площадь","пл."],secondary_address:["кв. ###"],postcode:["######"],state:["Республика Адыгея","Республика Башкортостан","Республика Бурятия","Республика Алтай Республика Дагестан","Республика Ингушетия","Кабардино-Балкарская Республика","Республика Калмыкия","Республика Карачаево-Черкессия","Республика Карелия","Республика Коми","Республика Марий Эл","Республика Мордовия","Республика Саха (Якутия)","Республика Северная Осетия-Алания","Республика Татарстан","Республика Тыва","Удмуртская Республика","Республика Хакасия","Чувашская Республика","Алтайский край","Краснодарский край","Красноярский край","Приморский край","Ставропольский край","Хабаровский край","Амурская область","Архангельская область","Астраханская область","Белгородская область","Брянская область","Владимирская область","Волгоградская область","Вологодская область","Воронежская область","Ивановская область","Иркутская область","Калиниградская область","Калужская область","Камчатская область","Кемеровская область","Кировская область","Костромская область","Курганская область","Курская область","Ленинградская область","Липецкая область","Магаданская область","Московская область","Мурманская область","Нижегородская область","Новгородская область","Новосибирская область","Омская область","Оренбургская область","Орловская область","Пензенская область","Пермская область","Псковская область","Ростовская область","Рязанская область","Самарская область","Саратовская область","Сахалинская область","Свердловская область","Смоленская область","Тамбовская область","Тверская область","Томская область","Тульская область","Тюменская область","Ульяновская область","Челябинская область","Читинская область","Ярославская область","Еврейская автономная область","Агинский Бурятский авт. округ","Коми-Пермяцкий автономный округ","Корякский автономный округ","Ненецкий автономный округ","Таймырский (Долгано-Ненецкий) автономный округ","Усть-Ордынский Бурятский автономный округ","Ханты-Мансийский автономный округ","Чукотский автономный округ","Эвенкийский автономный округ","Ямало-Ненецкий автономный округ","Чеченская Республика"],street_title:["Советская","Молодежная","Центральная","Школьная","Новая","Садовая","Лесная","Набережная","Ленина","Мира","Октябрьская","Зеленая","Комсомольская","Заречная","Первомайская","Гагарина","Полевая","Луговая","Пионерская","Кирова","Юбилейная","Северная","Пролетарская","Степная","Пушкина","Калинина","Южная","Колхозная","Рабочая","Солнечная","Железнодорожная","Восточная","Заводская","Чапаева","Нагорная","Строителей","Береговая","Победы","Горького","Кооперативная","Красноармейская","Совхозная","Речная","Школьный","Спортивная","Озерная","Строительная","Парковая","Чкалова","Мичурина","речень улиц","Подгорная","Дружбы","Почтовая","Партизанская","Вокзальная","Лермонтова","Свободы","Дорожная","Дачная","Маяковского","Западная","Фрунзе","Дзержинского","Московская","Свердлова","Некрасова","Гоголя","Красная","Трудовая","Шоссейная","Чехова","Коммунистическая","Труда","Комарова","Матросова","Островского","Сосновая","Клубная","Куйбышева","Крупской","Березовая","Карла Маркса","8 Марта","Больничная","Садовый","Интернациональная","Суворова","Цветочная","Трактовая","Ломоносова","Горная","Космонавтов","Энергетиков","Шевченко","Весенняя","Механизаторов","Коммунальная","Лесной","40 лет Победы","Майская"],city_name:["Москва","Владимир","Санкт-Петербург","Новосибирск","Екатеринбург","Нижний Новгород","Самара","Казань","Омск","Челябинск","Ростов-на-Дону","Уфа","Волгоград","Пермь","Красноярск","Воронеж","Саратов","Краснодар","Тольятти","Ижевск","Барнаул","Ульяновск","Тюмень","Иркутск","Владивосток","Ярославль","Хабаровск","Махачкала","Оренбург","Новокузнецк","Томск","Кемерово","Рязань","Астрахань","Пенза","Липецк","Тула","Киров","Чебоксары","Курск","Брянскm Магнитогорск","Иваново","Тверь","Ставрополь","Белгород","Сочи"],city:["#{Address.city_name}"],street_name:["#{street_suffix} #{Address.street_title}","#{Address.street_title} #{street_suffix}"],street_address:["#{street_name}, #{building_number}"],default_country:["Россия"]},ru.internet={free_email:["yandex.ru","ya.ru","mail.ru","gmail.com","yahoo.com","hotmail.com"],domain_suffix:["com","ru","info","рф","net","org"]},ru.name={male_first_name:["Александр","Алексей","Альберт","Анатолий","Андрей","Антон","Аркадий","Арсений","Артём","Борис","Вадим","Валентин","Валерий","Василий","Виктор","Виталий","Владимир","Владислав","Вячеслав","Геннадий","Георгий","Герман","Григорий","Даниил","Денис","Дмитрий","Евгений","Егор","Иван","Игнатий","Игорь","Илья","Константин","Лаврентий","Леонид","Лука","Макар","Максим","Матвей","Михаил","Никита","Николай","Олег","Роман","Семён","Сергей","Станислав","Степан","Фёдор","Эдуард","Юрий","Ярослав"],male_middle_name:["Александрович","Алексеевич","Альбертович","Анатольевич","Андреевич","Антонович","Аркадьевич","Арсеньевич","Артёмович","Борисович","Вадимович","Валентинович","Валерьевич","Васильевич","Викторович","Витальевич","Владимирович","Владиславович","Вячеславович","Геннадьевич","Георгиевич","Германович","Григорьевич","Даниилович","Денисович","Дмитриевич","Евгеньевич","Егорович","Иванович","Игнатьевич","Игоревич","Ильич","Константинович","Лаврентьевич","Леонидович","Лукич","Макарович","Максимович","Матвеевич","Михайлович","Никитич","Николаевич","Олегович","Романович","Семёнович","Сергеевич","Станиславович","Степанович","Фёдорович","Эдуардович","Юрьевич","Ярославович"],male_last_name:["Смирнов","Иванов","Кузнецов","Попов","Соколов","Лебедев","Козлов","Новиков","Морозов","Петров","Волков","Соловьев","Васильев","Зайцев","Павлов","Семенов","Голубев","Виноградов","Богданов","Воробьев","Федоров","Михайлов","Беляев","Тарасов","Белов","Комаров","Орлов","Киселев","Макаров","Андреев","Ковалев","Ильин","Гусев","Титов","Кузьмин","Кудрявцев","Баранов","Куликов","Алексеев","Степанов","Яковлев","Сорокин","Сергеев","Романов","Захаров","Борисов","Королев","Герасимов","Пономарев","Григорьев","Лазарев","Медведев","Ершов","Никитин","Соболев","Рябов","Поляков","Цветков","Данилов","Жуков","Фролов","Журавлев","Николаев","Крылов","Максимов","Сидоров","Осипов","Белоусов","Федотов","Дорофеев","Егоров","Матвеев","Бобров","Дмитриев","Калинин","Анисимов","Петухов","Антонов","Тимофеев","Никифоров","Веселов","Филиппов","Марков","Большаков","Суханов","Миронов","Ширяев","Александров","Коновалов","Шестаков","Казаков","Ефимов","Денисов","Громов","Фомин","Давыдов","Мельников","Щербаков","Блинов","Колесников","Карпов","Афанасьев","Власов","Маслов","Исаков","Тихонов","Аксенов","Гаврилов","Родионов","Котов","Горбунов","Кудряшов","Быков","Зуев","Третьяков","Савельев","Панов","Рыбаков","Суворов","Абрамов","Воронов","Мухин","Архипов","Трофимов","Мартынов","Емельянов","Горшков","Чернов","Овчинников","Селезнев","Панфилов","Копылов","Михеев","Галкин","Назаров","Лобанов","Лукин","Беляков","Потапов","Некрасов","Хохлов","Жданов","Наумов","Шилов","Воронцов","Ермаков","Дроздов","Игнатьев","Савин","Логинов","Сафонов","Капустин","Кириллов","Моисеев","Елисеев","Кошелев","Костин","Горбачев","Орехов","Ефремов","Исаев","Евдокимов","Калашников","Кабанов","Носков","Юдин","Кулагин","Лапин","Прохоров","Нестеров","Харитонов","Агафонов","Муравьев","Ларионов","Федосеев","Зимин","Пахомов","Шубин","Игнатов","Филатов","Крюков","Рогов","Кулаков","Терентьев","Молчанов","Владимиров","Артемьев","Гурьев","Зиновьев","Гришин","Кононов","Дементьев","Ситников","Симонов","Мишин","Фадеев","Комиссаров","Мамонтов","Носов","Гуляев","Шаров","Устинов","Вишняков","Евсеев","Лаврентьев","Брагин","Константинов","Корнилов","Авдеев","Зыков","Бирюков","Шарапов","Никонов","Щукин","Дьячков","Одинцов","Сазонов","Якушев","Красильников","Гордеев","Самойлов","Князев","Беспалов","Уваров","Шашков","Бобылев","Доронин","Белозеров","Рожков","Самсонов","Мясников","Лихачев","Буров","Сысоев","Фомичев","Русаков","Стрелков","Гущин","Тетерин","Колобов","Субботин","Фокин","Блохин","Селиверстов","Пестов","Кондратьев","Силин","Меркушев","Лыткин","Туров"],female_first_name:["Анна","Алёна","Алевтина","Александра","Алина","Алла","Анастасия","Ангелина","Анжела","Анжелика","Антонида","Антонина","Анфиса","Арина","Валентина","Валерия","Варвара","Василиса","Вера","Вероника","Виктория","Галина","Дарья","Евгения","Екатерина","Елена","Елизавета","Жанна","Зинаида","Зоя","Ирина","Кира","Клавдия","Ксения","Лариса","Лидия","Любовь","Людмила","Маргарита","Марина","Мария","Надежда","Наталья","Нина","Оксана","Ольга","Раиса","Регина","Римма","Светлана","София","Таисия","Тамара","Татьяна","Ульяна","Юлия"],female_middle_name:["Александровна","Алексеевна","Альбертовна","Анатольевна","Андреевна","Антоновна","Аркадьевна","Арсеньевна","Артёмовна","Борисовна","Вадимовна","Валентиновна","Валерьевна","Васильевна","Викторовна","Витальевна","Владимировна","Владиславовна","Вячеславовна","Геннадьевна","Георгиевна","Германовна","Григорьевна","Данииловна","Денисовна","Дмитриевна","Евгеньевна","Егоровна","Ивановна","Игнатьевна","Игоревна","Ильинична","Константиновна","Лаврентьевна","Леонидовна","Макаровна","Максимовна","Матвеевна","Михайловна","Никитична","Николаевна","Олеговна","Романовна","Семёновна","Сергеевна","Станиславовна","Степановна","Фёдоровна","Эдуардовна","Юрьевна","Ярославовна"],female_last_name:["Смирнова","Иванова","Кузнецова","Попова","Соколова","Лебедева","Козлова","Новикова","Морозова","Петрова","Волкова","Соловьева","Васильева","Зайцева","Павлова","Семенова","Голубева","Виноградова","Богданова","Воробьева","Федорова","Михайлова","Беляева","Тарасова","Белова","Комарова","Орлова","Киселева","Макарова","Андреева","Ковалева","Ильина","Гусева","Титова","Кузьмина","Кудрявцева","Баранова","Куликова","Алексеева","Степанова","Яковлева","Сорокина","Сергеева","Романова","Захарова","Борисова","Королева","Герасимова","Пономарева","Григорьева","Лазарева","Медведева","Ершова","Никитина","Соболева","Рябова","Полякова","Цветкова","Данилова","Жукова","Фролова","Журавлева","Николаева","Крылова","Максимова","Сидорова","Осипова","Белоусова","Федотова","Дорофеева","Егорова","Матвеева","Боброва","Дмитриева","Калинина","Анисимова","Петухова","Антонова","Тимофеева","Никифорова","Веселова","Филиппова","Маркова","Большакова","Суханова","Миронова","Ширяева","Александрова","Коновалова","Шестакова","Казакова","Ефимова","Денисова","Громова","Фомина","Давыдова","Мельникова","Щербакова","Блинова","Колесникова","Карпова","Афанасьева","Власова","Маслова","Исакова","Тихонова","Аксенова","Гаврилова","Родионова","Котова","Горбунова","Кудряшова","Быкова","Зуева","Третьякова","Савельева","Панова","Рыбакова","Суворова","Абрамова","Воронова","Мухина","Архипова","Трофимова","Мартынова","Емельянова","Горшкова","Чернова","Овчинникова","Селезнева","Панфилова","Копылова","Михеева","Галкина","Назарова","Лобанова","Лукина","Белякова","Потапова","Некрасова","Хохлова","Жданова","Наумова","Шилова","Воронцова","Ермакова","Дроздова","Игнатьева","Савина","Логинова","Сафонова","Капустина","Кириллова","Моисеева","Елисеева","Кошелева","Костина","Горбачева","Орехова","Ефремова","Исаева","Евдокимова","Калашникова","Кабанова","Носкова","Юдина","Кулагина","Лапина","Прохорова","Нестерова","Харитонова","Агафонова","Муравьева","Ларионова","Федосеева","Зимина","Пахомова","Шубина","Игнатова","Филатова","Крюкова","Рогова","Кулакова","Терентьева","Молчанова","Владимирова","Артемьева","Гурьева","Зиновьева","Гришина","Кононова","Дементьева","Ситникова","Симонова","Мишина","Фадеева","Комиссарова","Мамонтова","Носова","Гуляева","Шарова","Устинова","Вишнякова","Евсеева","Лаврентьева","Брагина","Константинова","Корнилова","Авдеева","Зыкова","Бирюкова","Шарапова","Никонова","Щукина","Дьячкова","Одинцова","Сазонова","Якушева","Красильникова","Гордеева","Самойлова","Князева","Беспалова","Уварова","Шашкова","Бобылева","Доронина","Белозерова","Рожкова","Самсонова","Мясникова","Лихачева","Бурова","Сысоева","Фомичева","Русакова","Стрелкова","Гущина","Тетерина","Колобова","Субботина","Фокина","Блохина","Селиверстова","Пестова","Кондратьева","Силина","Меркушева","Лыткина","Турова"],name:["#{male_first_name} #{male_last_name}","#{male_last_name} #{male_first_name}","#{male_first_name} #{male_middle_name} #{male_last_name}","#{male_last_name} #{male_first_name} #{male_middle_name}","#{female_first_name} #{female_last_name}","#{female_last_name} #{female_first_name}","#{female_first_name} #{female_middle_name} #{female_last_name}","#{female_last_name} #{female_first_name} #{female_middle_name}"]},ru.phone_number={formats:["(9##)###-##-##"]},ru.commerce={color:["красный","зеленый","синий","желтый","багровый","мятный","зеленовато-голубой","белый","черный","оранжевый","розовый","серый","красно-коричневый","фиолетовый","бирюзовый","желто-коричневый","небесно голубой","оранжево-розовый","темно-фиолетовый","орхидный","оливковый","пурпурный","лимонный","кремовый","сине-фиолетовый","золотой","красно-пурпурный","голубой","лазурный","лиловый","серебряный"],department:["Книги","Фильмы","музыка","игры","Электроника","компьютеры","Дом","садинструмент","Бакалея","здоровье","красота","Игрушки","детское","для малышей","Одежда","обувь","украшения","Спорт","туризм","Автомобильное","промышленное"],product_name:{adjective:["Маленький","Эргономичный","Грубый","Интеллектуальный","Великолепный","Невероятный","Фантастический","Практчиный","Лоснящийся","Потрясающий"],material:["Стальной","Деревянный","Бетонный","Пластиковый","Хлопковый","Гранитный","Резиновый"],product:["Стул","Автомобиль","Компьютер","Берет","Кулон","Стол","Свитер","Ремень","Ботинок"]}},ru.company={prefix:["ИП","ООО","ЗАО","ОАО","НКО","ТСЖ","ОП"],suffix:["Снаб","Торг","Пром","Трейд","Сбыт"],name:["#{prefix} #{Name.female_first_name}","#{prefix} #{Name.male_first_name}","#{prefix} #{Name.male_last_name}","#{prefix} #{suffix}#{suffix}","#{prefix} #{suffix}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}","#{prefix} #{Address.city_name}#{suffix}#{suffix}#{suffix}"]};

},{}],115:[function(require,module,exports){
var sk={};module.exports=sk,sk.title="Slovakian",sk.address={city_prefix:["North","East","West","South","New","Lake","Port"],city_suffix:["town","ton","land","ville","berg","burgh","borough","bury","view","port","mouth","stad","furt","chester","mouth","fort","haven","side","shire"],country:["Afganistan","Afgánsky islamský štát","Albánsko","Albánska republika","Alžírsko","Alžírska demokratická ľudová republika","Andorra","Andorrské kniežatsvo","Angola","Angolská republika","Antigua a Barbuda","Antigua a Barbuda","Argentína","Argentínska republika","Arménsko","Arménska republika","Austrália","Austrálsky zväz","Azerbajdžan","Azerbajdžanská republika","Bahamy","Bahamské spoločenstvo","Bahrajn","Bahrajnské kráľovstvo","Bangladéš","Bangladéšska ľudová republika","Barbados","Barbados","Belgicko","Belgické kráľovstvo","Belize","Belize","Benin","Beninská republika","Bhután","Bhutánske kráľovstvo","Bielorusko","Bieloruská republika","Bolívia","Bolívijská republika","Bosna a Hercegovina","Republika Bosny a Hercegoviny","Botswana","Botswanská republika","Brazília","Brazílska federatívna republika","Brunej","Brunejský sultanát","Bulharsko","Bulharská republika","Burkina Faso","Burkina Faso","Burundi","Burundská republika","Cyprus","Cyperská republika","Čad","Republika Čad","Česko","Česká republika","Čína","Čínska ľudová republika","Dánsko","Dánsko kráľovstvo","Dominika","Spoločenstvo Dominika","Dominikánska republika","Dominikánska republika","Džibutsko","Džibutská republika","Egypt","Egyptská arabská republika","Ekvádor","Ekvádorská republika","Eritrea","Eritrejský štát","Estónsko","Estónska republika","Etiópia","Etiópska federatívna demokratická republika","Fidži","Republika ostrovy Fidži","Filipíny","Filipínska republika","Fínsko","Fínska republika","Francúzsko","Francúzska republika","Gabon","Gabonská republika","Gambia","Gambijská republika","Ghana","Ghanská republika","Grécko","Helénska republika","Grenada","Grenada","Gruzínsko","Gruzínsko","Guatemala","Guatemalská republika","Guinea","Guinejská republika","Guinea-Bissau","Republika Guinea-Bissau","Guayana","Guayanská republika","Haiti","Republika Haiti","Holandsko","Holandské kráľovstvo","Honduras","Honduraská republika","Chile","Čílska republika","Chorvátsko","Chorvátska republika","India","Indická republika","Indonézia","Indonézska republika","Irak","Iracká republika","Irán","Iránska islamská republika","Island","Islandská republika","Izrael","Štát Izrael","Írsko","Írska republika","Jamajka","Jamajka","Japonsko","Japonsko","Jemen","Jemenská republika","Jordánsko","Jordánske hášimovské kráľovstvo","Južná Afrika","Juhoafrická republika","Kambodža","Kambodžské kráľovstvo","Kamerun","Kamerunská republika","Kanada","Kanada","Kapverdy","Kapverdská republika","Katar","Štát Katar","Kazachstan","Kazašská republika","Keňa","Kenská republika","Kirgizsko","Kirgizská republika","Kiribati","Kiribatská republika","Kolumbia","Kolumbijská republika","Komory","Komorská únia","Kongo","Konžská demokratická republika",'Kongo ("Brazzaville")',"Konžská republika",'Kórea ("Južná")',"Kórejská republika",'Kórea ("Severná")',"Kórejská ľudovodemokratická republika","Kostarika","Kostarická republika","Kuba","Kubánska republika","Kuvajt","Kuvajtský štát","Laos","Laoská ľudovodemokratická republika","Lesotho","Lesothské kráľovstvo","Libanon","Libanonská republika","Libéria","Libérijská republika","Líbya","Líbyjská arabská ľudová socialistická džamáhírija","Lichtenštajnsko","Lichtenštajnské kniežatstvo","Litva","Litovská republika","Lotyšsko","Lotyšská republika","Luxembursko","Luxemburské veľkovojvodstvo","Macedónsko","Macedónska republika","Madagaskar","Madagaskarská republika","Maďarsko","Maďarská republika","Malajzia","Malajzia","Malawi","Malawijská republika","Maldivy","Maldivská republika","Mali","Malijská republika","Malta","Malta","Maroko","Marocké kráľovstvo","Marshallove ostrovy","Republika Marshallových ostrovy","Mauritánia","Mauritánska islamská republika","Maurícius","Maurícijská republika","Mexiko","Spojené štáty mexické","Mikronézia","Mikronézske federatívne štáty","Mjanmarsko","Mjanmarský zväz","Moldavsko","Moldavská republika","Monako","Monacké kniežatstvo","Mongolsko","Mongolsko","Mozambik","Mozambická republika","Namíbia","Namíbijská republika","Nauru","Naurská republika","Nemecko","Nemecká spolková republika","Nepál","Nepálske kráľovstvo","Niger","Nigerská republika","Nigéria","Nigérijská federatívna republika","Nikaragua","Nikaragujská republika","Nový Zéland","Nový Zéland","Nórsko","Nórske kráľovstvo","Omán","Ománsky sultanát","Pakistan","Pakistanská islamská republika","Palau","Palauská republika","Panama","Panamská republika","Papua-Nová Guinea","Nezávislý štát Papua-Nová Guinea","Paraguaj","Paraguajská republika","Peru","Peruánska republika","Pobrežie Slonoviny","Republika Pobrežie Slonoviny","Poľsko","Poľská republika","Portugalsko","Portugalská republika","Rakúsko","Rakúska republika","Rovníková Guinea","Republika Rovníková Guinea","Rumunsko","Rumunsko","Rusko","Ruská federácia","Rwanda","Rwandská republika","Salvádor","Salvádorská republika","Samoa","Nezávislý štát Samoa","San Maríno","Sanmarínska republika","Saudská Arábia","Kráľovstvo Saudskej Arábie","Senegal","Senegalská republika","Seychely","Seychelská republika","Sierra Leone","Republika Sierra Leone","Singapur","Singapurska republika","Slovensko","Slovenská republika","Slovinsko","Slovinská republika","Somálsko","Somálska demokratická republika","Spojené arabské emiráty","Spojené arabské emiráty","Spojené štáty americké","Spojené štáty americké","Srbsko a Čierna Hora","Srbsko a Čierna Hora","Srí Lanka","Demokratická socialistická republika Srí Lanka","Stredoafrická republika","Stredoafrická republika","Sudán","Sudánska republika","Surinam","Surinamská republika","Svazijsko","Svazijské kráľovstvo","Svätá Lucia","Svätá Lucia","Svätý Krištof a Nevis","Federácia Svätý Krištof a Nevis","Sv. Tomáš a Princov Ostrov","Demokratická republika Svätý Tomáš a Princov Ostrov","Sv. Vincent a Grenadíny","Svätý Vincent a Grenadíny","Sýria","Sýrska arabská republika","Šalamúnove ostrovy","Šalamúnove ostrovy","Španielsko","Španielske kráľovstvo","Švajčiarsko","Švajčiarska konfederácia","Švédsko","Švédske kráľovstvo","Tadžikistan","Tadžická republika","Taliansko","Talianska republika","Tanzánia","Tanzánijská zjednotená republika","Thajsko","Thajské kráľovstvo","Togo","Tožská republika","Tonga","Tonžské kráľovstvo","Trinidad a Tobago","Republika Trinidad a Tobago","Tunisko","Tuniská republika","Turecko","Turecká republika","Turkménsko","Turkménsko","Tuvalu","Tuvalu","Uganda","Ugandská republika","Ukrajina","Uruguaj","Uruguajská východná republika","Uzbekistan","Vanuatu","Vanuatská republika","Vatikán","Svätá Stolica","Veľká Británia","Spojené kráľovstvo Veľkej Británie a Severného Írska","Venezuela","Venezuelská bolívarovská republika","Vietnam","Vietnamská socialistická republika","Východný Timor","Demokratická republika Východný Timor","Zambia","Zambijská republika","Zimbabwe","Zimbabwianska republika"],building_number:["#","##","###"],secondary_address:["Apt. ###","Suite ###"],postcode:["#####","### ##","## ###"],state:[],state_abbr:[],time_zone:["Pacific/Midway","Pacific/Pago_Pago","Pacific/Honolulu","America/Juneau","America/Los_Angeles","America/Tijuana","America/Denver","America/Phoenix","America/Chihuahua","America/Mazatlan","America/Chicago","America/Regina","America/Mexico_City","America/Mexico_City","America/Monterrey","America/Guatemala","America/New_York","America/Indiana/Indianapolis","America/Bogota","America/Lima","America/Lima","America/Halifax","America/Caracas","America/La_Paz","America/Santiago","America/St_Johns","America/Sao_Paulo","America/Argentina/Buenos_Aires","America/Guyana","America/Godthab","Atlantic/South_Georgia","Atlantic/Azores","Atlantic/Cape_Verde","Europe/Dublin","Europe/London","Europe/Lisbon","Europe/London","Africa/Casablanca","Africa/Monrovia","Etc/UTC","Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Prague","Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris","Europe/Amsterdam","Europe/Berlin","Europe/Berlin","Europe/Rome","Europe/Stockholm","Europe/Vienna","Africa/Algiers","Europe/Bucharest","Africa/Cairo","Europe/Helsinki","Europe/Kiev","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Vilnius","Europe/Athens","Europe/Istanbul","Europe/Minsk","Asia/Jerusalem","Africa/Harare","Africa/Johannesburg","Europe/Moscow","Europe/Moscow","Europe/Moscow","Asia/Kuwait","Asia/Riyadh","Africa/Nairobi","Asia/Baghdad","Asia/Tehran","Asia/Muscat","Asia/Muscat","Asia/Baku","Asia/Tbilisi","Asia/Yerevan","Asia/Kabul","Asia/Yekaterinburg","Asia/Karachi","Asia/Karachi","Asia/Tashkent","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kolkata","Asia/Kathmandu","Asia/Dhaka","Asia/Dhaka","Asia/Colombo","Asia/Almaty","Asia/Novosibirsk","Asia/Rangoon","Asia/Bangkok","Asia/Bangkok","Asia/Jakarta","Asia/Krasnoyarsk","Asia/Shanghai","Asia/Chongqing","Asia/Hong_Kong","Asia/Urumqi","Asia/Kuala_Lumpur","Asia/Singapore","Asia/Taipei","Australia/Perth","Asia/Irkutsk","Asia/Ulaanbaatar","Asia/Seoul","Asia/Tokyo","Asia/Tokyo","Asia/Tokyo","Asia/Yakutsk","Australia/Darwin","Australia/Adelaide","Australia/Melbourne","Australia/Melbourne","Australia/Sydney","Australia/Brisbane","Australia/Hobart","Asia/Vladivostok","Pacific/Guam","Pacific/Port_Moresby","Asia/Magadan","Asia/Magadan","Pacific/Noumea","Pacific/Fiji","Asia/Kamchatka","Pacific/Majuro","Pacific/Auckland","Pacific/Auckland","Pacific/Tongatapu","Pacific/Fakaofo","Pacific/Apia"],city_name:["Bánovce nad Bebravou","Banská Bystrica","Banská Štiavnica","Bardejov","Bratislava I","Bratislava II","Bratislava III","Bratislava IV","Bratislava V","Brezno","Bytča","Čadca","Detva","Dolný Kubín","Dunajská Streda","Galanta","Gelnica","Hlohovec","Humenné","Ilava","Kežmarok","Komárno","Košice I","Košice II","Košice III","Košice IV","Košice-okolie","Krupina","Kysucké Nové Mesto","Levice","Levoča","Liptovský Mikuláš","Lučenec","Malacky","Martin","Medzilaborce","Michalovce","Myjava","Námestovo","Nitra","Nové Mesto n.Váhom","Nové Zámky","Partizánske","Pezinok","Piešťany","Poltár","Poprad","Považská Bystrica","Prešov","Prievidza","Púchov","Revúca","Rimavská Sobota","Rožňava","Ružomberok","Sabinov","Šaľa","Senec","Senica","Skalica","Snina","Sobrance","Spišská Nová Ves","Stará Ľubovňa","Stropkov","Svidník","Topoľčany","Trebišov","Trenčín","Trnava","Turčianske Teplice","Tvrdošín","Veľký Krtíš","Vranov nad Topľou","Žarnovica","Žiar nad Hronom","Žilina","Zlaté Moravce","Zvolen"],city:["#{city_name}"],street:["Adámiho","Ahoj","Albína Brunovského","Albrechtova","Alejová","Alešova","Alibernetová","Alžbetínska","Alžbety Gwerkovej","Ambroseho","Ambrušova","Americká","Americké námestie","Americké námestie","Andreja Mráza","Andreja Plávku","Andrusovova","Anenská","Anenská","Antolská","Astronomická","Astrová","Azalková","Azovská","Babuškova","Bachova","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajkalská","Bajzova","Bancíkovej","Banícka","Baníkova","Banskobystrická","Banšelova","Bardejovská","Bartókova","Bartoňova","Bartoškova","Baštová","Bazová","Bažantia","Beblavého","Beckovská","Bedľová","Belániková","Belehradská","Belinského","Belopotockého","Beňadická","Bencúrova","Benediktiho","Beniakova","Bernolákova","Beskydská","Betliarska","Bezručova","Biela","Bielkova","Björnsonova","Blagoevova","Blatnická","Blumentálska","Blyskáčová","Bočná","Bohrova","Bohúňova","Bojnická","Borodáčova","Borská","Bosákova","Botanická","Bottova","Boženy Němcovej","Bôrik","Bradáčova","Bradlianska","Brančská","Bratská","Brestová","Brezovská","Briežky","Brnianska","Brodná","Brodská","Broskyňová","Břeclavská","Budatínska","Budatínska","Budatínska","Búdkova  cesta","Budovateľská","Budyšínska","Budyšínska","Buková","Bukureštská","Bulharská","Bulíkova","Bystrého","Bzovícka","Cablkova","Cesta na Červený most","Cesta na Červený most","Cesta na Senec","Cikkerova","Cintorínska","Cintulova","Cukrová","Cyrilova","Čajakova","Čajkovského","Čaklovská","Čalovská","Čapajevova","Čapkova","Čárskeho","Čavojského","Čečinová","Čelakovského","Čerešňová","Černyševského","Červeňova","Česká","Československých par","Čipkárska","Čmelíkova","Čmeľovec","Čulenova","Daliborovo námestie","Dankovského","Dargovská","Ďatelinová","Daxnerovo námestie","Devínska cesta","Dlhé diely I.","Dlhé diely II.","Dlhé diely III.","Dobrovičova","Dobrovičova","Dobrovského","Dobšinského","Dohnalova","Dohnányho","Doležalova","Dolná","Dolnozemská cesta","Domkárska","Domové role","Donnerova","Donovalova","Dostojevského rad","Dr. Vladimíra Clemen","Drevená","Drieňová","Drieňová","Drieňová","Drotárska cesta","Drotárska cesta","Drotárska cesta","Družicová","Družstevná","Dubnická","Dubová","Dúbravská cesta","Dudova","Dulovo námestie","Dulovo námestie","Dunajská","Dvořákovo nábrežie","Edisonova","Einsteinova","Elektrárenská","Exnárova","F. Kostku","Fadruszova","Fajnorovo nábrežie","Fándlyho","Farebná","Farská","Farského","Fazuľová","Fedinova","Ferienčíkova","Fialkové údolie","Fibichova","Filiálne nádražie","Flöglova","Floriánske námestie","Fraňa Kráľa","Francisciho","Francúzskych partizá","Františkánska","Františkánske námest","Furdekova","Furdekova","Gabčíkova","Gagarinova","Gagarinova","Gagarinova","Gajova","Galaktická","Galandova","Gallova","Galvaniho","Gašparíkova","Gaštanová","Gavlovičova","Gemerská","Gercenova","Gessayova","Gettingová","Godrova","Gogoľova","Goláňova","Gondova","Goralská","Gorazdova","Gorkého","Gregorovej","Grösslingova","Gruzínska","Gunduličova","Gusevova","Haanova","Haburská","Halašova","Hálkova","Hálova","Hamuliakova","Hanácka","Handlovská","Hany Meličkovej","Harmanecká","Hasičská","Hattalova","Havlíčkova","Havrania","Haydnova","Herlianska","Herlianska","Heydukova","Hlaváčikova","Hlavatého","Hlavné námestie","Hlboká cesta","Hlboká cesta","Hlivová","Hlučínska","Hodálova","Hodžovo námestie","Holekova","Holíčska","Hollého","Holubyho","Hontianska","Horárska","Horné Židiny","Horská","Horská","Hrad","Hradné údolie","Hrachová","Hraničná","Hrebendova","Hríbová","Hriňovská","Hrobákova","Hrobárska","Hroboňova","Hudecova","Humenské námestie","Hummelova","Hurbanovo námestie","Hurbanovo námestie","Hviezdoslavovo námes","Hýrošova","Chalupkova","Chemická","Chlumeckého","Chorvátska","Chorvátska","Iľjušinova","Ilkovičova","Inovecká","Inovecká","Iskerníková","Ivana Horvátha","Ivánska cesta","J.C.Hronského","Jabloňová","Jadrová","Jakabova","Jakubovo námestie","Jamnického","Jána Stanislava","Janáčkova","Jančova","Janíkove role","Jankolova","Jánošíkova","Jánoškova","Janotova","Jánska","Jantárová cesta","Jarabinková","Jarná","Jaroslavova","Jarošova","Jaseňová","Jasná","Jasovská","Jastrabia","Jašíkova","Javorinská","Javorová","Jazdecká","Jedlíkova","Jégého","Jelačičova","Jelenia","Jesenná","Jesenského","Jiráskova","Jiskrova","Jozefská","Junácka","Jungmannova","Jurigovo námestie","Jurovského","Jurská","Justičná","K lomu","K Železnej studienke","Kalinčiakova","Kamenárska","Kamenné námestie","Kapicova","Kapitulská","Kapitulský dvor","Kapucínska","Kapušianska","Karadžičova","Karadžičova","Karadžičova","Karadžičova","Karloveská","Karloveské rameno","Karpatská","Kašmírska","Kaštielska","Kaukazská","Kempelenova","Kežmarské námestie","Kladnianska","Klariská","Kláštorská","Klatovská","Klatovská","Klemensova","Klincová","Klobučnícka","Klokočova","Kľukatá","Kmeťovo námestie","Koceľova","Kočánkova","Kohútova","Kolárska","Kolískova","Kollárovo námestie","Kollárovo námestie","Kolmá","Komárňanská","Komárnická","Komárnická","Komenského námestie","Kominárska","Komonicová","Konopná","Konvalinková","Konventná","Kopanice","Kopčianska","Koperníkova","Korabinského","Koreničova","Kostlivého","Kostolná","Košická","Košická","Košická","Kováčska","Kovorobotnícka","Kozia","Koziarka","Kozmonautická","Krajná","Krakovská","Kráľovské údolie","Krasinského","Kraskova","Krásna","Krásnohorská","Krasovského","Krátka","Krčméryho","Kremnická","Kresánkova","Krivá","Križkova","Krížna","Krížna","Krížna","Krížna","Krmanova","Krompašská","Krupinská","Krupkova","Kubániho","Kubínska","Kuklovská","Kukučínova","Kukuričná","Kulíškova","Kultúrna","Kupeckého","Kúpeľná","Kutlíkova","Kutuzovova","Kuzmányho","Kvačalova","Kvetná","Kýčerského","Kyjevská","Kysucká","Laborecká","Lackova","Ladislava Sáru","Ľadová","Lachova","Ľaliová","Lamačská cesta","Lamačská cesta","Lamanského","Landererova","Langsfeldova","Ľanová","Laskomerského","Laučekova","Laurinská","Lazaretská","Lazaretská","Legerského","Legionárska","Legionárska","Lehockého","Lehockého","Lenardova","Lermontovova","Lesná","Leškova","Letecká","Letisko M.R.Štefánik","Letná","Levárska","Levická","Levočská","Lidická","Lietavská","Lichardova","Lipová","Lipovinová","Liptovská","Listová","Líščie nivy","Líščie údolie","Litovská","Lodná","Lombardiniho","Lomonosovova","Lopenícka","Lovinského","Ľubietovská","Ľubinská","Ľubľanská","Ľubochnianska","Ľubovnianska","Lúčna","Ľudové námestie","Ľudovíta Fullu","Luhačovická","Lužická","Lužná","Lýcejná","Lykovcová","M. Hella","Magnetová","Macharova","Majakovského","Majerníkova","Májkova","Májová","Makovického","Malá","Malé pálenisko","Malinová","Malý Draždiak","Malý trh","Mamateyova","Mamateyova","Mánesovo námestie","Mariánska","Marie Curie-Sklodows","Márie Medveďovej","Markova","Marótyho","Martákovej","Martinčekova","Martinčekova","Martinengova","Martinská","Mateja Bela","Matejkova","Matičná","Matúšova","Medená","Medzierka","Medzilaborecká","Merlotová","Mesačná","Mestská","Meteorová","Metodova","Mickiewiczova","Mierová","Michalská","Mikovíniho","Mikulášska","Miletičova","Miletičova","Mišíkova","Mišíkova","Mišíkova","Mliekárenská","Mlynarovičova","Mlynská dolina","Mlynská dolina","Mlynská dolina","Mlynské luhy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlynské nivy","Mlyny","Modranská","Mojmírova","Mokráň záhon","Mokrohájska cesta","Moldavská","Molecova","Moravská","Moskovská","Most SNP","Mostová","Mošovského","Motýlia","Moyzesova","Mozartova","Mraziarenská","Mudroňova","Mudroňova","Mudroňova","Muchovo námestie","Murgašova","Muškátová","Muštová","Múzejná","Myjavská","Mýtna","Mýtna","Na Baránku","Na Brezinách","Na Hrebienku","Na Kalvárii","Na Kampárke","Na kopci","Na križovatkách","Na lánoch","Na paši","Na piesku","Na Riviére","Na Sitine","Na Slavíne","Na stráni","Na Štyridsiatku","Na úvrati","Na vŕšku","Na výslní","Nábělkova","Nábrežie arm. gen. L","Nábrežná","Nad Dunajom","Nad lomom","Nad lúčkami","Nad lúčkami","Nad ostrovom","Nad Sihoťou","Námestie 1. mája","Námestie Alexandra D","Námestie Biely kríž","Námestie Hraničiarov","Námestie Jána Pavla","Námestie Ľudovíta Št","Námestie Martina Ben","Nám. M.R.Štefánika","Námestie slobody","Námestie slobody","Námestie SNP","Námestie SNP","Námestie sv. Františ","Narcisová","Nedbalova","Nekrasovova","Neronetová","Nerudova","Nevädzová","Nezábudková","Niťová","Nitrianska","Nížinná","Nobelova","Nobelovo námestie","Nová","Nová Rožňavská","Novackého","Nové pálenisko","Nové záhrady I","Nové záhrady II","Nové záhrady III","Nové záhrady IV","Nové záhrady V","Nové záhrady VI","Nové záhrady VII","Novinárska","Novobanská","Novohradská","Novosvetská","Novosvetská","Novosvetská","Obežná","Obchodná","Očovská","Odbojárov","Odborárska","Odborárske námestie","Odborárske námestie","Ohnicová","Okánikova","Okružná","Olbrachtova","Olejkárska","Ondavská","Ondrejovova","Oravská","Orechová cesta","Orechový rad","Oriešková","Ormisova","Osadná","Ostravská","Ostredková","Osuského","Osvetová","Otonelská","Ovručská","Ovsištské námestie","Pajštúnska","Palackého","Palárikova","Palárikova","Pálavská","Palisády","Palisády","Palisády","Palkovičova","Panenská","Pankúchova","Panónska cesta","Panská","Papánkovo námestie","Papraďová","Páričkova","Parková","Partizánska","Pasienky","Paulínyho","Pavlovičova","Pavlovova","Pavlovská","Pažického","Pažítková","Pečnianska","Pernecká","Pestovateľská","Peterská","Petzvalova","Pezinská","Piesočná","Piešťanská","Pifflova","Pilárikova","Pionierska","Pivoňková","Planckova","Planét","Plátenícka","Pluhová","Plynárenská","Plzenská","Pobrežná","Pod Bôrikom","Pod Kalváriou","Pod lesom","Pod Rovnicami","Pod vinicami","Podhorského","Podjavorinskej","Podlučinského","Podniková","Podtatranského","Pohronská","Polárna","Poloreckého","Poľná","Poľská","Poludníková","Porubského","Poštová","Považská","Povraznícka","Povraznícka","Pražská","Predstaničné námesti","Prepoštská","Prešernova","Prešovská","Prešovská","Prešovská","Pri Bielom kríži","Pri dvore","Pri Dynamitke","Pri Habánskom mlyne","Pri hradnej studni","Pri seči","Pri Starej Prachárni","Pri Starom háji","Pri Starom Mýte","Pri strelnici","Pri Suchom mlyne","Pri zvonici","Pribinova","Pribinova","Pribinova","Pribišova","Pribylinská","Priečna","Priekopy","Priemyselná","Priemyselná","Prievozská","Prievozská","Prievozská","Príkopova","Primaciálne námestie","Prístav","Prístavná","Prokofievova","Prokopa Veľkého","Prokopova","Prúdová","Prvosienková","Púpavová","Pustá","Puškinova","Račianska","Račianska","Račianske mýto","Radarová","Rádiová","Radlinského","Radničná","Radničné námestie","Radvanská","Rajská","Raketová","Rákosová","Rastislavova","Rázusovo nábrežie","Repná","Rešetkova","Revolučná","Révová","Revúcka","Rezedová","Riazanská","Riazanská","Ribayová","Riečna","Rigeleho","Rízlingová","Riznerova","Robotnícka","Romanova","Röntgenova","Rosná","Rovná","Rovniankova","Rovníková","Rozmarínová","Rožňavská","Rožňavská","Rožňavská","Rubinsteinova","Rudnayovo námestie","Rumančeková","Rusovská cesta","Ružičková","Ružinovská","Ružinovská","Ružinovská","Ružomberská","Ružová dolina","Ružová dolina","Rybárska brána","Rybné námestie","Rýdziková","Sabinovská","Sabinovská","Sad Janka Kráľa","Sadová","Sartorisova","Sasinkova","Seberíniho","Sečovská","Sedlárska","Sedmokrásková","Segnerova","Sekulská","Semianova","Senická","Senná","Schillerova","Schody pri starej vo","Sibírska","Sienkiewiczova","Silvánska","Sinokvetná","Skalická cesta","Skalná","Sklenárova","Sklenárska","Sládkovičova","Sladová","Slávičie údolie","Slavín","Slepá","Sliačska","Sliezska","Slivková","Slnečná","Slovanská","Slovinská","Slovnaftská","Slowackého","Smetanova","Smikova","Smolenická","Smolnícka","Smrečianska","Soferove schody","Socháňova","Sokolská","Solivarská","Sološnická","Somolického","Somolického","Sosnová","Spišská","Spojná","Spoločenská","Sputniková","Sreznevského","Srnčia","Stachanovská","Stálicová","Staničná","Stará Černicová","Stará Ivánska cesta","Stará Prievozská","Stará Vajnorská","Stará vinárska","Staré Grunty","Staré ihrisko","Staré záhrady","Starhradská","Starohájska","Staromestská","Staroturský chodník","Staviteľská","Stodolova","Stoklasová","Strakova","Strážnická","Strážny dom","Strečnianska","Stredná","Strelecká","Strmá cesta","Strojnícka","Stropkovská","Struková","Studená","Stuhová","Súbežná","Súhvezdná","Suché mýto","Suchohradská","Súkennícka","Súľovská","Sumbalova","Súmračná","Súťažná","Svätého Vincenta","Svätoplukova","Svätoplukova","Svätovojtešská","Svetlá","Svíbová","Svidnícka","Svoradova","Svrčia","Syslia","Šafárikovo námestie","Šafárikovo námestie","Šafránová","Šagátova","Šalviová","Šancová","Šancová","Šancová","Šancová","Šándorova","Šarišská","Šášovská","Šaštínska","Ševčenkova","Šintavská","Šípková","Škarniclova","Školská","Škovránčia","Škultétyho","Šoltésovej","Špieszova","Špitálska","Športová","Šrobárovo námestie","Šťastná","Štedrá","Štefánikova","Štefánikova","Štefánikova","Štefanovičova","Štefunkova","Štetinova","Štiavnická","Štúrova","Štyndlova","Šulekova","Šulekova","Šulekova","Šumavská","Šuňavcova","Šustekova","Švabinského","Tabaková","Tablicova","Táborská","Tajovského","Tallerova","Tehelná","Technická","Tekovská","Telocvičná","Tematínska","Teplická","Terchovská","Teslova","Tetmayerova","Thurzova","Tichá","Tilgnerova","Timravina","Tobrucká","Tokajícka","Tolstého","Tománkova","Tomášikova","Tomášikova","Tomášikova","Tomášikova","Tomášikova","Topoľčianska","Topoľová","Továrenská","Trebišovská","Trebišovská","Trebišovská","Trenčianska","Treskoňova","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavská cesta","Trnavské mýto","Tŕňová","Trojdomy","Tučkova","Tupolevova","Turbínova","Turčianska","Turnianska","Tvarožkova","Tylova","Tyršovo nábrežie","Údernícka","Údolná","Uhorková","Ukrajinská","Ulica 29. augusta","Ulica 29. augusta","Ulica 29. augusta","Ulica 29. augusta","Ulica Imricha Karvaš","Ulica Jozefa Krónera","Ulica Viktora Tegelh","Úprkova","Úradnícka","Uránová","Urbánkova","Ursínyho","Uršulínska","Úzka","V záhradách","Vajanského nábrežie","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Vajnorská","Valašská","Valchárska","Vansovej","Vápenná","Varínska","Varšavská","Varšavská","Vavilovova","Vavrínova","Vazovova","Včelárska","Velehradská","Veltlínska","Ventúrska","Veterná","Veternicová","Vetvová","Viedenská cesta","Viedenská cesta","Vietnamská","Vígľašská","Vihorlatská","Viktorínova","Vilová","Vincenta Hložníka","Vínna","Vlastenecké námestie","Vlčkova","Vlčkova","Vlčkova","Vodný vrch","Votrubova","Vrábeľská","Vrakunská cesta","Vranovská","Vretenová","Vrchná","Vrútocká","Vyhliadka","Vyhnianska cesta","Vysoká","Vyšehradská","Vyšná","Wattova","Wilsonova","Wolkrova","Za Kasárňou","Za sokolovňou","Za Stanicou","Za tehelňou","Záborského","Zadunajská cesta","Záhorácka","Záhradnícka","Záhradnícka","Záhradnícka","Záhradnícka","Záhrebská","Záhrebská","Zálužická","Zámocká","Zámocké schody","Zámočnícka","Západná","Západný rad","Záporožská","Zátišie","Závodníkova","Zelená","Zelinárska","Zimná","Zlaté piesky","Zlaté schody","Znievska","Zohorská","Zochova","Zrinského","Zvolenská","Žabí majer","Žabotova","Žehrianska","Železná","Železničiarska","Žellova","Žiarska","Židovská","Žilinská","Žilinská","Živnostenská","Žižkova","Župné námestie"],street_name:["#{street}"],street_address:["#{street_name} #{building_number}"],default_country:["Slovensko"]},sk.company={suffix:["s.r.o.","a.s.","v.o.s."],adjective:["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],descriptor:["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],noun:["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],bs_verb:["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],bs_noun:["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich","synergies","web-readiness","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","e-tailers","e-services","action-items","portals","niches","technologies","content","vortals","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","infomediaries","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies"],
name:["#{Name.last_name} #{suffix}","#{Name.last_name} #{suffix}","#{Name.man_last_name} a #{Name.man_last_name} #{suffix}"]},sk.internet={free_email:["gmail.com","zoznam.sk","azet.sk"],domain_suffix:["sk","com","net","eu","org"]},sk.lorem={words:["alias","consequatur","aut","perferendis","sit","voluptatem","accusantium","doloremque","aperiam","eaque","ipsa","quae","ab","illo","inventore","veritatis","et","quasi","architecto","beatae","vitae","dicta","sunt","explicabo","aspernatur","aut","odit","aut","fugit","sed","quia","consequuntur","magni","dolores","eos","qui","ratione","voluptatem","sequi","nesciunt","neque","dolorem","ipsum","quia","dolor","sit","amet","consectetur","adipisci","velit","sed","quia","non","numquam","eius","modi","tempora","incidunt","ut","labore","et","dolore","magnam","aliquam","quaerat","voluptatem","ut","enim","ad","minima","veniam","quis","nostrum","exercitationem","ullam","corporis","nemo","enim","ipsam","voluptatem","quia","voluptas","sit","suscipit","laboriosam","nisi","ut","aliquid","ex","ea","commodi","consequatur","quis","autem","vel","eum","iure","reprehenderit","qui","in","ea","voluptate","velit","esse","quam","nihil","molestiae","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","laudantium","totam","rem","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","sed","ut","perspiciatis","unde","omnis","iste","natus","error","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","porro","quisquam","est","qui","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","temporibus","autem","quibusdam","et","aut","consequatur","vel","illum","qui","dolorem","eum","fugiat","quo","voluptas","nulla","pariatur","at","vero","eos","et","accusamus","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","doloribus","asperiores","repellat"],supplemental:["abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accipio","accommodo","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","adultus","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alienus","alii","alioqui","aliqua","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","arcus","argentum","argumentum","arguo","arma","armarium","armo","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","aspicio","asporto","assentator","astrum","atavus","ater","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","auris","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","avoco","baiulus","balbus","barba","bardus","basium","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certo","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","colloco","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corpus","correptius","corrigo","corroboro","corrumpo","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cunabula","cunae","cunctatio","cupiditas","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","curvus","custodia","damnatio","damno","dapifer","debeo","debilito","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defigo","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delego","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","desidero","desino","desipio","desolo","desparatus","despecto","despirmatio","infit","inflammatio","paens","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecunia","pecus","peior","pel","ocer","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","temptatio","tempus","tenax","tendo","teneo","tener","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","triginta","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpe","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velociter","velum","velut","venia","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduata","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","vultuosus","xiphias"]},sk.name={man_first_name:["Drahoslav","Severín","Alexej","Ernest","Rastislav","Radovan","Dobroslav","Dalibor","Vincent","Miloš","Timotej","Gejza","Bohuš","Alfonz","Gašpar","Emil","Erik","Blažej","Zdenko","Dezider","Arpád","Valentín","Pravoslav","Jaromír","Roman","Matej","Frederik","Viktor","Alexander","Radomír","Albín","Bohumil","Kazimír","Fridrich","Radoslav","Tomáš","Alan","Branislav","Bruno","Gregor","Vlastimil","Boleslav","Eduard","Jozef","Víťazoslav","Blahoslav","Beňadik","Adrián","Gabriel","Marián","Emanuel","Miroslav","Benjamín","Hugo","Richard","Izidor","Zoltán","Albert","Igor","Július","Aleš","Fedor","Rudolf","Valér","Marcel","Ervín","Slavomír","Vojtech","Juraj","Marek","Jaroslav","Žigmund","Florián","Roland","Pankrác","Servác","Bonifác","Svetozár","Bernard","Júlia","Urban","Dušan","Viliam","Ferdinand","Norbert","Róbert","Medard","Zlatko","Anton","Vasil","Vít","Adolf","Vratislav","Alfréd","Alojz","Ján","Tadeáš","Ladislav","Peter","Pavol","Miloslav","Prokop","Cyril","Metod","Patrik","Oliver","Ivan","Kamil","Henrich","Drahomír","Bohuslav","Iľja","Daniel","Vladimír","Jakub","Krištof","Ignác","Gustáv","Jerguš","Dominik","Oskar","Vavrinec","Ľubomír","Mojmír","Leonard","Tichomír","Filip","Bartolomej","Ľudovít","Samuel","Augustín","Belo","Oleg","Bystrík","Ctibor","Ľudomil","Konštantín","Ľuboslav","Matúš","Móric","Ľuboš","Ľubor","Vladislav","Cyprián","Václav","Michal","Jarolím","Arnold","Levoslav","František","Dionýz","Maximilián","Koloman","Boris","Lukáš","Kristián","Vendelín","Sergej","Aurel","Demeter","Denis","Hubert","Karol","Imrich","René","Bohumír","Teodor","Tibor","Maroš","Martin","Svätopluk","Stanislav","Leopold","Eugen","Félix","Klement","Kornel","Milan","Vratko","Ondrej","Andrej","Edmund","Oldrich","Oto","Mikuláš","Ambróz","Radúz","Bohdan","Adam","Štefan","Dávid","Silvester"],woman_first_name:["Alexandra","Karina","Daniela","Andrea","Antónia","Bohuslava","Dáša","Malvína","Kristína","Nataša","Bohdana","Drahomíra","Sára","Zora","Tamara","Ema","Tatiana","Erika","Veronika","Agáta","Dorota","Vanda","Zoja","Gabriela","Perla","Ida","Liana","Miloslava","Vlasta","Lívia","Eleonóra","Etela","Romana","Zlatica","Anežka","Bohumila","Františka","Angela","Matilda","Svetlana","Ľubica","Alena","Soňa","Vieroslava","Zita","Miroslava","Irena","Milena","Estera","Justína","Dana","Danica","Jela","Jaroslava","Jarmila","Lea","Anastázia","Galina","Lesana","Hermína","Monika","Ingrida","Viktória","Blažena","Žofia","Sofia","Gizela","Viola","Gertrúda","Zina","Júlia","Juliana","Želmíra","Ela","Vanesa","Iveta","Vilma","Petronela","Žaneta","Xénia","Karolína","Lenka","Laura","Stanislava","Margaréta","Dobroslava","Blanka","Valéria","Paulína","Sidónia","Adriána","Beáta","Petra","Melánia","Diana","Berta","Patrícia","Lujza","Amália","Milota","Nina","Margita","Kamila","Dušana","Magdaléna","Oľga","Anna","Hana","Božena","Marta","Libuša","Božidara","Dominika","Hortenzia","Jozefína","Štefánia","Ľubomíra","Zuzana","Darina","Marcela","Milica","Elena","Helena","Lýdia","Anabela","Jana","Silvia","Nikola","Ružena","Nora","Drahoslava","Linda","Melinda","Rebeka","Rozália","Regína","Alica","Marianna","Miriama","Martina","Mária","Jolana","Ľudomila","Ľudmila","Olympia","Eugénia","Ľuboslava","Zdenka","Edita","Michaela","Stela","Viera","Natália","Eliška","Brigita","Valentína","Terézia","Vladimíra","Hedviga","Uršuľa","Alojza","Kvetoslava","Sabína","Dobromila","Klára","Simona","Aurélia","Denisa","Renáta","Irma","Agnesa","Klaudia","Alžbeta","Elvíra","Cecília","Emília","Katarína","Henrieta","Bibiána","Barbora","Marína","Izabela","Hilda","Otília","Lucia","Branislava","Bronislava","Ivica","Albína","Kornélia","Sláva","Slávka","Judita","Dagmara","Adela","Nadežda","Eva","Filoména","Ivana","Milada"],man_last_name:["Antal","Babka","Bahna","Bahno","Baláž","Baran","Baranka","Bartovič","Bartoš","Bača","Bernolák","Beňo","Bicek","Bielik","Blaho","Bondra","Bosák","Boška","Brezina","Bukovský","Chalupka","Chudík","Cibula","Cibulka","Cibuľa","Cyprich","Cíger","Danko","Daňko","Daňo","Debnár","Dej","Dekýš","Doležal","Dočolomanský","Droppa","Dubovský","Dudek","Dula","Dulla","Dusík","Dvonč","Dzurjanin","Dávid","Fabian","Fabián","Fajnor","Farkašovský","Fico","Filc","Filip","Finka","Ftorek","Gašpar","Gašparovič","Gocník","Gregor","Greguš","Grznár","Hablák","Habšuda","Halda","Haluška","Halák","Hanko","Hanzal","Haščák","Heretik","Hečko","Hlaváček","Hlinka","Holub","Holuby","Hossa","Hoza","Hraško","Hric","Hrmo","Hrušovský","Huba","Ihnačák","Janeček","Janoška","Jantošovič","Janík","Janček","Jedľovský","Jendek","Jonata","Jurina","Jurkovič","Jurík","Jánošík","Kafenda","Kaliský","Karul","Keníž","Klapka","Kmeť","Kolesár","Kollár","Kolnik","Kolník","Kolár","Korec","Kostka","Kostrec","Kováč","Kováčik","Koza","Kočiš","Krajíček","Krajči","Krajčo","Krajčovič","Krajčír","Králik","Krúpa","Kubík","Kyseľ","Kállay","Labuda","Lepšík","Lipták","Lisický","Lubina","Lukáč","Lupták","Líška","Madej","Majeský","Malachovský","Malíšek","Mamojka","Marcinko","Marián","Masaryk","Maslo","Matiaško","Medveď","Melcer","Mečiar","Michalík","Mihalik","Mihál","Mihálik","Mikloško","Mikulík","Mikuš","Mikúš","Milota","Mináč","Mišík","Mojžiš","Mokroš","Mora","Moravčík","Mydlo","Nemec","Nitra","Novák","Obšut","Ondruš","Otčenáš","Pauko","Pavlikovský","Pavúk","Pašek","Paška","Paško","Pelikán","Petrovický","Petruška","Peško","Plch","Plekanec","Podhradský","Podkonický","Poliak","Pupák","Rak","Repiský","Romančík","Rus","Ružička","Rybníček","Rybár","Rybárik","Samson","Sedliak","Senko","Sklenka","Skokan","Skutecký","Slašťan","Sloboda","Slobodník","Slota","Slovák","Smrek","Stodola","Straka","Strnisko","Svrbík","Sámel","Sýkora","Tatar","Tatarka","Tatár","Tatárka","Thomka","Tomeček","Tomka","Tomko","Truben","Turčok","Uram","Urblík","Vajcík","Vajda","Valach","Valachovič","Valent","Valuška","Vanek","Vesel","Vicen","Višňovský","Vlach","Vojtek","Vydarený","Zajac","Zima","Zimka","Záborský","Zúbrik","Čapkovič","Čaplovič","Čarnogurský","Čierny","Čobrda","Ďaďo","Ďurica","Ďuriš","Šidlo","Šimonovič","Škriniar","Škultéty","Šmajda","Šoltés","Šoltýs","Štefan","Štefanka","Šulc","Šurka","Švehla","Šťastný"],woman_last_name:["Antalová","Babková","Bahnová","Balážová","Baranová","Baranková","Bartovičová","Bartošová","Bačová","Bernoláková","Beňová","Biceková","Bieliková","Blahová","Bondrová","Bosáková","Bošková","Brezinová","Bukovská","Chalupková","Chudíková","Cibulová","Cibulková","Cyprichová","Cígerová","Danková","Daňková","Daňová","Debnárová","Dejová","Dekýšová","Doležalová","Dočolomanská","Droppová","Dubovská","Dudeková","Dulová","Dullová","Dusíková","Dvončová","Dzurjaninová","Dávidová","Fabianová","Fabiánová","Fajnorová","Farkašovská","Ficová","Filcová","Filipová","Finková","Ftoreková","Gašparová","Gašparovičová","Gocníková","Gregorová","Gregušová","Grznárová","Habláková","Habšudová","Haldová","Halušková","Haláková","Hanková","Hanzalová","Haščáková","Heretiková","Hečková","Hlaváčeková","Hlinková","Holubová","Holubyová","Hossová","Hozová","Hrašková","Hricová","Hrmová","Hrušovská","Hubová","Ihnačáková","Janečeková","Janošková","Jantošovičová","Janíková","Jančeková","Jedľovská","Jendeková","Jonatová","Jurinová","Jurkovičová","Juríková","Jánošíková","Kafendová","Kaliská","Karulová","Kenížová","Klapková","Kmeťová","Kolesárová","Kollárová","Kolniková","Kolníková","Kolárová","Korecová","Kostkaová","Kostrecová","Kováčová","Kováčiková","Kozová","Kočišová","Krajíčeková","Krajčová","Krajčovičová","Krajčírová","Králiková","Krúpová","Kubíková","Kyseľová","Kállayová","Labudová","Lepšíková","Liptáková","Lisická","Lubinová","Lukáčová","Luptáková","Líšková","Madejová","Majeská","Malachovská","Malíšeková","Mamojková","Marcinková","Mariánová","Masaryková","Maslová","Matiašková","Medveďová","Melcerová","Mečiarová","Michalíková","Mihaliková","Mihálová","Miháliková","Miklošková","Mikulíková","Mikušová","Mikúšová","Milotová","Mináčová","Mišíková","Mojžišová","Mokrošová","Morová","Moravčíková","Mydlová","Nemcová","Nováková","Obšutová","Ondrušová","Otčenášová","Pauková","Pavlikovská","Pavúková","Pašeková","Pašková","Pelikánová","Petrovická","Petrušková","Pešková","Plchová","Plekanecová","Podhradská","Podkonická","Poliaková","Pupáková","Raková","Repiská","Romančíková","Rusová","Ružičková","Rybníčeková","Rybárová","Rybáriková","Samsonová","Sedliaková","Senková","Sklenková","Skokanová","Skutecká","Slašťanová","Slobodová","Slobodníková","Slotová","Slováková","Smreková","Stodolová","Straková","Strnisková","Svrbíková","Sámelová","Sýkorová","Tatarová","Tatarková","Tatárová","Tatárkaová","Thomková","Tomečeková","Tomková","Trubenová","Turčoková","Uramová","Urblíková","Vajcíková","Vajdová","Valachová","Valachovičová","Valentová","Valušková","Vaneková","Veselová","Vicenová","Višňovská","Vlachová","Vojteková","Vydarená","Zajacová","Zimová","Zimková","Záborská","Zúbriková","Čapkovičová","Čaplovičová","Čarnogurská","Čierná","Čobrdová","Ďaďová","Ďuricová","Ďurišová","Šidlová","Šimonovičová","Škriniarová","Škultétyová","Šmajdová","Šoltésová","Šoltýsová","Štefanová","Štefanková","Šulcová","Šurková","Švehlová","Šťastná"],prefix:["Ing.","Mgr.","JUDr.","MUDr."],suffix:["Phd."],title:{descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liason","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},name:["#{prefix} #{man_first_name} #{man_last_name}","#{prefix} #{woman_first_name} #{woman_last_name}","#{man_first_name} #{man_last_name} #{suffix}","#{woman_first_name} #{woman_last_name} #{suffix}","#{man_first_name} #{man_last_name}","#{man_first_name} #{man_last_name}","#{man_first_name} #{man_last_name}","#{woman_first_name} #{woman_last_name}","#{woman_first_name} #{woman_last_name}","#{woman_first_name} #{woman_last_name}"]},sk.phone_number={formats:["09## ### ###","0## #### ####","0# #### ####","+421 ### ### ###"]};

},{}],116:[function(require,module,exports){
var sv={};module.exports=sv,sv.title="Swedish",sv.address={city_prefix:["Söder","Norr","Väst","Öster","Aling","Ar","Av","Bo","Br","Bå","Ek","En","Esk","Fal","Gäv","Göte","Ha","Helsing","Karl","Krist","Kram","Kung","Kö","Lyck","Ny"],city_suffix:["stad","land","sås","ås","holm","tuna","sta","berg","löv","borg","mora","hamn","fors","köping","by","hult","torp","fred","vik"],country:["Ryssland","Kanada","Kina","USA","Brasilien","Australien","Indien","Argentina","Kazakstan","Algeriet","DR Kongo","Danmark","Färöarna","Grönland","Saudiarabien","Mexiko","Indonesien","Sudan","Libyen","Iran","Mongoliet","Peru","Tchad","Niger","Angola","Mali","Sydafrika","Colombia","Etiopien","Bolivia","Mauretanien","Egypten","Tanzania","Nigeria","Venezuela","Namibia","Pakistan","Moçambique","Turkiet","Chile","Zambia","Marocko","Västsahara","Burma","Afghanistan","Somalia","Centralafrikanska republiken","Sydsudan","Ukraina","Botswana","Madagaskar","Kenya","Frankrike","Franska Guyana","Jemen","Thailand","Spanien","Turkmenistan","Kamerun","Papua Nya Guinea","Sverige","Uzbekistan","Irak","Paraguay","Zimbabwe","Japan","Tyskland","Kongo","Finland","Malaysia","Vietnam","Norge","Svalbard","Jan Mayen","Elfenbenskusten","Polen","Italien","Filippinerna","Ecuador","Burkina Faso","Nya Zeeland","Gabon","Guinea","Storbritannien","Ghana","Rumänien","Laos","Uganda","Guyana","Oman","Vitryssland","Kirgizistan","Senegal","Syrien","Kambodja","Uruguay","Tunisien","Surinam","Nepal","Bangladesh","Tadzjikistan","Grekland","Nicaragua","Eritrea","Nordkorea","Malawi","Benin","Honduras","Liberia","Bulgarien","Kuba","Guatemala","Island","Sydkorea","Ungern","Portugal","Jordanien","Serbien","Azerbajdzjan","Österrike","Förenade Arabemiraten","Tjeckien","Panama","Sierra Leone","Irland","Georgien","Sri Lanka","Litauen","Lettland","Togo","Kroatien","Bosnien och Hercegovina","Costa Rica","Slovakien","Dominikanska republiken","Bhutan","Estland","Danmark","Färöarna","Grönland","Nederländerna","Schweiz","Guinea-Bissau","Taiwan","Moldavien","Belgien","Lesotho","Armenien","Albanien","Salomonöarna","Ekvatorialguinea","Burundi","Haiti","Rwanda","Makedonien","Djibouti","Belize","Israel","El Salvador","Slovenien","Fiji","Kuwait","Swaziland","Timor-Leste","Montenegro","Bahamas","Vanuatu","Qatar","Gambia","Jamaica","Kosovo","Libanon","Cypern","Brunei","Trinidad och Tobago","Kap Verde","Samoa","Luxemburg","Komorerna","Mauritius","São Tomé och Príncipe","Kiribati","Dominica","Tonga","Mikronesiens federerade stater","Singapore","Bahrain","Saint Lucia","Andorra","Palau","Seychellerna","Antigua och Barbuda","Barbados","Saint Vincent och Grenadinerna","Grenada","Malta","Maldiverna","Saint Kitts och Nevis","Marshallöarna","Liechtenstein","San Marino","Tuvalu","Nauru","Monaco","Vatikanstaten"],common_street_suffix:["s Väg","s Gata"],street_prefix:["Västra","Östra","Norra","Södra","Övre","Undre"],street_root:["Björk","Järnvägs","Ring","Skol","Skogs","Ny","Gran","Idrotts","Stor","Kyrk","Industri","Park","Strand","Skol","Trädgård","Ängs","Kyrko","Villa","Ek","Kvarn","Stations","Back","Furu","Gen","Fabriks","Åker","Bäck","Asp"],street_suffix:["vägen","gatan","gränden","gärdet","allén"],state:["Blekinge","Dalarna","Gotland","Gävleborg","Göteborg","Halland","Jämtland","Jönköping","Kalmar","Kronoberg","Norrbotten","Skaraborg","Skåne","Stockholm","Södermanland","Uppsala","Värmland","Västerbotten","Västernorrland","Västmanland","Älvsborg","Örebro","Östergötland"],city:["#{city_prefix}#{city_suffix}"],street_name:["#{street_root}#{street_suffix}","#{street_prefix} #{street_root}#{street_suffix}","#{Name.first_name}#{common_street_suffix}","#{Name.last_name}#{common_street_suffix}"],postcode:["#####"],building_number:["###","##","#"],secondary_address:["Lgh. ###","Hus ###"],street_address:["#{street_name} #{building_number}"],default_country:["Sverige"]},sv.company={suffix:["Gruppen","AB","HB","Group","Investment","Kommanditbolag","Aktiebolag"],name:["#{Name.last_name} #{suffix}","#{Name.last_name}-#{Name.last_name}","#{Name.last_name}, #{Name.last_name} #{suffix}"]},sv.internet={domain_suffix:["se","nu","info","com","org"]},sv.name={first_name_women:["Maria","Anna","Margareta","Elisabeth","Eva","Birgitta","Kristina","Karin","Elisabet","Marie"],first_name_men:["Erik","Lars","Karl","Anders","Per","Johan","Nils","Lennart","Emil","Hans"],last_name:["Johansson","Andersson","Karlsson","Nilsson","Eriksson","Larsson","Olsson","Persson","Svensson","Gustafsson"],prefix:["Dr.","Prof.","PhD."],title:{descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","Dynamic","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liason","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},name:["#{first_name_women} #{last_name}","#{first_name_men} #{last_name}","#{first_name_women} #{last_name}","#{first_name_men} #{last_name}","#{first_name_women} #{last_name}","#{first_name_men} #{last_name}","#{prefix} #{first_name_men} #{last_name}","#{prefix} #{first_name_women} #{last_name}"]},sv.phone_number={formats:["####-#####","####-######"]},sv.cell_phone={common_cell_prefix:[56,62,59],formats:["#{common_cell_prefix}-###-####"]},sv.commerce={color:["vit","silver","grå","svart","röd","grön","blå","gul","lila","indigo","guld","brun","rosa","purpur","korall"],department:["Böcker","Filmer","Musik","Spel","Elektronik","Datorer","Hem","Trädgård","Verktyg","Livsmedel","Hälsa","Skönhet","Leksaker","Klädsel","Skor","Smycken","Sport"],product_name:{adjective:["Liten","Ergonomisk","Robust","Intelligent","Söt","Otrolig","Fatastisk","Praktisk","Slimmad","Grym"],material:["Stål","Metall","Trä","Betong","Plast","Bomul","Grnit","Gummi","Latex"],product:["Stol","Bil","Dator","Handskar","Pants","Shirt","Table","Shoes","Hat"]}},sv.team={suffix:["IF","FF","BK","HK","AIF","SK","FC","SK","BoIS","FK","BIS","FIF","IK"],name:["#{Address.city} #{suffix}"]};

},{}],117:[function(require,module,exports){
var vi={};module.exports=vi,vi.title="Vietnamese",vi.address={city_root:["Bắc Giang","Bắc Kạn","Bắc Ninh","Cao Bằng","Điện Biên","Hà Giang","Hà Nam","Hà Tây","Hải Dương","TP Hải Phòng","Hòa Bình","Hưng Yên","Lai Châu","Lào Cai","Lạng Sơn","Nam Định","Ninh Bình","Phú Thọ","Quảng Ninh","Sơn La","Thái Bình","Thái Nguyên","Tuyên Quang","Vĩnh Phúc","Yên Bái","TP Đà Nẵng","Bình Định","Đắk Lắk","Đắk Nông","Gia Lai","Hà Tĩnh","Khánh Hòa","Kon Tum","Nghệ An","Phú Yên","Quảng Bình","Quảng Nam","Quảng Ngãi","Quảng Trị","Thanh Hóa","Thừa Thiên Huế","TP TP. Hồ Chí Minh","An Giang","Bà Rịa Vũng Tàu","Bạc Liêu","Bến Tre","Bình Dương","Bình Phước","Bình Thuận","Cà Mau","TP Cần Thơ","Đồng Nai","Đồng Tháp","Hậu Giang","Kiên Giang","Lâm Đồng","Long An","Ninh Thuận","Sóc Trăng","Tây Ninh","Tiền Giang","Trà Vinh","Vĩnh Long"],city:["#{city_root}"],postcode:"/[A-PR-UWYZ0-9][A-HK-Y0-9][AEHMNPRTVXY0-9]?[ABEHMNPRVWXY0-9]? {1,2}[0-9][ABD-HJLN-UW-Z]{2}/",county:["Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Việt Nam","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"],default_country:["Việt Nam"]},vi.internet={domain_suffix:["com","net","info","vn","com.vn"]},vi.phone_number={formats:["01#### #####","01### ######","01#1 ### ####","011# ### ####","02# #### ####","03## ### ####","055 #### ####","056 #### ####","0800 ### ####","08## ### ####","09## ### ####","016977 ####","01### #####","0500 ######","0800 ######"]},vi.cell_phone={formats:["074## ######","075## ######","076## ######","077## ######","078## ######","079## ######"]},vi.name={first_name:["Phạm","Nguyễn","Trần","Lê","Lý","Hoàng","Phan","Vũ","Tăng","Đặng","Bùi","Đỗ","Hồ","Ngô","Dương","Đào","Đoàn","Vương","Trịnh","Đinh","Lâm","Phùng","Mai","Tô","Trương","Hà"],last_name:["Nam","Trung","Thanh","Thị","Văn","Dương","Tăng","Quốc","Như","Phạm","Nguyễn","Trần","Lê","Lý","Hoàng","Phan","Vũ","Tăng","Đặng","Bùi","Đỗ","Hồ","Ngô","Dương","Đào","Đoàn","Vương","Trịnh","Đinh","Lâm","Phùng","Mai","Tô","Trương","Hà","Vinh","Nhung","Hòa","Tiến","Tâm","Bửu","Loan","Hiền","Hải","Vân","Kha","Minh","Nhân","Triệu","Tuân","Hữu","Đức","Phú","Khoa","Thắgn","Sơn","Dung","Tú","Trinh","Thảo","Sa","Kim","Long","Thi","Cường","Ngọc","Sinh","Khang","Phong","Thắm","Thu","Thủy","Nhàn"],name:["#{first_name} #{last_name}","#{first_name} #{last_name} #{last_name}","#{first_name} #{last_name} #{last_name} #{last_name}"]},vi.company={prefix:["Công ty","Cty TNHH","Cty","Cửa hàng","Trung tâm","Chi nhánh"],name:["#{prefix} #{Name.last_name}"]},vi.lorem={words:["đã","đang","ừ","ờ","á","không","biết","gì","hết","đâu","nha","thế","thì","là","đánh","đá","đập","phá","viết","vẽ","tô","thuê","mướn","mượn","mua","một","hai","ba","bốn","năm","sáu","bảy","tám","chín","mười","thôi","việc","nghỉ","làm","nhà","cửa","xe","đạp","ác","độc","khoảng","khoan","thuyền","tàu","bè","lầu","xanh","đỏ","tím","vàng","kim","chỉ","khâu","may","vá","em","anh","yêu","thương","thích","con","cái","bàn","ghế","tủ","quần","áo","nón","dép","giày","lỗi","được","ghét","giết","chết","hết","tôi","bạn","tui","trời","trăng","mây","gió","máy","hàng","hóa","leo","núi","bơi","biển","chìm","xuồng","nước","ngọt","ruộng","đồng","quê","hương"]};

},{}],118:[function(require,module,exports){
var zh_CN={};module.exports=zh_CN,zh_CN.title="Chinese",zh_CN.address={city_prefix:["长","上","南","西","北","诸","宁","珠","武","衡","成","福","厦","贵","吉","海","太","济","安","吉","包"],city_suffix:["沙市","京市","宁市","安市","乡县","海市","码市","汉市","阳市","都市","州市","门市","阳市","口市","原市","南市","徽市","林市","头市"],building_number:["#####","####","###","##","#"],street_suffix:["巷","街","路","桥","侬","旁","中心","栋"],postcode:["######"],state:["北京市","上海市","天津市","重庆市","黑龙江省","吉林省","辽宁省","内蒙古","河北省","新疆","甘肃省","青海省","陕西省","宁夏","河南省","山东省","山西省","安徽省","湖北省","湖南省","江苏省","四川省","贵州省","云南省","广西省","西藏","浙江省","江西省","广东省","福建省","台湾省","海南省","香港","澳门"],state_abbr:["京","沪","津","渝","黑","吉","辽","蒙","冀","新","甘","青","陕","宁","豫","鲁","晋","皖","鄂","湘","苏","川","黔","滇","桂","藏","浙","赣","粤","闽","台","琼","港","澳"],city:["#{city_prefix}#{city_suffix}"],street_name:["#{Name.last_name}#{street_suffix}"],street_address:["#{street_name}#{building_number}号"],default_country:["中国"]},zh_CN.name={first_name:["王","李","张","刘","陈","杨","黄","吴","赵","周","徐","孙","马","朱","胡","林","郭","何","高","罗","郑","梁","谢","宋","唐","许","邓","冯","韩","曹","曾","彭","萧","蔡","潘","田","董","袁","于","余","叶","蒋","杜","苏","魏","程","吕","丁","沈","任","姚","卢","傅","钟","姜","崔","谭","廖","范","汪","陆","金","石","戴","贾","韦","夏","邱","方","侯","邹","熊","孟","秦","白","江","阎","薛","尹","段","雷","黎","史","龙","陶","贺","顾","毛","郝","龚","邵","万","钱","严","赖","覃","洪","武","莫","孔"],last_name:["绍齐","博文","梓晨","胤祥","瑞霖","明哲","天翊","凯瑞","健雄","耀杰","潇然","子涵","越彬","钰轩","智辉","致远","俊驰","雨泽","烨磊","晟睿","文昊","修洁","黎昕","远航","旭尧","鸿涛","伟祺","荣轩","越泽","浩宇","瑾瑜","皓轩","擎苍","擎宇","志泽","子轩","睿渊","弘文","哲瀚","雨泽","楷瑞","建辉","晋鹏","天磊","绍辉","泽洋","鑫磊","鹏煊","昊强","伟宸","博超","君浩","子骞","鹏涛","炎彬","鹤轩","越彬","风华","靖琪","明辉","伟诚","明轩","健柏","修杰","志泽","弘文","峻熙","嘉懿","煜城","懿轩","烨伟","苑博","伟泽","熠彤","鸿煊","博涛","烨霖","烨华","煜祺","智宸","正豪","昊然","明杰","立诚","立轩","立辉","峻熙","弘文","熠彤","鸿煊","烨霖","哲瀚","鑫鹏","昊天","思聪","展鹏","笑愚","志强","炫明","雪松","思源","智渊","思淼","晓啸","天宇","浩然","文轩","鹭洋","振家","乐驹","晓博","文博","昊焱","立果","金鑫","锦程","嘉熙","鹏飞","子默","思远","浩轩","语堂","聪健","明","文","果","思","鹏","驰","涛","琪","浩","航","彬"],name:["#{first_name}#{last_name}"]},zh_CN.phone_number={formats:["###-########","####-########","###########"]};

},{}],119:[function(require,module,exports){
var faker=require("../index"),Helpers=require("./helpers"),lorem={words:function(e){return"undefined"==typeof e&&(e=3),Helpers.shuffle(faker.definitions.lorem.words).slice(0,e)},sentence:function(e,r){return"undefined"==typeof e&&(e=3),"undefined"==typeof r&&(r=7),faker.lorem.words(e+faker.random.number(r)).join(" ")},sentences:function(e){"undefined"==typeof e&&(e=3);var r=[];for(e;e>0;e--)r.push(faker.lorem.sentence());return r.join("\n")},paragraph:function(e){return"undefined"==typeof e&&(e=3),faker.lorem.sentences(e+faker.random.number(3))},paragraphs:function(e){"undefined"==typeof e&&(e=3);var r=[];for(e;e>0;e--)r.push(faker.lorem.paragraph());return r.join("\n \r	")}};module.exports=lorem;

},{"../index":82,"./helpers":88}],120:[function(require,module,exports){
var faker=require("../index"),_name={firstName:function(){if("undefined"!=typeof faker.definitions.name.male_first_name&&"undefined"!=typeof faker.definitions.name.female_first_name){var e=faker.random.number(1);return faker.random.array_element(0===e?faker.locales[faker.locale].name.male_first_name:faker.locales[faker.locale].name.female_first_name)}return faker.random.array_element(faker.definitions.name.first_name)},lastName:function(){if("undefined"!=typeof faker.definitions.name.male_last_name&&"undefined"!=typeof faker.defintions.name.female_last_name){var e=faker.random.number(1);return faker.random.array_element(0===e?faker.locales[faker.locale].name.male_last_name:faker.locales[faker.locale].name.female_last_name)}return faker.random.array_element(faker.definitions.name.last_name)},findName:function(e,a){var n=faker.random.number(8);switch(e=e||faker.name.firstName(),a=a||faker.name.lastName(),n){case 0:return faker.name.prefix()+" "+e+" "+a;case 1:return e+" "+a+" "+faker.name.suffix()}return e+" "+a},prefix:function(){return faker.random.array_element(faker.definitions.name.prefix)},suffix:function(){return faker.random.array_element(faker.definitions.name.suffix)}};module.exports=_name;

},{"../index":82}],121:[function(require,module,exports){
var faker=require("../index"),phone={phoneNumber:function(e){return e=e||faker.phone.phoneFormats(),faker.helpers.replaceSymbolWithNumber(e)},phoneNumberFormat:function(e){return e=e||0,faker.helpers.replaceSymbolWithNumber(faker.definitions.phone_number.formats[e])},phoneFormats:function(){return faker.random.array_element(faker.definitions.phone_number.formats)}};module.exports=phone;

},{"../index":82}],122:[function(require,module,exports){
var mersenne=require("../vendor/mersenne"),faker=require("../index"),random={number:function(e){"number"==typeof e&&(e={max:e}),e=e||{},"undefined"==typeof e.min&&(e.min=0),"undefined"==typeof e.max&&(e.max=1),"undefined"==typeof e.precision&&(e.precision=1);var n=e.max;n>0&&(n+=e.precision);var r=e.precision*Math.floor(mersenne.rand(n/e.precision,e.min/e.precision));return r},array_element:function(e){e=e||["a","b","c"];var n=faker.random.number({max:e.length-1});return e[n]},object_element:function(e,n){e=e||{};var r=Object.keys(e),x=faker.random.array_element(r);return"key"===n?x:e[x]},uuid:function(){var e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",n=function(e){var n=16*Math.random()|0,r="x"==e?n:3&n|8;return r.toString(16)};return e.replace(/[xy]/g,n)}};module.exports=random;

},{"../index":82,"../vendor/mersenne":123}],123:[function(require,module,exports){
function MersenneTwister19937(){function n(n){return 0>n?(n^s)+s:n}function r(r,e){return e>r?n(4294967296-(e-r)&4294967295):r-e}function e(r,e){return n(r+e&4294967295)}function t(r,t){for(var i=0,a=0;32>a;++a)r>>>a&1&&(i=e(i,n(t<<a)));return i}var i,a,o,s,u;i=624,a=397,o=2567483615,s=2147483648,u=2147483647;var f=new Array(i),g=i+1;this.init_genrand=function(r){for(f[0]=n(4294967295&r),g=1;i>g;g++)f[g]=e(t(1812433253,n(f[g-1]^f[g-1]>>>30)),g),f[g]=n(4294967295&f[g])},this.init_by_array=function(a,o){var s,u,g;for(this.init_genrand(19650218),s=1,u=0,g=i>o?i:o;g;g--)f[s]=e(e(n(f[s]^t(n(f[s-1]^f[s-1]>>>30),1664525)),a[u]),u),f[s]=n(4294967295&f[s]),s++,u++,s>=i&&(f[0]=f[i-1],s=1),u>=o&&(u=0);for(g=i-1;g;g--)f[s]=r(n((dbg=f[s])^t(n(f[s-1]^f[s-1]>>>30),1566083941)),s),f[s]=n(4294967295&f[s]),s++,s>=i&&(f[0]=f[i-1],s=1);f[0]=2147483648};var d=[0,o];this.genrand_int32=function(){var r;if(g>=i){var e;for(g==i+1&&this.init_genrand(5489),e=0;i-a>e;e++)r=n(f[e]&s|f[e+1]&u),f[e]=n(f[e+a]^r>>>1^d[1&r]);for(;i-1>e;e++)r=n(f[e]&s|f[e+1]&u),f[e]=n(f[e+(a-i)]^r>>>1^d[1&r]);r=n(f[i-1]&s|f[0]&u),f[i-1]=n(f[a-1]^r>>>1^d[1&r]),g=0}return r=f[g++],r=n(r^r>>>11),r=n(r^r<<7&2636928640),r=n(r^r<<15&4022730752),r=n(r^r>>>18)},this.genrand_int31=function(){return this.genrand_int32()>>>1},this.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},this.genrand_real2=function(){return this.genrand_int32()*(1/4294967296)},this.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},this.genrand_res53=function(){var n=this.genrand_int32()>>>5,r=this.genrand_int32()>>>6;return(67108864*n+r)*(1/9007199254740992)}}exports.MersenneTwister19937=MersenneTwister19937;var gen=new MersenneTwister19937;gen.init_genrand((new Date).getTime()%1e9),exports.rand=function(n,r){return n||(r=0,n=32768),Math.floor(gen.genrand_real2()*(n-r)+r)},exports.seed=function(n){if("number"!=typeof n)throw new Error("seed(S) must take numeric argument; is "+typeof n);gen.init_genrand(n)},exports.seed_array=function(n){if("object"!=typeof n)throw new Error("seed_array(A) must take array of numbers; is "+typeof n);gen.init_by_array(n)};

},{}],124:[function(require,module,exports){
!function(e){var o,r,t,n,a;t=/[a-zA-Z]$/,a=/[aeiouAEIOU]$/,r=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,o=e.localPasswordGeneratorLibraryName||"generatePassword",n=function(e,o,t,l){var d,u;return null==e&&(e=10),null==o&&(o=!0),null==t&&(t=/\w/),null==l&&(l=""),l.length>=e?l:(o&&(t=l.match(r)?a:r),u=Math.floor(94*Math.random())+33,d=String.fromCharCode(u),o&&(d=d.toLowerCase()),d.match(t)?n(e,o,t,""+l+d):n(e,o,t,l))},("undefined"!=typeof exports?exports:e)[o]=n,"undefined"!=typeof exports&&"undefined"!=typeof module&&module.exports&&(module.exports=n)}(this);

},{}],125:[function(require,module,exports){
function rnd(r,n){if(r=r||0,n=n||100,"number"==typeof n&&"number"==typeof r)return function(r,n){if(r>n)throw new RangeError("expected min <= max; got min = "+r+", max = "+n);return Math.floor(Math.random()*(n-r+1))+r}(r,n);if("[object Array]"===Object.prototype.toString.call(r))return r[Math.floor(Math.random()*r.length)];if(r&&"object"==typeof r)return function(r){var n,o,i=rnd(0,100)/100,e=0,t=0;for(n in r)if(r.hasOwnProperty(n)){if(t=r[n]+e,o=n,i>=e&&t>=i)break;e+=r[n]}return o}(r);throw new TypeError("Invalid arguments passed to rnd. ("+(n?r+", "+n:r)+")")}function randomLang(){return rnd(["AB","AF","AN","AR","AS","AZ","BE","BG","BN","BO","BR","BS","CA","CE","CO","CS","CU","CY","DA","DE","EL","EN","EO","ES","ET","EU","FA","FI","FJ","FO","FR","FY","GA","GD","GL","GV","HE","HI","HR","HT","HU","HY","ID","IS","IT","JA","JV","KA","KG","KO","KU","KW","KY","LA","LB","LI","LN","LT","LV","MG","MK","MN","MO","MS","MT","MY","NB","NE","NL","NN","NO","OC","PL","PT","RM","RO","RU","SC","SE","SK","SL","SO","SQ","SR","SV","SW","TK","TR","TY","UK","UR","UZ","VI","VO","YI","ZH"])}function randomBrowserAndOS(){var r=rnd({chrome:.45132810566,iexplorer:.27477061836,firefox:.19384170608,safari:.06186781118,opera:.01574236955}),n={chrome:{win:.89,mac:.09,lin:.02},firefox:{win:.83,mac:.16,lin:.01},opera:{win:.91,mac:.03,lin:.06},safari:{win:.04,mac:.96},iexplorer:["win"]};return[r,rnd(n[r])]}function randomProc(r){var n={lin:["i686","x86_64"],mac:{Intel:.48,PPC:.01,"U; Intel":.48,"U; PPC":.01},win:["","WOW64","Win64; x64"]};return rnd(n[r])}function randomRevision(r){for(var n="",o=0;r>o;o++)n+="."+rnd(0,9);return n}var version_string={net:function(){return[rnd(1,4),rnd(0,9),rnd(1e4,99999),rnd(0,9)].join(".")},nt:function(){return rnd(5,6)+"."+rnd(0,3)},ie:function(){return rnd(7,11)},trident:function(){return rnd(3,7)+"."+rnd(0,1)},osx:function(r){return[10,rnd(5,10),rnd(0,9)].join(r||".")},chrome:function(){return[rnd(13,39),0,rnd(800,899),0].join(".")},presto:function(){return"2.9."+rnd(160,190)},presto2:function(){return rnd(10,12)+".00"},safari:function(){return rnd(531,538)+"."+rnd(0,2)+"."+rnd(0,2)}},browser={firefox:function(r){var n=rnd(5,15)+randomRevision(2),o="Gecko/20100101 Firefox/"+n,i=randomProc(r),e="win"===r?"(Windows NT "+version_string.nt()+(i?"; "+i:""):"mac"===r?"(Macintosh; "+i+" Mac OS X "+version_string.osx():"(X11; Linux "+i;return"Mozilla/5.0 "+e+"; rv:"+n.slice(0,-2)+") "+o},iexplorer:function(){var r=version_string.ie();return r>=11?"Mozilla/5.0 (Windows NT 6."+rnd(1,3)+"; Trident/7.0; "+rnd(["Touch; ",""])+"rv:11.0) like Gecko":"Mozilla/5.0 (compatible; MSIE "+r+".0; Windows NT "+version_string.nt()+"; Trident/"+version_string.trident()+(1===rnd(0,1)?"; .NET CLR "+version_string.net():"")+")"},opera:function(r){var n=" Presto/"+version_string.presto()+" Version/"+version_string.presto2()+")",o="win"===r?"(Windows NT "+version_string.nt()+"; U; "+randomLang()+n:"lin"===r?"(X11; Linux "+randomProc(r)+"; U; "+randomLang()+n:"(Macintosh; Intel Mac OS X "+version_string.osx()+" U; "+randomLang()+" Presto/"+version_string.presto()+" Version/"+version_string.presto2()+")";return"Opera/"+rnd(9,14)+"."+rnd(0,99)+" "+o},safari:function r(n){var r=version_string.safari(),o=rnd(4,7)+"."+rnd(0,1)+"."+rnd(0,10),i="mac"===n?"(Macintosh; "+randomProc("mac")+" Mac OS X "+version_string.osx("_")+" rv:"+rnd(2,6)+".0; "+randomLang()+") ":"(Windows; U; Windows NT "+version_string.nt()+")";return"Mozilla/5.0 "+i+"AppleWebKit/"+r+" (KHTML, like Gecko) Version/"+o+" Safari/"+r},chrome:function(r){var n=version_string.safari(),o="mac"===r?"(Macintosh; "+randomProc("mac")+" Mac OS X "+version_string.osx("_")+") ":"win"===r?"(Windows; U; Windows NT "+version_string.nt()+")":"(X11; Linux "+randomProc(r);return"Mozilla/5.0 "+o+" AppleWebKit/"+n+" (KHTML, like Gecko) Chrome/"+version_string.chrome()+" Safari/"+n}};exports.generate=function(){var r=randomBrowserAndOS();return browser[r[0]](r[1])};

},{}],126:[function(require,module,exports){
function toOtherCase(e){return e+(e>=97&&122>=e?-32:e>=65&&90>=e?32:0)}function randBool(){return!this.randInt(0,1)}function randSelect(e){return e instanceof DRange?e.index(this.randInt(0,e.length-1)):e[this.randInt(0,e.length-1)]}function char(e,t){return e=t&&randBool.call(this)?toOtherCase(e):e,String.fromCharCode(e)}function expand(e){if(e.type===ret.types.CHAR)return new DRange(e.value);if(e.type===ret.types.RANGE)return new DRange(e.from,e.to);if(e.type===ret.types.SET){for(var t=new DRange,n=0;n<e.set.length;n++)t.add(expand.call(this,e.set[n]));return e.not?this.defaultRange.clone().subtract(t):t}throw new Error("unexpandable token type: "+e.type)}function gen(e,t){var n,r,a,i,o;switch(e.type){case types.ROOT:case types.GROUP:if(e.notFollowedBy)return"";for(e.remember&&void 0===e.groupNumber&&(e.groupNumber=t.push(null)-1),n=e.options?randSelect.call(this,e.options):e.stack,r="",i=0,o=n.length;o>i;i++)r+=gen.call(this,n[i],t);return e.remember&&(t[e.groupNumber]=r),r;case types.POSITION:return"";case types.SET:var s=expand.call(this,e);return s.length?char.call(this,randSelect.call(this,s),this.ignoreCase):"";case types.RANGE:return char.call(this,this.randInt(e.from,e.to),this.ignoreCase);case types.REPETITION:for(a=this.randInt(e.min,e.max===1/0?e.min+this.max:e.max),r="",i=0;a>i;i++)r+=gen.call(this,e.value,t);return r;case types.REFERENCE:return t[e.value-1]||"";case types.CHAR:return char.call(this,e.value,this.ignoreCase)}}var ret=require("ret"),DRange=require("discontinuous-range"),types=ret.types,RandExp=module.exports=function(e,t){if(this.defaultRange=this.defaultRange.clone(),e instanceof RegExp)this.ignoreCase=e.ignoreCase,this.multiline=e.multiline,"number"==typeof e.max&&(this.max=e.max),e=e.source;else{if("string"!=typeof e)throw new Error("Expected a regexp or string");this.ignoreCase=t&&-1!==t.indexOf("i"),this.multiline=t&&-1!==t.indexOf("m")}this.tokens=ret(e)};RandExp.prototype.max=100,RandExp.prototype.gen=function(){return gen.call(this,this.tokens,[])},RandExp.randexp=function(e,t){var n;return void 0===e._randexp?(n=new RandExp(e,t),e._randexp=n):(n=e._randexp,"number"==typeof e.max&&(n.max=e.max),e.defaultRange instanceof DRange&&(n.defaultRange=e.defaultRange),"function"==typeof e.randInt&&(n.randInt=e.randInt)),n.gen()},RandExp.sugar=function(){RegExp.prototype.gen=function(){return RandExp.randexp(this)}},RandExp.prototype.defaultRange=new DRange(32,126),RandExp.prototype.randInt=function(e,t){return e+Math.floor(Math.random()*(1+t-e))};

},{"discontinuous-range":127,"ret":128}],127:[function(require,module,exports){
function _SubRange(n,t){this.low=n,this.high=t,this.length=1+t-n}function DiscontinuousRange(n,t){return this instanceof DiscontinuousRange?(this.ranges=[],this.length=0,void 0!==n&&this.add(n,t),void 0):new DiscontinuousRange(n,t)}function _update_length(n){n.length=n.ranges.reduce(function(n,t){return n+t.length},0)}_SubRange.prototype.overlaps=function(n){return!(this.high<n.low||this.low>n.high)},_SubRange.prototype.touches=function(n){return!(this.high+1<n.low||this.low-1>n.high)},_SubRange.prototype.add=function(n){return this.touches(n)&&new _SubRange(Math.min(this.low,n.low),Math.max(this.high,n.high))},_SubRange.prototype.subtract=function(n){return this.overlaps(n)?n.low<=this.low&&n.high>=this.high?[]:n.low>this.low&&n.high<this.high?[new _SubRange(this.low,n.low-1),new _SubRange(n.high+1,this.high)]:n.low<=this.low?[new _SubRange(n.high+1,this.high)]:[new _SubRange(this.low,n.low-1)]:!1},_SubRange.prototype.toString=function(){return this.low==this.high?this.low.toString():this.low+"-"+this.high},_SubRange.prototype.clone=function(){return new _SubRange(this.low,this.high)},DiscontinuousRange.prototype.add=function(n,t){function e(n){for(var t=[],e=0;e<o.ranges.length&&!n.touches(o.ranges[e]);)t.push(o.ranges[e].clone()),e++;for(;e<o.ranges.length&&n.touches(o.ranges[e]);)n=n.add(o.ranges[e]),e++;for(t.push(n);e<o.ranges.length;)t.push(o.ranges[e].clone()),e++;o.ranges=t,_update_length(o)}var o=this;return n instanceof DiscontinuousRange?n.ranges.forEach(e):n instanceof _SubRange?e(n):(void 0===t&&(t=n),e(new _SubRange(n,t))),this},DiscontinuousRange.prototype.subtract=function(n,t){function e(n){for(var t=[],e=0;e<o.ranges.length&&!n.overlaps(o.ranges[e]);)t.push(o.ranges[e].clone()),e++;for(;e<o.ranges.length&&n.overlaps(o.ranges[e]);)t=t.concat(o.ranges[e].subtract(n)),e++;for(;e<o.ranges.length;)t.push(o.ranges[e].clone()),e++;o.ranges=t,_update_length(o)}var o=this;return n instanceof DiscontinuousRange?n.ranges.forEach(e):n instanceof _SubRange?e(n):(void 0===t&&(t=n),e(new _SubRange(n,t))),this},DiscontinuousRange.prototype.index=function(n){for(var t=0;t<this.ranges.length&&this.ranges[t].length<=n;)n-=this.ranges[t].length,t++;return t>=this.ranges.length?null:this.ranges[t].low+n},DiscontinuousRange.prototype.toString=function(){return"[ "+this.ranges.join(", ")+" ]"},DiscontinuousRange.prototype.clone=function(){return new DiscontinuousRange(this)},module.exports=DiscontinuousRange;

},{}],128:[function(require,module,exports){
var util=require("./util"),types=require("./types"),sets=require("./sets"),positions=require("./positions");module.exports=function(e){var s,t,a=0,p={type:types.ROOT,stack:[]},r=p,o=p.stack,u=[],n=function(s){util.error(e,"Nothing to repeat at column "+(s-1))},i=util.strToChars(e);for(s=i.length;s>a;)switch(t=i[a++]){case"\\":switch(t=i[a++]){case"b":o.push(positions.wordBoundary());break;case"B":o.push(positions.nonWordBoundary());break;case"w":o.push(sets.words());break;case"W":o.push(sets.notWords());break;case"d":o.push(sets.ints());break;case"D":o.push(sets.notInts());break;case"s":o.push(sets.whitespace());break;case"S":o.push(sets.notWhitespace());break;default:o.push(/\d/.test(t)?{type:types.REFERENCE,value:parseInt(t,10)}:{type:types.CHAR,value:t.charCodeAt(0)})}break;case"^":o.push(positions.begin());break;case"$":o.push(positions.end());break;case"[":var c;"^"===i[a]?(c=!0,a++):c=!1;var l=util.tokenizeClass(i.slice(a),e);a+=l[1],o.push({type:types.SET,set:l[0],not:c});break;case".":o.push(sets.anyChar());break;case"(":var h={type:types.GROUP,stack:[],remember:!0};t=i[a],"?"===t&&(t=i[a+1],a+=2,"="===t?h.followedBy=!0:"!"===t?h.notFollowedBy=!0:":"!==t&&util.error(e,"Invalid group, character '"+t+"' after '?' at column "+(a-1)),h.remember=!1),o.push(h),u.push(r),r=h,o=h.stack;break;case")":0===u.length&&util.error(e,"Unmatched ) at column "+(a-1)),r=u.pop(),o=r.options?r.options[r.options.length-1]:r.stack;break;case"|":r.options||(r.options=[r.stack],delete r.stack);var y=[];r.options.push(y),o=y;break;case"{":var k,b,d=/^(\d+)(,(\d+)?)?\}/.exec(i.slice(a));null!==d?(k=parseInt(d[1],10),b=d[2]?d[3]?parseInt(d[3],10):1/0:k,a+=d[0].length,o.push({type:types.REPETITION,min:k,max:b,value:o.pop()})):o.push({type:types.CHAR,value:123});break;case"?":0===o.length&&n(a),o.push({type:types.REPETITION,min:0,max:1,value:o.pop()});break;case"+":0===o.length&&n(a),o.push({type:types.REPETITION,min:1,max:1/0,value:o.pop()});break;case"*":0===o.length&&n(a),o.push({type:types.REPETITION,min:0,max:1/0,value:o.pop()});break;default:o.push({type:types.CHAR,value:t.charCodeAt(0)})}return 0!==u.length&&util.error(e,"Unterminated group"),p},module.exports.types=types;

},{"./positions":129,"./sets":130,"./types":131,"./util":132}],129:[function(require,module,exports){
var types=require("./types");exports.wordBoundary=function(){return{type:types.POSITION,value:"b"}},exports.nonWordBoundary=function(){return{type:types.POSITION,value:"B"}},exports.begin=function(){return{type:types.POSITION,value:"^"}},exports.end=function(){return{type:types.POSITION,value:"$"}};

},{"./types":131}],130:[function(require,module,exports){
var types=require("./types"),INTS=function(){return[{type:types.RANGE,from:48,to:57}]},WORDS=function(){return[{type:types.CHAR,value:95},{type:types.RANGE,from:97,to:122},{type:types.RANGE,from:65,to:90}].concat(INTS())},WHITESPACE=function(){return[{type:types.CHAR,value:9},{type:types.CHAR,value:10},{type:types.CHAR,value:11},{type:types.CHAR,value:12},{type:types.CHAR,value:13},{type:types.CHAR,value:32},{type:types.CHAR,value:160},{type:types.CHAR,value:5760},{type:types.CHAR,value:6158},{type:types.CHAR,value:8192},{type:types.CHAR,value:8193},{type:types.CHAR,value:8194},{type:types.CHAR,value:8195},{type:types.CHAR,value:8196},{type:types.CHAR,value:8197},{type:types.CHAR,value:8198},{type:types.CHAR,value:8199},{type:types.CHAR,value:8200},{type:types.CHAR,value:8201},{type:types.CHAR,value:8202},{type:types.CHAR,value:8232},{type:types.CHAR,value:8233},{type:types.CHAR,value:8239},{type:types.CHAR,value:8287},{type:types.CHAR,value:12288},{type:types.CHAR,value:65279}]},NOTANYCHAR=function(){return[{type:types.CHAR,value:10},{type:types.CHAR,value:13},{type:types.CHAR,value:8232},{type:types.CHAR,value:8233}]};exports.words=function(){return{type:types.SET,set:WORDS(),not:!1}},exports.notWords=function(){return{type:types.SET,set:WORDS(),not:!0}},exports.ints=function(){return{type:types.SET,set:INTS(),not:!1}},exports.notInts=function(){return{type:types.SET,set:INTS(),not:!0}},exports.whitespace=function(){return{type:types.SET,set:WHITESPACE(),not:!1}},exports.notWhitespace=function(){return{type:types.SET,set:WHITESPACE(),not:!0}},exports.anyChar=function(){return{type:types.SET,set:NOTANYCHAR(),not:!0}};

},{"./types":131}],131:[function(require,module,exports){
module.exports={ROOT:0,GROUP:1,POSITION:2,SET:3,RANGE:4,REPETITION:5,REFERENCE:6,CHAR:7};

},{}],132:[function(require,module,exports){
var types=require("./types"),sets=require("./sets"),CTRL="@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?",SLSH={0:0,t:9,n:10,v:11,f:12,r:13};exports.strToChars=function(e){var s=/(\[\\b\])|\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\[\\\]\^?])|([0tnvfr]))/g;return e=e.replace(s,function(e,s,r,t,n,o,a){var p=s?8:r?parseInt(r,16):t?parseInt(t,16):n?parseInt(n,8):o?CTRL.indexOf(o):a?SLSH[a]:void 0,i=String.fromCharCode(p);return/[\[\]{}\^$.|?*+()]/.test(i)&&(i="\\"+i),i})},exports.tokenizeClass=function(e,s){for(var r,t,n=[],o=/\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?(.)/g;null!=(r=o.exec(e));)if(r[1])n.push(sets.words());else if(r[2])n.push(sets.ints());else if(r[3])n.push(sets.whitespace());else if(r[4])n.push(sets.notWords());else if(r[5])n.push(sets.notInts());else if(r[6])n.push(sets.notWhitespace());else if(r[7])n.push({type:types.RANGE,from:(r[8]||r[9]).charCodeAt(0),to:r[10].charCodeAt(0)});else{if(!(t=r[12]))return[n,o.lastIndex];n.push({type:types.CHAR,value:t.charCodeAt(0)})}exports.error(s,"Unterminated character class")},exports.error=function(e,s){throw new SyntaxError("Invalid regular expression: /"+e+"/: "+s)};

},{"./sets":130,"./types":131}],133:[function(require,module,exports){
function indexOf(e,n,r){var a=e?e.length:0;if(!a)return-1;if("number"==typeof r)r=0>r?nativeMax(a+r,0):r;else if(r){var i=binaryIndex(e,n),t=e[i];return(n===n?n===t:t!==t)?i:-1}return baseIndexOf(e,n,r||0)}var baseIndexOf=require("../internal/baseIndexOf"),binaryIndex=require("../internal/binaryIndex"),nativeMax=Math.max;module.exports=indexOf;

},{"../internal/baseIndexOf":151,"../internal/binaryIndex":163}],134:[function(require,module,exports){
function last(t){var e=t?t.length:0;return e?t[e-1]:void 0}module.exports=last;

},{}],135:[function(require,module,exports){
module.exports=require("./forEach");

},{"./forEach":136}],136:[function(require,module,exports){
var arrayEach=require("../internal/arrayEach"),baseEach=require("../internal/baseEach"),createForEach=require("../internal/createForEach"),forEach=createForEach(arrayEach,baseEach);module.exports=forEach;

},{"../internal/arrayEach":140,"../internal/baseEach":146,"../internal/createForEach":169}],137:[function(require,module,exports){
function map(a,r,e){var i=isArray(a)?arrayMap:baseMap;return r=baseCallback(r,e,3),i(a,r)}var arrayMap=require("../internal/arrayMap"),baseCallback=require("../internal/baseCallback"),baseMap=require("../internal/baseMap"),isArray=require("../lang/isArray");module.exports=map;

},{"../internal/arrayMap":141,"../internal/baseCallback":143,"../internal/baseMap":156,"../lang/isArray":192}],138:[function(require,module,exports){
(function (global){
(function(){function n(n,t){if(n!==t){var r=n===n,e=t===t;if(n>t||!r||n===x&&e)return 1;if(t>n||!e||t===x&&r)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return h(n,r);for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function e(n){return"function"==typeof n||!1}function u(n){return"string"==typeof n?n:null==n?"":n+""}function o(n){return n.charCodeAt(0)}function i(n,t){for(var r=-1,e=n.length;++r<e&&t.indexOf(n.charAt(r))>-1;);return r}function a(n,t){for(var r=n.length;r--&&t.indexOf(n.charAt(r))>-1;);return r}function f(t,r){return n(t.criteria,r.criteria)||t.index-r.index}function c(t,r,e){for(var u=-1,o=t.criteria,i=r.criteria,a=o.length,f=e.length;++u<a;){var c=n(o[u],i[u]);if(c)return u>=f?c:c*(e[u]?1:-1)}return t.index-r.index}function l(n){return qn[n]}function s(n){return Kn[n]}function p(n){return"\\"+Gn[n]}function h(n,t,r){for(var e=n.length,u=t+(r?0:-1);r?u--:++u<e;){var o=n[u];if(o!==o)return u}return-1}function v(n){return!!n&&"object"==typeof n}function _(n){return 160>=n&&n>=9&&13>=n||32==n||160==n||5760==n||6158==n||n>=8192&&(8202>=n||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n)}function g(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;)n[r]===t&&(n[r]=z,o[++u]=r);return o}function y(n,t){for(var r,e=-1,u=n.length,o=-1,i=[];++e<u;){var a=n[e],f=t?t(a,e,n):a;e&&r===f||(r=f,i[++o]=a)}return i}function d(n){for(var t=-1,r=n.length;++t<r&&_(n.charCodeAt(t)););return t}function m(n){for(var t=n.length;t--&&_(n.charCodeAt(t)););return t}function w(n){return Vn[n]}function b(_){function G(n){if(v(n)&&!Ca(n)&&!(n instanceof qn)){if(n instanceof nn)return n;if(Vo.call(n,"__chain__")&&Vo.call(n,"__wrapped__"))return fe(n)}return new nn(n)}function H(){}function nn(n,t,r){this.__wrapped__=n,this.__actions__=r||[],this.__chain__=!!t}function qn(n){this.__wrapped__=n,this.__actions__=null,this.__dir__=1,this.__dropCount__=0,this.__filtered__=!1,this.__iteratees__=null,this.__takeCount__=Oi,this.__views__=null}function Kn(){var n=this.__actions__,t=this.__iteratees__,r=this.__views__,e=new qn(this.__wrapped__);return e.__actions__=n?ot(n):null,e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=t?ot(t):null,e.__takeCount__=this.__takeCount__,e.__views__=r?ot(r):null,e}function Vn(){if(this.__filtered__){var n=new qn(this);n.__dir__=-1,n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Yn(){var n=this.__wrapped__.value();if(!Ca(n))return er(n,this.__actions__);var t=this.__dir__,r=0>t,e=zr(0,n.length,this.__views__),u=e.start,o=e.end,i=o-u,a=r?o:u-1,f=mi(i,this.__takeCount__),c=this.__iteratees__,l=c?c.length:0,s=0,p=[];n:for(;i--&&f>s;){a+=t;for(var h=-1,v=n[a];++h<l;){var _=c[h],g=_.iteratee,y=_.type;if(y==$){if(_.done&&(r?a>_.index:a<_.index)&&(_.count=0,_.done=!1),_.index=a,!_.done){var d=_.limit;if(!(_.done=d>-1?_.count++>=d:!g(v)))continue n}}else{var m=g(v);if(y==P)v=m;else if(!m){if(y==L)continue n;break n}}}p[s++]=v}return p}function Gn(){this.__data__={}}function Jn(n){return this.has(n)&&delete this.__data__[n]}function Xn(n){return"__proto__"==n?x:this.__data__[n]}function Zn(n){return"__proto__"!=n&&Vo.call(this.__data__,n)}function Hn(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this}function Qn(n){var t=n?n.length:0;for(this.data={hash:_i(null),set:new ai};t--;)this.push(n[t])}function nt(n,t){var r=n.data,e="string"==typeof t||Eu(t)?r.set.has(t):r.hash[t];return e?0:-1}function ut(n){var t=this.data;"string"==typeof n||Eu(n)?t.set.add(n):t.hash[n]=!0}function ot(n,t){var r=-1,e=n.length;for(t||(t=So(e));++r<e;)t[r]=n[r];return t}function it(n,t){for(var r=-1,e=n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function at(n,t){for(var r=n.length;r--&&t(n[r],r,n)!==!1;);return n}function ft(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return!1;return!0}function ct(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;){var i=n[r];t(i,r,n)&&(o[++u]=i)}return o}function lt(n,t){for(var r=-1,e=n.length,u=So(e);++r<e;)u[r]=t(n[r],r,n);return u}function st(n){for(var t=-1,r=n.length,e=ji;++t<r;){var u=n[t];u>e&&(e=u)}return e}function pt(n){for(var t=-1,r=n.length,e=Oi;++t<r;){var u=n[t];e>u&&(e=u)}return e}function ht(n,t,r,e){var u=-1,o=n.length;for(e&&o&&(r=n[++u]);++u<o;)r=t(r,n[u],u,n);return r}function vt(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function _t(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function gt(n){for(var t=n.length,r=0;t--;)r+=+n[t]||0;return r}function yt(n,t){return n===x?t:n}function dt(n,t,r,e){return n!==x&&Vo.call(e,r)?n:t}function mt(n,t,r){var e=Ma(t);ui.apply(e,Yi(t));for(var u=-1,o=e.length;++u<o;){var i=e[u],a=n[i],f=r(a,t[i],i,n,t);(f===f?f===a:a!==a)&&(a!==x||i in n)||(n[i]=f)}return n}function wt(n,t){for(var r=-1,e=null==n,u=!e&&Vr(n),o=u&&n.length,i=t.length,a=So(i);++r<i;){var f=t[r];u?a[r]=Yr(f,o)?n[f]:x:a[r]=e?x:n[f]}return a}function bt(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var o=t[e];r[o]=n[o]}return r}function xt(n,t,r){var e=typeof n;return"function"==e?t===x?n:ir(n,t,r):null==n?go:"object"==e?Bt(n):t===x?Ao(n):zt(n,t)}function At(n,t,r,e,u,o,i){var a;if(r&&(a=u?r(n,e,u):r(n)),a!==x)return a;if(!Eu(n))return n;var f=Ca(n);if(f){if(a=Dr(n),!t)return ot(n,a)}else{var c=Go.call(n),l=c==Y;if(c!=X&&c!=D&&(!l||u))return Dn[c]?qr(n,c,t):u?n:{};if(rt(n))return u?n:{};if(a=Mr(l?{}:n),!t)return Ni(a,n)}o||(o=[]),i||(i=[]);for(var s=o.length;s--;)if(o[s]==n)return i[s];return o.push(n),i.push(a),(f?it:Tt)(n,function(e,u){a[u]=At(e,t,r,u,n,o,i)}),a}function jt(n,t,r){if("function"!=typeof n)throw new Po(B);return fi(function(){n.apply(x,r)},t)}function Ot(n,t){var e=n?n.length:0,u=[];if(!e)return u;var o=-1,i=Br(),a=i==r,f=a&&t.length>=200?Mi(t):null,c=t.length;f&&(i=nt,a=!1,t=f);n:for(;++o<e;){var l=n[o];if(a&&l===l){for(var s=c;s--;)if(t[s]===l)continue n;u.push(l)}else i(t,l,0)<0&&u.push(l)}return u}function Et(n,t){var r=!0;return Li(n,function(n,e,u){return r=!!t(n,e,u)}),r}function It(n,t,r,e){var u=n.length;for(r=null==r?0:+r||0,0>r&&(r=-r>u?0:u+r),e=e===x||e>u?u:+e||0,0>e&&(e+=u),u=r>e?0:e>>>0,r>>>=0;u>r;)n[r++]=t;return n}function Rt(n,t){var r=[];return Li(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function kt(n,t,r,e){var u;return r(n,function(n,r,o){return t(n,r,o)?(u=e?r:n,!1):void 0}),u}function St(n,t,r){for(var e=-1,u=n.length,o=-1,i=[];++e<u;){var a=n[e];if(v(a)&&Vr(a)&&(r||Ca(a)||mu(a))){t&&(a=St(a,t,r));for(var f=-1,c=a.length;++f<c;)i[++o]=a[f]}else r||(i[++o]=a)}return i}function Ct(n,t){return Bi(n,t,Mu)}function Tt(n,t){return Bi(n,t,Ma)}function Ut(n,t){return zi(n,t,Ma)}function Wt(n,t){for(var r=-1,e=t.length,u=-1,o=[];++r<e;){var i=t[r];Ua(n[i])&&(o[++u]=i)}return o}function Ft(n,t,r){if(null!=n){n=ie(n),r!==x&&r in n&&(t=[r]);for(var e=-1,u=t.length;null!=n&&++e<u;)n=ie(n)[t[e]];return e&&e==u?n:x}}function Nt(n,t,r,e,u,o){if(n===t)return!0;var i=typeof n,a=typeof t;return"function"!=i&&"object"!=i&&"function"!=a&&"object"!=a||null==n||null==t?n!==n&&t!==t:$t(n,t,Nt,r,e,u,o)}function $t(n,t,r,e,u,o,i){var a=Ca(n),f=Ca(t),c=M,l=M;a||(c=Go.call(n),c==D?c=X:c!=X&&(a=Wu(n))),f||(l=Go.call(t),l==D?l=X:l!=X&&(f=Wu(t)));var s=c==X&&!rt(n),p=l==X&&!rt(t),h=c==l;if(h&&!a&&!s)return Nr(n,t,c);if(!u){var v=s&&Vo.call(n,"__wrapped__"),_=p&&Vo.call(t,"__wrapped__");if(v||_)return r(v?n.value():n,_?t.value():t,e,u,o,i)}if(!h)return!1;o||(o=[]),i||(i=[]);for(var g=o.length;g--;)if(o[g]==n)return i[g]==t;o.push(n),i.push(t);var y=(a?Fr:$r)(n,t,r,e,u,o,i);return o.pop(),i.pop(),y}function Lt(n,t,r,e,u){for(var o=-1,i=t.length,a=!u;++o<i;)if(a&&e[o]?r[o]!==n[t[o]]:!(t[o]in n))return!1;for(o=-1;++o<i;){var f=t[o],c=n[f],l=r[o];if(a&&e[o])var s=c!==x||f in n;else s=u?u(c,l,f):x,s===x&&(s=Nt(l,c,u,!0));if(!s)return!1}return!0}function Pt(n,t){var r=-1,e=Vr(n)?So(n.length):[];return Li(n,function(n,u,o){e[++r]=t(n,u,o)}),e}function Bt(n){var t=Ma(n),r=t.length;if(!r)return _o(!0);if(1==r){var e=t[0],u=n[e];if(Hr(u))return function(n){return null==n?!1:(n=ie(n),n[e]===u&&(u!==x||e in n))}}for(var o=So(r),i=So(r);r--;)u=n[t[r]],o[r]=u,i[r]=Hr(u);return function(n){return null!=n&&Lt(ie(n),t,o,i)}}function zt(n,t){var r=Ca(n),e=Jr(n)&&Hr(t),u=n+"";return n=ae(n),function(o){if(null==o)return!1;var i=u;if(o=ie(o),!(!r&&e||i in o)){if(o=1==n.length?o:Ft(o,Jt(n,0,-1)),null==o)return!1;i=xe(n),o=ie(o)}return o[i]===t?t!==x||i in o:Nt(t,o[i],null,!0)}}function Dt(n,t,r,e,u){if(!Eu(n))return n;var o=Vr(t)&&(Ca(t)||Wu(t));if(!o){var i=Ma(t);ui.apply(i,Yi(t))}return it(i||t,function(a,f){if(i&&(f=a,a=t[f]),v(a))e||(e=[]),u||(u=[]),Mt(n,t,f,Dt,r,e,u);else{var c=n[f],l=r?r(c,a,f,n,t):x,s=l===x;s&&(l=a),!o&&l===x||!s&&(l===l?l===c:c!==c)||(n[f]=l)}}),n}function Mt(n,t,r,e,u,o,i){for(var a=o.length,f=t[r];a--;)if(o[a]==f)return void(n[r]=i[a]);var c=n[r],l=u?u(c,f,r,n,t):x,s=l===x;s&&(l=f,Vr(f)&&(Ca(f)||Wu(f))?l=Ca(c)?c:Vr(c)?ot(c):[]:Wa(f)||mu(f)?l=mu(c)?$u(c):Wa(c)?c:{}:s=!1),o.push(f),i.push(l),s?n[r]=e(l,f,u,o,i):(l===l?l!==c:c===c)&&(n[r]=l)}function qt(n){return function(t){return null==t?x:ie(t)[n]}}function Kt(n){var t=n+"";return n=ae(n),function(r){return Ft(r,n,t)}}function Vt(n,t){for(var r=n?t.length:0;r--;){var e=parseFloat(t[r]);if(e!=u&&Yr(e)){var u=e;ci.call(n,e,1)}}return n}function Yt(n,t){return n+ti(Ai()*(t-n+1))}function Gt(n,t,r,e,u){return u(n,function(n,u,o){r=e?(e=!1,n):t(r,n,u,o)}),r}function Jt(n,t,r){var e=-1,u=n.length;t=null==t?0:+t||0,0>t&&(t=-t>u?0:u+t),r=r===x||r>u?u:+r||0,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var o=So(u);++e<u;)o[e]=n[e+t];return o}function Xt(n,t){var r;return Li(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function Zt(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function Ht(n,t,r){var e=Pr(),u=-1;t=lt(t,function(n){return e(n)});var o=Pt(n,function(n){var r=lt(t,function(t){return t(n)});return{criteria:r,index:++u,value:n}});return Zt(o,function(n,t){return c(n,t,r)})}function Qt(n,t){var r=0;return Li(n,function(n,e,u){r+=+t(n,e,u)||0}),r}function nr(n,t){var e=-1,u=Br(),o=n.length,i=u==r,a=i&&o>=200,f=a?Mi():null,c=[];f?(u=nt,i=!1):(a=!1,f=t?[]:c);n:for(;++e<o;){var l=n[e],s=t?t(l,e,n):l;if(i&&l===l){for(var p=f.length;p--;)if(f[p]===s)continue n;t&&f.push(s),c.push(l)}else u(f,s,0)<0&&((t||a)&&f.push(s),c.push(l))}return c}function tr(n,t){for(var r=-1,e=t.length,u=So(e);++r<e;)u[r]=n[t[r]];return u}function rr(n,t,r,e){for(var u=n.length,o=e?u:-1;(e?o--:++o<u)&&t(n[o],o,n););return r?Jt(n,e?0:o,e?o+1:u):Jt(n,e?o+1:0,e?u:o)}function er(n,t){var r=n;r instanceof qn&&(r=r.value());for(var e=-1,u=t.length;++e<u;){var o=[r],i=t[e];ui.apply(o,i.args),r=i.func.apply(i.thisArg,o)}return r}function ur(n,t,r){var e=0,u=n?n.length:e;if("number"==typeof t&&t===t&&Ri>=u){for(;u>e;){var o=e+u>>>1,i=n[o];(r?t>=i:t>i)?e=o+1:u=o}return u}return or(n,t,go,r)}function or(n,t,r,e){t=r(t);for(var u=0,o=n?n.length:0,i=t!==t,a=t===x;o>u;){var f=ti((u+o)/2),c=r(n[f]),l=c===c;if(i)var s=l||e;else s=a?l&&(e||c!==x):e?t>=c:t>c;s?u=f+1:o=f}return mi(o,Ii)}function ir(n,t,r){if("function"!=typeof n)return go;if(t===x)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,o){return n.call(t,r,e,u,o)};case 5:return function(r,e,u,o,i){return n.call(t,r,e,u,o,i)}}return function(){return n.apply(t,arguments)}}function ar(n){return Ho.call(n,0)}function fr(n,t,r){for(var e=r.length,u=-1,o=di(n.length-e,0),i=-1,a=t.length,f=So(o+a);++i<a;)f[i]=t[i];for(;++u<e;)f[r[u]]=n[u];for(;o--;)f[i++]=n[u++];return f}function cr(n,t,r){for(var e=-1,u=r.length,o=-1,i=di(n.length-u,0),a=-1,f=t.length,c=So(i+f);++o<i;)c[o]=n[o];for(var l=o;++a<f;)c[l+a]=t[a];for(;++e<u;)c[l+r[e]]=n[o++];return c}function lr(n,t){return function(r,e,u){var o=t?t():{};if(e=Pr(e,u,3),Ca(r))for(var i=-1,a=r.length;++i<a;){var f=r[i];n(o,f,e(f,i,r),r)}else Li(r,function(t,r,u){n(o,t,e(t,r,u),u)});return o}}function sr(n){return hu(function(t,r){var e=-1,u=null==t?0:r.length,o=u>2&&r[u-2],i=u>2&&r[2],a=u>1&&r[u-1];for("function"==typeof o?(o=ir(o,a,5),u-=2):(o="function"==typeof a?a:null,u-=o?1:0),i&&Gr(r[0],r[1],i)&&(o=3>u?null:o,u=1);++e<u;){var f=r[e];f&&n(t,f,o)}return t})}function pr(n,t){return function(r,e){var u=r?Vi(r):0;if(!Zr(u))return n(r,e);for(var o=t?u:-1,i=ie(r);(t?o--:++o<u)&&e(i[o],o,i)!==!1;);return r}}function hr(n){return function(t,r,e){for(var u=ie(t),o=e(t),i=o.length,a=n?i:-1;n?a--:++a<i;){var f=o[a];if(r(u[f],f,u)===!1)break}return t}}function vr(n,t){function r(){var u=this&&this!==tt&&this instanceof r?e:n;return u.apply(t,arguments)}var e=gr(n);return r}function _r(n){return function(t){for(var r=-1,e=ho(Qu(t)),u=e.length,o="";++r<u;)o=n(o,e[r],r);return o}}function gr(n){return function(){var t=$i(n.prototype),r=n.apply(t,arguments);return Eu(r)?r:t}}function yr(n){function t(r,e,u){u&&Gr(r,e,u)&&(e=null);var o=Wr(r,n,null,null,null,null,null,e);return o.placeholder=t.placeholder,o}return t}function dr(n,t){return function(r,e,u){u&&Gr(r,e,u)&&(e=null);var i=Pr(),a=null==e;if(i===xt&&a||(a=!1,e=i(e,u,3)),a){var f=Ca(r);if(f||!Uu(r))return n(f?r:oe(r));e=o}return Lr(r,e,t)}}function mr(n,r){return function(e,u,o){if(u=Pr(u,o,3),Ca(e)){var i=t(e,u,r);return i>-1?e[i]:x}return kt(e,u,n)}}function wr(n){return function(r,e,u){return r&&r.length?(e=Pr(e,u,3),t(r,e,n)):-1}}function br(n){return function(t,r,e){return r=Pr(r,e,3),kt(t,r,n,!0)}}function xr(n){return function(){var t=arguments.length;if(!t)return function(){return arguments[0]};for(var r,e=n?t:-1,u=0,o=So(t);n?e--:++e<t;){var i=o[u++]=arguments[e];if("function"!=typeof i)throw new Po(B);var a=r?"":Ki(i);r="wrapper"==a?new nn([]):r}for(e=r?-1:t;++e<t;){i=o[e],a=Ki(i);var f="wrapper"==a?qi(i):null;r=f&&Xr(f[0])&&f[1]==(C|I|k|T)&&!f[4].length&&1==f[9]?r[Ki(f[0])].apply(r,f[3]):1==i.length&&Xr(i)?r[a]():r.thru(i)}return function(){var n=arguments;if(r&&1==n.length&&Ca(n[0]))return r.plant(n[0]).value();for(var e=0,u=o[e].apply(this,n);++e<t;)u=o[e].call(this,u);return u}}}function Ar(n,t){return function(r,e,u){return"function"==typeof e&&u===x&&Ca(r)?n(r,e):t(r,ir(e,u,3))}}function jr(n){return function(t,r,e){return("function"!=typeof r||e!==x)&&(r=ir(r,e,3)),n(t,r,Mu)}}function Or(n){return function(t,r,e){return("function"!=typeof r||e!==x)&&(r=ir(r,e,3)),n(t,r)}}function Er(n){return function(t,r,e){var u={};return r=Pr(r,e,3),Tt(t,function(t,e,o){var i=r(t,e,o);e=n?i:e,t=n?t:i,u[e]=t}),u}}function Ir(n){return function(t,r,e){return t=u(t),(n?t:"")+Cr(t,r,e)+(n?"":t)}}function Rr(n){var t=hu(function(r,e){var u=g(e,t.placeholder);return Wr(r,n,null,e,u)});return t}function kr(n,t){return function(r,e,u,o){var i=arguments.length<3;return"function"==typeof e&&o===x&&Ca(r)?n(r,e,u,i):Gt(r,Pr(e,o,4),u,i,t)}}function Sr(n,t,r,e,u,o,i,a,f,c){function l(){for(var w=arguments.length,b=w,A=So(w);b--;)A[b]=arguments[b];if(e&&(A=fr(A,e,u)),o&&(A=cr(A,o,i)),v||y){var E=l.placeholder,I=g(A,E);if(w-=I.length,c>w){var R=a?ot(a):null,C=di(c-w,0),T=v?I:null,U=v?null:I,W=v?A:null,F=v?null:A;t|=v?k:S,t&=~(v?S:k),_||(t&=~(j|O));var N=[n,t,r,W,T,F,U,R,f,C],$=Sr.apply(x,N);return Xr(n)&&Gi($,N),$.placeholder=E,$}}var L=p?r:this;h&&(n=L[m]),a&&(A=re(A,a)),s&&f<A.length&&(A.length=f);var P=this&&this!==tt&&this instanceof l?d||gr(n):n;return P.apply(L,A)}var s=t&C,p=t&j,h=t&O,v=t&I,_=t&E,y=t&R,d=!h&&gr(n),m=n;return l}function Cr(n,t,r){var e=n.length;if(t=+t,e>=t||!gi(t))return"";var u=t-e;return r=null==r?" ":r+"",oo(r,Qo(u/r.length)).slice(0,u)}function Tr(n,t,r,e){function u(){for(var t=-1,a=arguments.length,f=-1,c=e.length,l=So(a+c);++f<c;)l[f]=e[f];for(;a--;)l[f++]=arguments[++t];var s=this&&this!==tt&&this instanceof u?i:n;return s.apply(o?r:this,l)}var o=t&j,i=gr(n);return u}function Ur(n){return function(t,r,e,u){var o=Pr(e);return o===xt&&null==e?ur(t,r,n):or(t,r,o(e,u,1),n)}}function Wr(n,t,r,e,u,o,i,a){var f=t&O;if(!f&&"function"!=typeof n)throw new Po(B);var c=e?e.length:0;if(c||(t&=~(k|S),e=u=null),c-=u?u.length:0,t&S){var l=e,s=u;e=u=null}var p=f?null:qi(n),h=[n,t,r,e,u,l,s,o,i,a];if(p&&(Qr(h,p),t=h[1],a=h[9]),h[9]=null==a?f?0:n.length:di(a-c,0)||0,t==j)var v=vr(h[0],h[2]);else v=t!=k&&t!=(j|k)||h[4].length?Sr.apply(x,h):Tr.apply(x,h);var _=p?Di:Gi;return _(v,h)}function Fr(n,t,r,e,u,o,i){var a=-1,f=n.length,c=t.length,l=!0;if(f!=c&&!(u&&c>f))return!1;for(;l&&++a<f;){var s=n[a],p=t[a];if(l=x,e&&(l=u?e(p,s,a):e(s,p,a)),l===x)if(u)for(var h=c;h--&&(p=t[h],!(l=s&&s===p||r(s,p,e,u,o,i))););else l=s&&s===p||r(s,p,e,u,o,i)}return!!l}function Nr(n,t,r){switch(r){case q:case K:return+n==+t;case V:return n.name==t.name&&n.message==t.message;case J:return n!=+n?t!=+t:n==+t;case Z:case Q:return n==t+""}return!1}function $r(n,t,r,e,u,o,i){var a=Ma(n),f=a.length,c=Ma(t),l=c.length;if(f!=l&&!u)return!1;for(var s=u,p=-1;++p<f;){var h=a[p],v=u?h in t:Vo.call(t,h);if(v){var _=n[h],g=t[h];v=x,e&&(v=u?e(g,_,h):e(_,g,h)),v===x&&(v=_&&_===g||r(_,g,e,u,o,i))}if(!v)return!1;s||(s="constructor"==h)}if(!s){var y=n.constructor,d=t.constructor;if(y!=d&&"constructor"in n&&"constructor"in t&&!("function"==typeof y&&y instanceof y&&"function"==typeof d&&d instanceof d))return!1}return!0}function Lr(n,t,r){var e=r?Oi:ji,u=e,o=u;return Li(n,function(n,i,a){var f=t(n,i,a);((r?u>f:f>u)||f===e&&f===o)&&(u=f,o=n)}),o}function Pr(n,t,r){var e=G.callback||vo;return e=e===vo?xt:e,r?e(n,t,r):e}function Br(n,t,e){var u=G.indexOf||me;return u=u===me?r:u,n?u(n,t,e):u}function zr(n,t,r){for(var e=-1,u=r?r.length:0;++e<u;){var o=r[e],i=o.size;switch(o.type){case"drop":n+=i;break;case"dropRight":t-=i;break;case"take":t=mi(t,n+i);break;case"takeRight":n=di(n,t-i)}}return{start:n,end:t}}function Dr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&Vo.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function Mr(n){var t=n.constructor;return"function"==typeof t&&t instanceof t||(t=No),new t}function qr(n,t,r){var e=n.constructor;switch(t){case tn:return ar(n);case q:case K:return new e(+n);case rn:case en:case un:case on:case an:case fn:case cn:case ln:case sn:e instanceof e&&(e=Ui[t]);var u=n.buffer;return new e(r?ar(u):u,n.byteOffset,n.length);case J:case Q:return new e(n);case Z:var o=new e(n.source,Sn.exec(n));o.lastIndex=n.lastIndex}return o}function Kr(n,t,r){null==n||Jr(t,n)||(t=ae(t),n=1==t.length?n:Ft(n,Jt(t,0,-1)),t=xe(t));var e=null==n?n:n[t];return null==e?x:e.apply(n,r)}function Vr(n){return null!=n&&Zr(Vi(n))}function Yr(n,t){return n=+n,t=null==t?Si:t,n>-1&&n%1==0&&t>n}function Gr(n,t,r){if(!Eu(r))return!1;var e=typeof t;if("number"==e?Vr(r)&&Yr(t,r.length):"string"==e&&t in r){var u=r[t];return n===n?n===u:u!==u}return!1}function Jr(n,t){var r=typeof n;if("string"==r&&An.test(n)||"number"==r)return!0;if(Ca(n))return!1;var e=!xn.test(n);return e||null!=t&&n in ie(t)}function Xr(n){var t=Ki(n);return!!t&&n===G[t]&&t in qn.prototype}function Zr(n){return"number"==typeof n&&n>-1&&n%1==0&&Si>=n}function Hr(n){return n===n&&!Eu(n)}function Qr(n,t){var r=n[1],e=t[1],u=r|e,o=C>u,i=e==C&&r==I||e==C&&r==T&&n[7].length<=t[8]||e==(C|T)&&r==I;if(!o&&!i)return n;e&j&&(n[2]=t[2],u|=r&j?0:E);var a=t[3];if(a){var f=n[3];n[3]=f?fr(f,a,t[4]):ot(a),n[4]=f?g(n[3],z):ot(t[4])}return a=t[5],a&&(f=n[5],n[5]=f?cr(f,a,t[6]):ot(a),n[6]=f?g(n[5],z):ot(t[6])),a=t[7],a&&(n[7]=ot(a)),e&C&&(n[8]=null==n[8]?t[8]:mi(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function ne(n,t){n=ie(n);for(var r=-1,e=t.length,u={};++r<e;){var o=t[r];o in n&&(u[o]=n[o])}return u}function te(n,t){var r={};return Ct(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function re(n,t){for(var r=n.length,e=mi(t.length,r),u=ot(n);e--;){var o=t[e];n[e]=Yr(o,r)?u[o]:x}return n}function ee(n){var t,r=G.support;if(!v(n)||Go.call(n)!=X||rt(n)||!Vo.call(n,"constructor")&&(t=n.constructor,"function"==typeof t&&!(t instanceof t))||!r.argsTag&&mu(n))return!1;var e;return r.ownLast?(Ct(n,function(n,t,r){return e=Vo.call(r,t),!1}),e!==!1):(Ct(n,function(n,t){e=t}),e===x||Vo.call(n,e))}function ue(n){for(var t=Mu(n),r=t.length,e=r&&n.length,u=G.support,o=e&&Zr(e)&&(Ca(n)||u.nonEnumStrings&&Uu(n)||u.nonEnumArgs&&mu(n)),i=-1,a=[];++i<r;){var f=t[i];(o&&Yr(f,e)||Vo.call(n,f))&&a.push(f)}return a}function oe(n){return null==n?[]:Vr(n)?G.support.unindexedChars&&Uu(n)?n.split(""):Eu(n)?n:No(n):Gu(n)}function ie(n){if(G.support.unindexedChars&&Uu(n)){for(var t=-1,r=n.length,e=No(n);++t<r;)e[t]=n.charAt(t);return e}return Eu(n)?n:No(n)}function ae(n){if(Ca(n))return n;var t=[];return u(n).replace(jn,function(n,r,e,u){t.push(e?u.replace(Rn,"$1"):r||n)}),t}function fe(n){return n instanceof qn?n.clone():new nn(n.__wrapped__,n.__chain__,ot(n.__actions__))}function ce(n,t,r){t=(r?Gr(n,t,r):null==t)?1:di(+t||1,1);for(var e=0,u=n?n.length:0,o=-1,i=So(Qo(u/t));u>e;)i[++o]=Jt(n,e,e+=t);return i}function le(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var o=n[t];o&&(u[++e]=o)}return u}function se(n,t,r){var e=n?n.length:0;return e?((r?Gr(n,t,r):null==t)&&(t=1),Jt(n,0>t?0:t)):[]}function pe(n,t,r){var e=n?n.length:0;return e?((r?Gr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Jt(n,0,0>t?0:t)):[]}function he(n,t,r){return n&&n.length?rr(n,Pr(t,r,3),!0,!0):[]}function ve(n,t,r){return n&&n.length?rr(n,Pr(t,r,3),!0):[]}function _e(n,t,r,e){var u=n?n.length:0;return u?(r&&"number"!=typeof r&&Gr(n,t,r)&&(r=0,e=u),It(n,t,r,e)):[]}function ge(n){return n?n[0]:x}function ye(n,t,r){var e=n?n.length:0;return r&&Gr(n,t,r)&&(t=!1),e?St(n,t):[]}function de(n){var t=n?n.length:0;return t?St(n,!0):[]}function me(n,t,e){var u=n?n.length:0;if(!u)return-1;if("number"==typeof e)e=0>e?di(u+e,0):e;else if(e){var o=ur(n,t),i=n[o];return(t===t?t===i:i!==i)?o:-1}return r(n,t,e||0)}function we(n){return pe(n,1)}function be(){for(var n=[],t=-1,e=arguments.length,u=[],o=Br(),i=o==r,a=[];++t<e;){var f=arguments[t];Vr(f)&&(n.push(f),u.push(i&&f.length>=120?Mi(t&&f):null))}if(e=n.length,2>e)return a;var c=n[0],l=-1,s=c?c.length:0,p=u[0];n:for(;++l<s;)if(f=c[l],(p?nt(p,f):o(a,f,0))<0){for(t=e;--t;){var h=u[t];if((h?nt(h,f):o(n[t],f,0))<0)continue n}p&&p.push(f),a.push(f)}return a}function xe(n){var t=n?n.length:0;return t?n[t-1]:x}function Ae(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if("number"==typeof r)u=(0>r?di(e+r,0):mi(r||0,e-1))+1;else if(r){u=ur(n,t,!0)-1;var o=n[u];return(t===t?t===o:o!==o)?u:-1}if(t!==t)return h(n,u,!0);for(;u--;)if(n[u]===t)return u;return-1}function je(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=Br(),u=n.length;++r<u;)for(var o=0,i=n[r];(o=e(t,i,o))>-1;)ci.call(t,o,1);return t}function Oe(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,o=[],i=n.length;for(t=Pr(t,r,3);++u<i;){var a=n[u];t(a,u,n)&&(e.push(a),o.push(u))}return Vt(n,o),e}function Ee(n){return se(n,1)}function Ie(n,t,r){var e=n?n.length:0;return e?(r&&"number"!=typeof r&&Gr(n,t,r)&&(t=0,r=e),Jt(n,t,r)):[]}function Re(n,t,r){var e=n?n.length:0;return e?((r?Gr(n,t,r):null==t)&&(t=1),Jt(n,0,0>t?0:t)):[]}function ke(n,t,r){var e=n?n.length:0;return e?((r?Gr(n,t,r):null==t)&&(t=1),t=e-(+t||0),Jt(n,0>t?0:t)):[]}function Se(n,t,r){return n&&n.length?rr(n,Pr(t,r,3),!1,!0):[]}function Ce(n,t,r){return n&&n.length?rr(n,Pr(t,r,3)):[]}function Te(n,t,e,u){var o=n?n.length:0;if(!o)return[];null!=t&&"boolean"!=typeof t&&(u=e,e=Gr(n,t,u)?null:t,t=!1);var i=Pr();return(i!==xt||null!=e)&&(e=i(e,u,3)),t&&Br()==r?y(n,e):nr(n,e)}function Ue(n){if(!n||!n.length)return[];var t=-1,r=0;n=ct(n,function(n){return Vr(n)?(r=di(n.length,r),!0):void 0});for(var e=So(r);++t<r;)e[t]=lt(n,qt(t));return e}function We(n,t,r){var e=n?n.length:0;if(!e)return[];var u=Ue(n);return null==t?u:(t=ir(t,r,4),lt(u,function(n){return ht(n,t,x,!0)}))}function Fe(){for(var n=-1,t=arguments.length;++n<t;){var r=arguments[n];if(Vr(r))var e=e?Ot(e,r).concat(Ot(r,e)):r}return e?nr(e):[]}function Ne(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Ca(n[0])||(t=[]);++r<e;){var o=n[r];t?u[o]=t[r]:o&&(u[o[0]]=o[1])}return u}function $e(n){var t=G(n);return t.__chain__=!0,t}function Le(n,t,r){return t.call(r,n),n}function Pe(n,t,r){return t.call(r,n)}function Be(){return $e(this)}function ze(){return new nn(this.value(),this.__chain__)}function De(n){for(var t,r=this;r instanceof H;){var e=fe(r);t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function Me(){var n=this.__wrapped__;return n instanceof qn?(this.__actions__.length&&(n=new qn(this)),new nn(n.reverse(),this.__chain__)):this.thru(function(n){return n.reverse()})}function qe(){return this.value()+""}function Ke(){return er(this.__wrapped__,this.__actions__)}function Ve(n,t,r){var e=Ca(n)?ft:Et;return r&&Gr(n,t,r)&&(t=null),("function"!=typeof t||r!==x)&&(t=Pr(t,r,3)),e(n,t)}function Ye(n,t,r){var e=Ca(n)?ct:Rt;return t=Pr(t,r,3),e(n,t)}function Ge(n,t){return aa(n,Bt(t))}function Je(n,t,r,e){var u=n?Vi(n):0;return Zr(u)||(n=Gu(n),u=n.length),u?(r="number"!=typeof r||e&&Gr(t,r,e)?0:0>r?di(u+r,0):r||0,"string"==typeof n||!Ca(n)&&Uu(n)?u>r&&n.indexOf(t,r)>-1:Br(n,t,r)>-1):!1}function Xe(n,t,r){var e=Ca(n)?lt:Pt;return t=Pr(t,r,3),e(n,t)}function Ze(n,t){return Xe(n,Ao(t))}function He(n,t,r){var e=Ca(n)?ct:Rt;return t=Pr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})}function Qe(n,t,r){if(r?Gr(n,t,r):null==t){n=oe(n);var e=n.length;return e>0?n[Yt(0,e-1)]:x}var u=nu(n);return u.length=mi(0>t?0:+t||0,u.length),u}function nu(n){n=oe(n);for(var t=-1,r=n.length,e=So(r);++t<r;){var u=Yt(0,t);t!=u&&(e[t]=e[u]),e[u]=n[t]}return e}function tu(n){var t=n?Vi(n):0;return Zr(t)?t:Ma(n).length}function ru(n,t,r){var e=Ca(n)?_t:Xt;return r&&Gr(n,t,r)&&(t=null),("function"!=typeof t||r!==x)&&(t=Pr(t,r,3)),e(n,t)}function eu(n,t,r){if(null==n)return[];r&&Gr(n,t,r)&&(t=null);var e=-1;t=Pr(t,r,3);var u=Pt(n,function(n,r,u){return{criteria:t(n,r,u),index:++e,value:n}});return Zt(u,f)}function uu(n,t,r,e){return null==n?[]:(e&&Gr(t,r,e)&&(r=null),Ca(t)||(t=null==t?[]:[t]),Ca(r)||(r=null==r?[]:[r]),Ht(n,t,r))}function ou(n,t){return Ye(n,Bt(t))}function iu(n,t){if("function"!=typeof t){if("function"!=typeof n)throw new Po(B);var r=n;n=t,t=r}return n=gi(n=+n)?n:0,function(){return--n<1?t.apply(this,arguments):void 0}}function au(n,t,r){return r&&Gr(n,t,r)&&(t=null),t=n&&null==t?n.length:di(+t||0,0),Wr(n,C,null,null,null,null,t)}function fu(n,t){var r;if("function"!=typeof t){if("function"!=typeof n)throw new Po(B);var e=n;n=t,t=e}return function(){return--n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}}function cu(n,t,r){function e(){p&&ni(p),f&&ni(f),f=p=h=x}function u(){var r=t-(da()-l);if(0>=r||r>t){f&&ni(f);var e=h;f=p=h=x,e&&(v=da(),c=n.apply(s,a),p||f||(a=s=null))}else p=fi(u,r)}function o(){p&&ni(p),f=p=h=x,(g||_!==t)&&(v=da(),c=n.apply(s,a),p||f||(a=s=null))}function i(){if(a=arguments,l=da(),s=this,h=g&&(p||!y),_===!1)var r=y&&!p;else{f||y||(v=l);var e=_-(l-v),i=0>=e||e>_;i?(f&&(f=ni(f)),v=l,c=n.apply(s,a)):f||(f=fi(o,e))}return i&&p?p=ni(p):p||t===_||(p=fi(u,t)),r&&(i=!0,c=n.apply(s,a)),!i||p||f||(a=s=null),c}var a,f,c,l,s,p,h,v=0,_=!1,g=!0;if("function"!=typeof n)throw new Po(B);if(t=0>t?0:+t||0,r===!0){var y=!0;g=!1}else Eu(r)&&(y=r.leading,_="maxWait"in r&&di(+r.maxWait||0,t),g="trailing"in r?r.trailing:g);return i.cancel=e,i}function lu(n,t){if("function"!=typeof n||t&&"function"!=typeof t)throw new Po(B);var r=function(){var e=arguments,u=r.cache,o=t?t.apply(this,e):e[0];if(u.has(o))return u.get(o);var i=n.apply(this,e);return u.set(o,i),i};return r.cache=new lu.Cache,r}function su(n){if("function"!=typeof n)throw new Po(B);return function(){return!n.apply(this,arguments)}}function pu(n){return fu(2,n)}function hu(n,t){if("function"!=typeof n)throw new Po(B);return t=di(t===x?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=di(r.length-t,0),o=So(u);++e<u;)o[e]=r[t+e];switch(t){case 0:return n.call(this,o);case 1:return n.call(this,r[0],o);case 2:return n.call(this,r[0],r[1],o)}var i=So(t+1);for(e=-1;++e<t;)i[e]=r[e];return i[t]=o,n.apply(this,i)}}function vu(n){if("function"!=typeof n)throw new Po(B);return function(t){return n.apply(this,t)}}function _u(n,t,r){var e=!0,u=!0;if("function"!=typeof n)throw new Po(B);return r===!1?e=!1:Eu(r)&&(e="leading"in r?!!r.leading:e,u="trailing"in r?!!r.trailing:u),Mn.leading=e,Mn.maxWait=+t,Mn.trailing=u,cu(n,t,Mn)}function gu(n,t){return t=null==t?go:t,Wr(t,k,null,[n],[])}function yu(n,t,r,e){return t&&"boolean"!=typeof t&&Gr(n,t,r)?t=!1:"function"==typeof t&&(e=r,r=t,t=!1),r="function"==typeof r&&ir(r,e,1),At(n,t,r)}function du(n,t,r){return t="function"==typeof t&&ir(t,r,1),At(n,!0,t)}function mu(n){return v(n)&&Vr(n)&&Go.call(n)==D}function wu(n){return n===!0||n===!1||v(n)&&Go.call(n)==q}function bu(n){return v(n)&&Go.call(n)==K}function xu(n){return!!n&&1===n.nodeType&&v(n)&&(G.support.nodeTag?Go.call(n).indexOf("Element")>-1:rt(n))}function Au(n){return null==n?!0:Vr(n)&&(Ca(n)||Uu(n)||mu(n)||v(n)&&Ua(n.splice))?!n.length:!Ma(n).length}function ju(n,t,r,e){if(r="function"==typeof r&&ir(r,e,3),!r&&Hr(n)&&Hr(t))return n===t;var u=r?r(n,t):x;return u===x?Nt(n,t,r):!!u}function Ou(n){return v(n)&&"string"==typeof n.message&&Go.call(n)==V}function Eu(n){var t=typeof n;return"function"==t||!!n&&"object"==t}function Iu(n,t,r,e){var u=Ma(t),o=u.length;if(!o)return!0;if(null==n)return!1;if(r="function"==typeof r&&ir(r,e,3),n=ie(n),!r&&1==o){var i=u[0],a=t[i];if(Hr(a))return a===n[i]&&(a!==x||i in n)}for(var f=So(o),c=So(o);o--;)a=f[o]=t[u[o]],c[o]=Hr(a);return Lt(n,u,f,c,r)}function Ru(n){return Cu(n)&&n!=+n}function ku(n){return null==n?!1:Go.call(n)==Y?Xo.test(Ko.call(n)):v(n)&&(rt(n)?Xo:Tn).test(n)}function Su(n){return null===n}function Cu(n){return"number"==typeof n||v(n)&&Go.call(n)==J}function Tu(n){return Eu(n)&&Go.call(n)==Z}function Uu(n){return"string"==typeof n||v(n)&&Go.call(n)==Q}function Wu(n){return v(n)&&Zr(n.length)&&!!zn[Go.call(n)]}function Fu(n){return n===x}function Nu(n){var t=n?Vi(n):0;return Zr(t)?t?G.support.unindexedChars&&Uu(n)?n.split(""):ot(n):[]:Gu(n)}function $u(n){return bt(n,Mu(n))}function Lu(n,t,r){var e=$i(n);return r&&Gr(n,t,r)&&(t=null),t?Ni(e,t):e}function Pu(n){return Wt(n,Mu(n))}function Bu(n,t,r){var e=null==n?x:Ft(n,ae(t),t+"");return e===x?r:e}function zu(n,t){if(null==n)return!1;var r=Vo.call(n,t);return r||Jr(t)||(t=ae(t),n=1==t.length?n:Ft(n,Jt(t,0,-1)),t=xe(t),r=null!=n&&Vo.call(n,t)),r||G.support.nonEnumStrings&&Uu(n)&&Yr(t,n.length)}function Du(n,t,r){r&&Gr(n,t,r)&&(t=null);for(var e=-1,u=Ma(n),o=u.length,i={};++e<o;){var a=u[e],f=n[a];t?Vo.call(i,f)?i[f].push(a):i[f]=[a]:i[f]=a}return i}function Mu(n){if(null==n)return[];Eu(n)||(n=No(n));var t=n.length,r=G.support;t=t&&Zr(t)&&(Ca(n)||r.nonEnumStrings&&Uu(n)||r.nonEnumArgs&&mu(n))&&t||0;for(var e=n.constructor,u=-1,o=Ua(e)&&e.prototype||Do,i=o===n,a=So(t),f=t>0,c=r.enumErrorProps&&(n===zo||n instanceof To),l=r.enumPrototypes&&Ua(n);++u<t;)a[u]=u+"";for(var s in n)l&&"prototype"==s||c&&("message"==s||"name"==s)||f&&Yr(s,t)||"constructor"==s&&(i||!Vo.call(n,s))||a.push(s);if(r.nonEnumShadows&&n!==Do){var p=n===Mo?Q:n===zo?V:Go.call(n),h=Wi[p]||Wi[X];for(p==X&&(o=Do),t=Pn.length;t--;){s=Pn[t];var v=h[s];i&&v||(v?!Vo.call(n,s):n[s]===o[s])||a.push(s)}}return a}function qu(n){for(var t=-1,r=Ma(n),e=r.length,u=So(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u}function Ku(n,t,r){var e=null==n?x:ie(n)[t];return e===x&&(null==n||Jr(t,n)||(t=ae(t),n=1==t.length?n:Ft(n,Jt(t,0,-1)),e=null==n?x:ie(n)[xe(t)]),e=e===x?r:e),Ua(e)?e.call(n):e}function Vu(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||Jr(t,n)?[e]:ae(t);for(var u=-1,o=t.length,i=o-1,a=n;null!=a&&++u<o;){var f=t[u];Eu(a)&&(u==i?a[f]=r:null==a[f]&&(a[f]=Yr(t[u+1])?[]:{})),a=a[f]}return n}function Yu(n,t,r,e){var u=Ca(n)||Wu(n);if(t=Pr(t,e,4),null==r)if(u||Eu(n)){var o=n.constructor;r=u?Ca(n)?new o:[]:$i(Ua(o)&&o.prototype)}else r={};return(u?it:Tt)(n,function(n,e,u){return t(r,n,e,u)}),r}function Gu(n){return tr(n,Ma(n))}function Ju(n){return tr(n,Mu(n))}function Xu(n,t,r){return t=+t||0,"undefined"==typeof r?(r=t,t=0):r=+r||0,n>=mi(t,r)&&n<di(t,r)}function Zu(n,t,r){
r&&Gr(n,t,r)&&(t=r=null);var e=null==n,u=null==t;if(null==r&&(u&&"boolean"==typeof n?(r=n,n=1):"boolean"==typeof t&&(r=t,u=!0)),e&&u&&(t=1,u=!1),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1){var o=Ai();return mi(n+o*(t-n+parseFloat("1e-"+((o+"").length-1))),t)}return Yt(n,t)}function Hu(n){return n=u(n),n&&n.charAt(0).toUpperCase()+n.slice(1)}function Qu(n){return n=u(n),n&&n.replace(Un,l).replace(In,"")}function no(n,t,r){n=u(n),t+="";var e=n.length;return r=r===x?e:mi(0>r?0:+r||0,e),r-=t.length,r>=0&&n.indexOf(t,r)==r}function to(n){return n=u(n),n&&dn.test(n)?n.replace(gn,s):n}function ro(n){return n=u(n),n&&En.test(n)?n.replace(On,"\\$&"):n}function eo(n,t,r){n=u(n),t=+t;var e=n.length;if(e>=t||!gi(t))return n;var o=(t-e)/2,i=ti(o),a=Qo(o);return r=Cr("",a,r),r.slice(0,i)+n+r}function uo(n,t,r){return r&&Gr(n,t,r)&&(t=0),xi(n,t)}function oo(n,t){var r="";if(n=u(n),t=+t,1>t||!n||!gi(t))return r;do t%2&&(r+=n),t=ti(t/2),n+=n;while(t);return r}function io(n,t,r){return n=u(n),r=null==r?0:mi(0>r?0:+r||0,n.length),n.lastIndexOf(t,r)==r}function ao(n,t,r){var e=G.templateSettings;r&&Gr(n,t,r)&&(t=r=null),n=u(n),t=mt(Ni({},r||t),e,dt);var o,i,a=mt(Ni({},t.imports),e.imports,dt),f=Ma(a),c=tr(a,f),l=0,s=t.interpolate||Wn,h="__p += '",v=$o((t.escape||Wn).source+"|"+s.source+"|"+(s===bn?kn:Wn).source+"|"+(t.evaluate||Wn).source+"|$","g"),_="//# sourceURL="+("sourceURL"in t?t.sourceURL:"lodash.templateSources["+ ++Bn+"]")+"\n";n.replace(v,function(t,r,e,u,a,f){return e||(e=u),h+=n.slice(l,f).replace(Fn,p),r&&(o=!0,h+="' +\n__e("+r+") +\n'"),a&&(i=!0,h+="';\n"+a+";\n__p += '"),e&&(h+="' +\n((__t = ("+e+")) == null ? '' : __t) +\n'"),l=f+t.length,t}),h+="';\n";var g=t.variable;g||(h="with (obj) {\n"+h+"\n}\n"),h=(i?h.replace(pn,""):h).replace(hn,"$1").replace(vn,"$1;"),h="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(o?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+h+"return __p\n}";var y=tf(function(){return Uo(f,_+"return "+h).apply(x,c)});if(y.source=h,Ou(y))throw y;return y}function fo(n,t,r){var e=n;return(n=u(n))?(r?Gr(e,t,r):null==t)?n.slice(d(n),m(n)+1):(t+="",n.slice(i(n,t),a(n,t)+1)):n}function co(n,t,r){var e=n;return n=u(n),n?n.slice((r?Gr(e,t,r):null==t)?d(n):i(n,t+"")):n}function lo(n,t,r){var e=n;return n=u(n),n?(r?Gr(e,t,r):null==t)?n.slice(0,m(n)+1):n.slice(0,a(n,t+"")+1):n}function so(n,t,r){r&&Gr(n,t,r)&&(t=null);var e=U,o=W;if(null!=t)if(Eu(t)){var i="separator"in t?t.separator:i;e="length"in t?+t.length||0:e,o="omission"in t?u(t.omission):o}else e=+t||0;if(n=u(n),e>=n.length)return n;var a=e-o.length;if(1>a)return o;var f=n.slice(0,a);if(null==i)return f+o;if(Tu(i)){if(n.slice(a).search(i)){var c,l,s=n.slice(0,a);for(i.global||(i=$o(i.source,(Sn.exec(i)||"")+"g")),i.lastIndex=0;c=i.exec(s);)l=c.index;f=f.slice(0,null==l?a:l)}}else if(n.indexOf(i,a)!=a){var p=f.lastIndexOf(i);p>-1&&(f=f.slice(0,p))}return f+o}function po(n){return n=u(n),n&&yn.test(n)?n.replace(_n,w):n}function ho(n,t,r){return r&&Gr(n,t,r)&&(t=null),n=u(n),n.match(t||Nn)||[]}function vo(n,t,r){return r&&Gr(n,t,r)&&(t=null),v(n)?yo(n):xt(n,t)}function _o(n){return function(){return n}}function go(n){return n}function yo(n){return Bt(At(n,!0))}function mo(n,t){return zt(n,At(t,!0))}function wo(n,t,r){if(null==r){var e=Eu(t),u=e&&Ma(t),o=u&&u.length&&Wt(t,u);(o?o.length:e)||(o=!1,r=t,t=n,n=this)}o||(o=Wt(t,Ma(t)));var i=!0,a=-1,f=Ua(n),c=o.length;r===!1?i=!1:Eu(r)&&"chain"in r&&(i=r.chain);for(;++a<c;){var l=o[a],s=t[l];n[l]=s,f&&(n.prototype[l]=function(t){return function(){var r=this.__chain__;if(i||r){var e=n(this.__wrapped__),u=e.__actions__=ot(this.__actions__);return u.push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}var o=[this.value()];return ui.apply(o,arguments),t.apply(n,o)}}(s))}return n}function bo(){return _._=Jo,this}function xo(){}function Ao(n){return Jr(n)?qt(n):Kt(n)}function jo(n){return function(t){return Ft(n,ae(t),t+"")}}function Oo(n,t,r){r&&Gr(n,t,r)&&(t=r=null),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;for(var e=-1,u=di(Qo((t-n)/(r||1)),0),o=So(u);++e<u;)o[e]=n,n+=r;return o}function Eo(n,t,r){if(n=ti(n),1>n||!gi(n))return[];var e=-1,u=So(mi(n,Ei));for(t=ir(t,r,1);++e<n;)Ei>e?u[e]=t(e):t(e);return u}function Io(n){var t=++Yo;return u(n)+t}function Ro(n,t){return(+n||0)+(+t||0)}function ko(n,t,r){r&&Gr(n,t,r)&&(t=null);var e=Pr(),u=null==t;return e===xt&&u||(u=!1,t=e(t,r,3)),u?gt(Ca(n)?n:oe(n)):Qt(n,t)}_=_?et.defaults(tt.Object(),_,et.pick(tt,Ln)):tt;var So=_.Array,Co=_.Date,To=_.Error,Uo=_.Function,Wo=_.Math,Fo=_.Number,No=_.Object,$o=_.RegExp,Lo=_.String,Po=_.TypeError,Bo=So.prototype,zo=To.prototype,Do=No.prototype,Mo=Lo.prototype,qo=(qo=_.window)&&qo.document,Ko=Uo.prototype.toString,Vo=Do.hasOwnProperty,Yo=0,Go=Do.toString,Jo=_._,Xo=$o("^"+ro(Go).replace(/toString|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Zo=ku(Zo=_.ArrayBuffer)&&Zo,Ho=ku(Ho=Zo&&new Zo(0).slice)&&Ho,Qo=Wo.ceil,ni=_.clearTimeout,ti=Wo.floor,ri=ku(ri=No.getOwnPropertySymbols)&&ri,ei=ku(ei=No.getPrototypeOf)&&ei,ui=Bo.push,oi=ku(oi=No.preventExtensions)&&oi,ii=Do.propertyIsEnumerable,ai=ku(ai=_.Set)&&ai,fi=_.setTimeout,ci=Bo.splice,li=ku(li=_.Uint8Array)&&li,si=ku(si=_.WeakMap)&&si,pi=function(){try{var n=ku(n=_.Float64Array)&&n,t=new n(new Zo(10),0,1)&&n}catch(r){}return t}(),hi=function(){var n=oi&&ku(n=No.assign)&&n;try{if(n){var t=oi({1:0});t[0]=1}}catch(r){try{n(t,"xo")}catch(r){}return!t[1]&&n}return!1}(),vi=ku(vi=So.isArray)&&vi,_i=ku(_i=No.create)&&_i,gi=_.isFinite,yi=ku(yi=No.keys)&&yi,di=Wo.max,mi=Wo.min,wi=ku(wi=Co.now)&&wi,bi=ku(bi=Fo.isFinite)&&bi,xi=_.parseInt,Ai=Wo.random,ji=Fo.NEGATIVE_INFINITY,Oi=Fo.POSITIVE_INFINITY,Ei=Wo.pow(2,32)-1,Ii=Ei-1,Ri=Ei>>>1,ki=pi?pi.BYTES_PER_ELEMENT:0,Si=Wo.pow(2,53)-1,Ci=si&&new si,Ti={},Ui={};Ui[rn]=_.Float32Array,Ui[en]=_.Float64Array,Ui[un]=_.Int8Array,Ui[on]=_.Int16Array,Ui[an]=_.Int32Array,Ui[fn]=_.Uint8Array,Ui[cn]=_.Uint8ClampedArray,Ui[ln]=_.Uint16Array,Ui[sn]=_.Uint32Array;var Wi={};Wi[M]=Wi[K]=Wi[J]={constructor:!0,toLocaleString:!0,toString:!0,valueOf:!0},Wi[q]=Wi[Q]={constructor:!0,toString:!0,valueOf:!0},Wi[V]=Wi[Y]=Wi[Z]={constructor:!0,toString:!0},Wi[X]={constructor:!0},it(Pn,function(n){for(var t in Wi)if(Vo.call(Wi,t)){var r=Wi[t];r[n]=Vo.call(r,n)}});var Fi=G.support={};!function(n){var t=function(){this.x=n},r=arguments,e={0:n,length:n},u=[];t.prototype={valueOf:n,y:n};for(var o in new t)u.push(o);Fi.argsTag=Go.call(r)==D,Fi.enumErrorProps=ii.call(zo,"message")||ii.call(zo,"name"),Fi.enumPrototypes=ii.call(t,"prototype"),Fi.funcDecomp=/\bthis\b/.test(function(){return this}),Fi.funcNames="string"==typeof Uo.name,Fi.nodeTag=Go.call(qo)!=X,Fi.nonEnumStrings=!ii.call("x",0),Fi.nonEnumShadows=!/valueOf/.test(u),Fi.ownLast="x"!=u[0],Fi.spliceObjects=(ci.call(e,0,1),!e[0]),Fi.unindexedChars="x"[0]+No("x")[0]!="xx";try{Fi.dom=11===qo.createDocumentFragment().nodeType}catch(i){Fi.dom=!1}try{Fi.nonEnumArgs=!ii.call(r,1)}catch(i){Fi.nonEnumArgs=!0}}(1,0),G.templateSettings={escape:mn,evaluate:wn,interpolate:bn,variable:"",imports:{_:G}};var Ni=hi||function(n,t){return null==t?n:bt(t,Yi(t),bt(t,Ma(t),n))},$i=function(){function n(){}return function(t){if(Eu(t)){n.prototype=t;var r=new n;n.prototype=null}return r||_.Object()}}(),Li=pr(Tt),Pi=pr(Ut,!0),Bi=hr(),zi=hr(!0),Di=Ci?function(n,t){return Ci.set(n,t),n}:go;Ho||(ar=Zo&&li?function(n){var t=n.byteLength,r=pi?ti(t/ki):0,e=r*ki,u=new Zo(t);if(r){var o=new pi(u,0,r);o.set(new pi(n,0,r))}return t!=e&&(o=new li(u,e),o.set(new li(n,e))),u}:_o(null));var Mi=_i&&ai?function(n){return new Qn(n)}:_o(null),qi=Ci?function(n){return Ci.get(n)}:xo,Ki=function(){return Fi.funcNames?"constant"==_o.name?qt("name"):function(n){for(var t=n.name,r=Ti[t],e=r?r.length:0;e--;){var u=r[e],o=u.func;if(null==o||o==n)return u.name}return t}:_o("")}(),Vi=qt("length"),Yi=ri?function(n){return ri(ie(n))}:_o([]),Gi=function(){var n=0,t=0;return function(r,e){var u=da(),o=N-(u-t);if(t=u,o>0){if(++n>=F)return r}else n=0;return Di(r,e)}}(),Ji=hu(function(n,t){return Vr(n)?Ot(n,St(t,!1,!0)):[]}),Xi=wr(),Zi=wr(!0),Hi=hu(function(t,r){r=St(r);var e=wt(t,r);return Vt(t,r.sort(n)),e}),Qi=Ur(),na=Ur(!0),ta=hu(function(n){return nr(St(n,!1,!0))}),ra=hu(function(n,t){return Vr(n)?Ot(n,t):[]}),ea=hu(Ue),ua=hu(function(n){var t=n.length,r=n[t-2],e=n[t-1];return t>2&&"function"==typeof r?t-=2:(r=t>1&&"function"==typeof e?(--t,e):x,e=x),n.length=t,We(n,r,e)}),oa=hu(function(n,t){return Vr(n)&&(n=oe(n)),wt(n,St(t))}),ia=lr(function(n,t,r){Vo.call(n,r)?++n[r]:n[r]=1}),aa=mr(Li),fa=mr(Pi,!0),ca=Ar(it,Li),la=Ar(at,Pi),sa=lr(function(n,t,r){Vo.call(n,r)?n[r].push(t):n[r]=[t]}),pa=lr(function(n,t,r){n[r]=t}),ha=hu(function(n,t,r){var e=-1,u="function"==typeof t,o=Jr(t),i=Vr(n)?So(n.length):[];return Li(n,function(n){var a=u?t:o&&null!=n&&n[t];i[++e]=a?a.apply(n,r):Kr(n,t,r)}),i}),va=lr(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),_a=kr(ht,Li),ga=kr(vt,Pi),ya=hu(function(n,t){if(null==n)return[];var r=t[2];return r&&Gr(t[0],t[1],r)&&(t.length=1),Ht(n,St(t),[])}),da=wi||function(){return(new Co).getTime()},ma=hu(function(n,t,r){var e=j;if(r.length){var u=g(r,ma.placeholder);e|=k}return Wr(n,e,t,r,u)}),wa=hu(function(n,t){t=t.length?St(t):Pu(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=Wr(n[u],j,n)}return n}),ba=hu(function(n,t,r){var e=j|O;if(r.length){var u=g(r,ba.placeholder);e|=k}return Wr(t,e,n,r,u)}),xa=yr(I),Aa=yr(R),ja=hu(function(n,t){return jt(n,1,t)}),Oa=hu(function(n,t,r){return jt(n,t,r)}),Ea=xr(),Ia=xr(!0),Ra=Rr(k),ka=Rr(S),Sa=hu(function(n,t){return Wr(n,T,null,null,null,St(t))});Fi.argsTag||(mu=function(n){return v(n)&&Vr(n)&&Vo.call(n,"callee")&&!ii.call(n,"callee")});var Ca=vi||function(n){return v(n)&&Zr(n.length)&&Go.call(n)==M};Fi.dom||(xu=function(n){return!!n&&1===n.nodeType&&v(n)&&!Wa(n)});var Ta=bi||function(n){return"number"==typeof n&&gi(n)},Ua=e(/x/)||li&&!e(li)?function(n){return Go.call(n)==Y}:e,Wa=ei?function(n){if(!n||Go.call(n)!=X||!G.support.argsTag&&mu(n))return!1;var t=n.valueOf,r=ku(t)&&(r=ei(t))&&ei(r);return r?n==r||ei(n)==r:ee(n)}:ee,Fa=sr(function(n,t,r){return r?mt(n,t,r):Ni(n,t)}),Na=hu(function(n){var t=n[0];return null==t?t:(n.push(yt),Fa.apply(x,n))}),$a=br(Tt),La=br(Ut),Pa=jr(Bi),Ba=jr(zi),za=Or(Tt),Da=Or(Ut),Ma=yi?function(n){var t=null!=n&&n.constructor;return"function"==typeof t&&t.prototype===n||("function"==typeof n?G.support.enumPrototypes:Vr(n))?ue(n):Eu(n)?yi(n):[]}:ue,qa=Er(!0),Ka=Er(),Va=sr(Dt),Ya=hu(function(n,t){if(null==n)return{};if("function"!=typeof t[0]){var t=lt(St(t),Lo);return ne(n,Ot(Mu(n),t))}var r=ir(t[0],t[1],3);return te(n,function(n,t,e){return!r(n,t,e)})}),Ga=hu(function(n,t){return null==n?{}:"function"==typeof t[0]?te(n,ir(t[0],t[1],3)):ne(n,St(t))}),Ja=_r(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t)}),Xa=_r(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Za=Ir(),Ha=Ir(!0);8!=xi($n+"08")&&(uo=function(n,t,r){return(r?Gr(n,t,r):null==t)?t=0:t&&(t=+t),n=fo(n),xi(n,t||(Cn.test(n)?16:10))});var Qa=_r(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),nf=_r(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),tf=hu(function(n,t){try{return n.apply(x,t)}catch(r){return Ou(r)?r:new To(r)}}),rf=hu(function(n,t){return function(r){return Kr(r,n,t)}}),ef=hu(function(n,t){return function(r){return Kr(n,r,t)}}),uf=dr(st),of=dr(pt,!0);return G.prototype=H.prototype,nn.prototype=$i(H.prototype),nn.prototype.constructor=nn,qn.prototype=$i(H.prototype),qn.prototype.constructor=qn,Gn.prototype["delete"]=Jn,Gn.prototype.get=Xn,Gn.prototype.has=Zn,Gn.prototype.set=Hn,Qn.prototype.push=ut,lu.Cache=Gn,G.after=iu,G.ary=au,G.assign=Fa,G.at=oa,G.before=fu,G.bind=ma,G.bindAll=wa,G.bindKey=ba,G.callback=vo,G.chain=$e,G.chunk=ce,G.compact=le,G.constant=_o,G.countBy=ia,G.create=Lu,G.curry=xa,G.curryRight=Aa,G.debounce=cu,G.defaults=Na,G.defer=ja,G.delay=Oa,G.difference=Ji,G.drop=se,G.dropRight=pe,G.dropRightWhile=he,G.dropWhile=ve,G.fill=_e,G.filter=Ye,G.flatten=ye,G.flattenDeep=de,G.flow=Ea,G.flowRight=Ia,G.forEach=ca,G.forEachRight=la,G.forIn=Pa,G.forInRight=Ba,G.forOwn=za,G.forOwnRight=Da,G.functions=Pu,G.groupBy=sa,G.indexBy=pa,G.initial=we,G.intersection=be,G.invert=Du,G.invoke=ha,G.keys=Ma,G.keysIn=Mu,G.map=Xe,G.mapKeys=qa,G.mapValues=Ka,G.matches=yo,G.matchesProperty=mo,G.memoize=lu,G.merge=Va,G.method=rf,G.methodOf=ef,G.mixin=wo,G.negate=su,G.omit=Ya,G.once=pu,G.pairs=qu,G.partial=Ra,G.partialRight=ka,G.partition=va,G.pick=Ga,G.pluck=Ze,G.property=Ao,G.propertyOf=jo,G.pull=je,G.pullAt=Hi,G.range=Oo,G.rearg=Sa,G.reject=He,G.remove=Oe,G.rest=Ee,G.restParam=hu,G.set=Vu,G.shuffle=nu,G.slice=Ie,G.sortBy=eu,G.sortByAll=ya,G.sortByOrder=uu,G.spread=vu,G.take=Re,G.takeRight=ke,G.takeRightWhile=Se,G.takeWhile=Ce,G.tap=Le,G.throttle=_u,G.thru=Pe,G.times=Eo,G.toArray=Nu,G.toPlainObject=$u,G.transform=Yu,G.union=ta,G.uniq=Te,G.unzip=Ue,G.unzipWith=We,G.values=Gu,G.valuesIn=Ju,G.where=ou,G.without=ra,G.wrap=gu,G.xor=Fe,G.zip=ea,G.zipObject=Ne,G.zipWith=ua,G.backflow=Ia,G.collect=Xe,G.compose=Ia,G.each=ca,G.eachRight=la,G.extend=Fa,G.iteratee=vo,G.methods=Pu,G.object=Ne,G.select=Ye,G.tail=Ee,G.unique=Te,wo(G,G),G.add=Ro,G.attempt=tf,G.camelCase=Ja,G.capitalize=Hu,G.clone=yu,G.cloneDeep=du,G.deburr=Qu,G.endsWith=no,G.escape=to,G.escapeRegExp=ro,G.every=Ve,G.find=aa,G.findIndex=Xi,G.findKey=$a,G.findLast=fa,G.findLastIndex=Zi,G.findLastKey=La,G.findWhere=Ge,G.first=ge,G.get=Bu,G.has=zu,G.identity=go,G.includes=Je,G.indexOf=me,G.inRange=Xu,G.isArguments=mu,G.isArray=Ca,G.isBoolean=wu,G.isDate=bu,G.isElement=xu,G.isEmpty=Au,G.isEqual=ju,G.isError=Ou,G.isFinite=Ta,G.isFunction=Ua,G.isMatch=Iu,G.isNaN=Ru,G.isNative=ku,G.isNull=Su,G.isNumber=Cu,G.isObject=Eu,G.isPlainObject=Wa,G.isRegExp=Tu,G.isString=Uu,G.isTypedArray=Wu,G.isUndefined=Fu,G.kebabCase=Xa,G.last=xe,G.lastIndexOf=Ae,G.max=uf,G.min=of,G.noConflict=bo,G.noop=xo,G.now=da,G.pad=eo,G.padLeft=Za,G.padRight=Ha,G.parseInt=uo,G.random=Zu,G.reduce=_a,G.reduceRight=ga,G.repeat=oo,G.result=Ku,G.runInContext=b,G.size=tu,G.snakeCase=Qa,G.some=ru,G.sortedIndex=Qi,G.sortedLastIndex=na,G.startCase=nf,G.startsWith=io,G.sum=ko,G.template=ao,G.trim=fo,G.trimLeft=co,G.trimRight=lo,G.trunc=so,G.unescape=po,G.uniqueId=Io,G.words=ho,G.all=Ve,G.any=ru,G.contains=Je,G.detect=aa,G.foldl=_a,G.foldr=ga,G.head=ge,G.include=Je,G.inject=_a,wo(G,function(){var n={};return Tt(G,function(t,r){G.prototype[r]||(n[r]=t)}),n}(),!1),G.sample=Qe,G.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return Qe(t,n)}):Qe(this.value())},G.VERSION=A,it(["bind","bindKey","curry","curryRight","partial","partialRight"],function(n){G[n].placeholder=G}),it(["dropWhile","filter","map","takeWhile"],function(n,t){var r=t!=P,e=t==$;qn.prototype[n]=function(n,u){var o=this.__filtered__,i=o&&e?new qn(this):this.clone(),a=i.__iteratees__||(i.__iteratees__=[]);return a.push({done:!1,count:0,index:0,iteratee:Pr(n,u,1),limit:-1,type:t}),i.__filtered__=o||r,i}}),it(["drop","take"],function(n,t){var r=n+"While";qn.prototype[n]=function(r){var e=this.__filtered__,u=e&&!t?this.dropWhile():this.clone();if(r=null==r?1:di(ti(r)||0,0),e)t?u.__takeCount__=mi(u.__takeCount__,r):xe(u.__iteratees__).limit=r;else{var o=u.__views__||(u.__views__=[]);o.push({size:r,type:n+(u.__dir__<0?"Right":"")})}return u},qn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()},qn.prototype[n+"RightWhile"]=function(n,t){return this.reverse()[r](n,t).reverse()}}),it(["first","last"],function(n,t){var r="take"+(t?"Right":"");qn.prototype[n]=function(){return this[r](1).value()[0]}}),it(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");qn.prototype[n]=function(){return this[r](1)}}),it(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?Bt:Ao;qn.prototype[n]=function(n){return this[r](e(n))}}),qn.prototype.compact=function(){return this.filter(go)},qn.prototype.reject=function(n,t){return n=Pr(n,t,1),this.filter(function(t){return!n(t)})},qn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=this;return 0>n?r=this.takeRight(-n):n&&(r=this.drop(n)),t!==x&&(t=+t||0,r=0>t?r.dropRight(-t):r.take(t-n)),r},qn.prototype.toArray=function(){return this.drop(0)},Tt(qn.prototype,function(n,t){var r=G[t];if(r){var e=/^(?:filter|map|reject)|While$/.test(t),u=/^(?:first|last)$/.test(t);G.prototype[t]=function(){var t=arguments,o=this.__chain__,i=this.__wrapped__,a=!!this.__actions__.length,f=i instanceof qn,c=t[0],l=f||Ca(i);l&&e&&"function"==typeof c&&1!=c.length&&(f=l=!1);var s=f&&!a;if(u&&!o)return s?n.call(i):r.call(G,this.value());var p=function(n){var e=[n];return ui.apply(e,t),r.apply(G,e)};if(l){var h=s?i:new qn(this),v=n.apply(h,t);if(!u&&(a||v.__actions__)){var _=v.__actions__||(v.__actions__=[]);_.push({func:Pe,args:[p],thisArg:G})}return new nn(v,o)}return this.thru(p)}}}),it(["concat","join","pop","push","replace","shift","sort","splice","split","unshift"],function(n){var t=(/^(?:replace|split)$/.test(n)?Mo:Bo)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=!Fi.spliceObjects&&/^(?:pop|shift|splice)$/.test(n),u=/^(?:join|pop|replace|shift)$/.test(n),o=e?function(){var n=t.apply(this,arguments);return 0===this.length&&delete this[0],n}:t;G.prototype[n]=function(){var n=arguments;return u&&!this.__chain__?o.apply(this.value(),n):this[r](function(t){return o.apply(t,n)})}}),Tt(qn.prototype,function(n,t){var r=G[t];if(r){var e=r.name,u=Ti[e]||(Ti[e]=[]);u.push({name:t,func:r})}}),Ti[Sr(null,O).name]=[{name:"wrapper",func:null}],qn.prototype.clone=Kn,qn.prototype.reverse=Vn,qn.prototype.value=Yn,G.prototype.chain=Be,G.prototype.commit=ze,G.prototype.plant=De,G.prototype.reverse=Me,G.prototype.toString=qe,G.prototype.run=G.prototype.toJSON=G.prototype.valueOf=G.prototype.value=Ke,G.prototype.collect=G.prototype.map,G.prototype.head=G.prototype.first,G.prototype.select=G.prototype.filter,G.prototype.tail=G.prototype.rest,G}var x,A="3.8.0",j=1,O=2,E=4,I=8,R=16,k=32,S=64,C=128,T=256,U=30,W="...",F=150,N=16,$=0,L=1,P=2,B="Expected a function",z="__lodash_placeholder__",D="[object Arguments]",M="[object Array]",q="[object Boolean]",K="[object Date]",V="[object Error]",Y="[object Function]",G="[object Map]",J="[object Number]",X="[object Object]",Z="[object RegExp]",H="[object Set]",Q="[object String]",nn="[object WeakMap]",tn="[object ArrayBuffer]",rn="[object Float32Array]",en="[object Float64Array]",un="[object Int8Array]",on="[object Int16Array]",an="[object Int32Array]",fn="[object Uint8Array]",cn="[object Uint8ClampedArray]",ln="[object Uint16Array]",sn="[object Uint32Array]",pn=/\b__p \+= '';/g,hn=/\b(__p \+=) '' \+/g,vn=/(__e\(.*?\)|\b__t\)) \+\n'';/g,_n=/&(?:amp|lt|gt|quot|#39|#96);/g,gn=/[&<>"'`]/g,yn=RegExp(_n.source),dn=RegExp(gn.source),mn=/<%-([\s\S]+?)%>/g,wn=/<%([\s\S]+?)%>/g,bn=/<%=([\s\S]+?)%>/g,xn=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,An=/^\w*$/,jn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,On=/[.*+?^${}()|[\]\/\\]/g,En=RegExp(On.source),In=/[\u0300-\u036f\ufe20-\ufe23]/g,Rn=/\\(\\)?/g,kn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Sn=/\w*$/,Cn=/^0[xX]/,Tn=/^\[object .+?Constructor\]$/,Un=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,Wn=/($^)/,Fn=/['\n\r\u2028\u2029\\]/g,Nn=function(){var n="[A-Z\\xc0-\\xd6\\xd8-\\xde]",t="[a-z\\xdf-\\xf6\\xf8-\\xff]+";return RegExp(n+"+(?="+n+t+")|"+n+"?"+t+"|"+n+"+|[0-9]+","g")}(),$n=" 	\f \ufeff\n\r\u2028\u2029 ᠎             　",Ln=["Array","ArrayBuffer","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Math","Number","Object","RegExp","Set","String","_","clearTimeout","document","isFinite","parseInt","setTimeout","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","window"],Pn=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Bn=-1,zn={};zn[rn]=zn[en]=zn[un]=zn[on]=zn[an]=zn[fn]=zn[cn]=zn[ln]=zn[sn]=!0,zn[D]=zn[M]=zn[tn]=zn[q]=zn[K]=zn[V]=zn[Y]=zn[G]=zn[J]=zn[X]=zn[Z]=zn[H]=zn[Q]=zn[nn]=!1;var Dn={};Dn[D]=Dn[M]=Dn[tn]=Dn[q]=Dn[K]=Dn[rn]=Dn[en]=Dn[un]=Dn[on]=Dn[an]=Dn[J]=Dn[X]=Dn[Z]=Dn[Q]=Dn[fn]=Dn[cn]=Dn[ln]=Dn[sn]=!0,Dn[V]=Dn[Y]=Dn[G]=Dn[H]=Dn[nn]=!1;var Mn={leading:!1,maxWait:0,trailing:!1},qn={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss"},Kn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Vn={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},Yn={"function":!0,object:!0},Gn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Jn=Yn[typeof exports]&&exports&&!exports.nodeType&&exports,Xn=Yn[typeof module]&&module&&!module.nodeType&&module,Zn=Jn&&Xn&&"object"==typeof global&&global&&global.Object&&global,Hn=Yn[typeof self]&&self&&self.Object&&self,Qn=Yn[typeof window]&&window&&window.Object&&window,nt=Xn&&Xn.exports===Jn&&Jn,tt=Zn||Qn!==(this&&this.window)&&Qn||Hn||this,rt=function(){try{Object({toString:0}+"")}catch(n){return function(){return!1}}return function(n){return"function"!=typeof n.toString&&"string"==typeof(n+"")}}(),et=b();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(tt._=et,define(function(){return et})):Jn&&Xn?nt?(Xn.exports=et)._=et:Jn._=et:tt._=et}).call(this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],139:[function(require,module,exports){
function arrayCopy(r,a){var o=-1,y=r.length;for(a||(a=Array(y));++o<y;)a[o]=r[o];return a}module.exports=arrayCopy;

},{}],140:[function(require,module,exports){
function arrayEach(r,a){for(var e=-1,n=r.length;++e<n&&a(r[e],e,r)!==!1;);return r}module.exports=arrayEach;

},{}],141:[function(require,module,exports){
function arrayMap(r,a){for(var e=-1,n=r.length,o=Array(n);++e<n;)o[e]=a(r[e],e,r);return o}module.exports=arrayMap;

},{}],142:[function(require,module,exports){
var baseCopy=require("./baseCopy"),getSymbols=require("./getSymbols"),isNative=require("../lang/isNative"),keys=require("../object/keys"),preventExtensions=isNative(preventExtensions=Object.preventExtensions)&&preventExtensions,nativeAssign=function(){var e=preventExtensions&&isNative(e=Object.assign)&&e;try{if(e){var s=preventExtensions({1:0});s[0]=1}}catch(n){try{e(s,"xo")}catch(n){}return!s[1]&&e}return!1}(),baseAssign=nativeAssign||function(e,s){return null==s?e:baseCopy(s,getSymbols(s),baseCopy(s,keys(s),e))};module.exports=baseAssign;

},{"../lang/isNative":194,"../object/keys":200,"./baseCopy":145,"./getSymbols":174}],143:[function(require,module,exports){
function baseCallback(e,t,r){var a=typeof e;return"function"==a?void 0===t?e:bindCallback(e,t,r):null==e?identity:"object"==a?baseMatches(e):void 0===t?property(e):baseMatchesProperty(e,t)}var baseMatches=require("./baseMatches"),baseMatchesProperty=require("./baseMatchesProperty"),bindCallback=require("./bindCallback"),identity=require("../utility/identity"),property=require("../utility/property");module.exports=baseCallback;

},{"../utility/identity":205,"../utility/property":206,"./baseMatches":157,"./baseMatchesProperty":158,"./bindCallback":165}],144:[function(require,module,exports){
function baseClone(a,e,r,t,o,n,g){var l;if(r&&(l=o?r(a,t,o):r(a)),void 0!==l)return l;if(!isObject(a))return a;var b=isArray(a);if(b){if(l=initCloneArray(a),!e)return arrayCopy(a,l)}else{var T=objToString.call(a),i=T==funcTag;if(T!=objectTag&&T!=argsTag&&(!i||o))return cloneableTags[T]?initCloneByTag(a,T,e):o?a:{};if(isHostObject(a))return o?a:{};if(l=initCloneObject(i?{}:a),!e)return baseAssign(l,a)}n||(n=[]),g||(g=[]);for(var c=n.length;c--;)if(n[c]==a)return g[c];return n.push(a),g.push(l),(b?arrayEach:baseForOwn)(a,function(t,o){l[o]=baseClone(t,e,r,o,a,n,g)}),l}var arrayCopy=require("./arrayCopy"),arrayEach=require("./arrayEach"),baseAssign=require("./baseAssign"),baseForOwn=require("./baseForOwn"),initCloneArray=require("./initCloneArray"),initCloneByTag=require("./initCloneByTag"),initCloneObject=require("./initCloneObject"),isArray=require("../lang/isArray"),isHostObject=require("./isHostObject"),isObject=require("../lang/isObject"),argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[stringTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=!0,cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[mapTag]=cloneableTags[setTag]=cloneableTags[weakMapTag]=!1;var objectProto=Object.prototype,objToString=objectProto.toString;module.exports=baseClone;

},{"../lang/isArray":192,"../lang/isObject":195,"./arrayCopy":139,"./arrayEach":140,"./baseAssign":142,"./baseForOwn":149,"./initCloneArray":176,"./initCloneByTag":177,"./initCloneObject":178,"./isHostObject":180}],145:[function(require,module,exports){
function baseCopy(e,o,r){r||(r={});for(var a=-1,n=o.length;++a<n;){var t=o[a];r[t]=e[t]}return r}module.exports=baseCopy;

},{}],146:[function(require,module,exports){
var baseForOwn=require("./baseForOwn"),createBaseEach=require("./createBaseEach"),baseEach=createBaseEach(baseForOwn);module.exports=baseEach;

},{"./baseForOwn":149,"./createBaseEach":167}],147:[function(require,module,exports){
var createBaseFor=require("./createBaseFor"),baseFor=createBaseFor();module.exports=baseFor;

},{"./createBaseFor":168}],148:[function(require,module,exports){
function baseForIn(e,r){return baseFor(e,r,keysIn)}var baseFor=require("./baseFor"),keysIn=require("../object/keysIn");module.exports=baseForIn;

},{"../object/keysIn":201,"./baseFor":147}],149:[function(require,module,exports){
function baseForOwn(e,r){return baseFor(e,r,keys)}var baseFor=require("./baseFor"),keys=require("../object/keys");module.exports=baseForOwn;

},{"../object/keys":200,"./baseFor":147}],150:[function(require,module,exports){
function baseGet(e,t,o){if(null!=e){e=toObject(e),void 0!==o&&o in e&&(t=[o]);for(var r=-1,n=t.length;null!=e&&++r<n;)e=toObject(e)[t[r]];return r&&r==n?e:void 0}}var toObject=require("./toObject");module.exports=baseGet;

},{"./toObject":188}],151:[function(require,module,exports){
function baseIndexOf(e,r,n){if(r!==r)return indexOfNaN(e,n);for(var f=n-1,a=e.length;++f<a;)if(e[f]===r)return f;return-1}var indexOfNaN=require("./indexOfNaN");module.exports=baseIndexOf;

},{"./indexOfNaN":175}],152:[function(require,module,exports){
function baseIsEqual(e,u,a,s,l,n){if(e===u)return!0;var t=typeof e,o=typeof u;return"function"!=t&&"object"!=t&&"function"!=o&&"object"!=o||null==e||null==u?e!==e&&u!==u:baseIsEqualDeep(e,u,baseIsEqual,a,s,l,n)}var baseIsEqualDeep=require("./baseIsEqualDeep");module.exports=baseIsEqual;

},{"./baseIsEqualDeep":153}],153:[function(require,module,exports){
function baseIsEqualDeep(r,e,a,t,o,s,u){var i=isArray(r),b=isArray(e),c=arrayTag,g=arrayTag;i||(c=objToString.call(r),c==argsTag?c=objectTag:c!=objectTag&&(i=isTypedArray(r))),b||(g=objToString.call(e),g==argsTag?g=objectTag:g!=objectTag&&(b=isTypedArray(e)));var y=c==objectTag&&!isHostObject(r),j=g==objectTag&&!isHostObject(e),l=c==g;if(l&&!i&&!y)return equalByTag(r,e,c);if(!o){var p=y&&hasOwnProperty.call(r,"__wrapped__"),T=j&&hasOwnProperty.call(e,"__wrapped__");if(p||T)return a(p?r.value():r,T?e.value():e,t,o,s,u)}if(!l)return!1;s||(s=[]),u||(u=[]);for(var n=s.length;n--;)if(s[n]==r)return u[n]==e;s.push(r),u.push(e);var q=(i?equalArrays:equalObjects)(r,e,a,t,o,s,u);return s.pop(),u.pop(),q}var equalArrays=require("./equalArrays"),equalByTag=require("./equalByTag"),equalObjects=require("./equalObjects"),isArray=require("../lang/isArray"),isHostObject=require("./isHostObject"),isTypedArray=require("../lang/isTypedArray"),argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,objToString=objectProto.toString;module.exports=baseIsEqualDeep;

},{"../lang/isArray":192,"../lang/isTypedArray":198,"./equalArrays":170,"./equalByTag":171,"./equalObjects":172,"./isHostObject":180}],154:[function(require,module,exports){
function baseIsFunction(n){return"function"==typeof n||!1}module.exports=baseIsFunction;

},{}],155:[function(require,module,exports){
function baseIsMatch(e,r,a,s,i){for(var u=-1,n=r.length,o=!i;++u<n;)if(o&&s[u]?a[u]!==e[r[u]]:!(r[u]in e))return!1;for(u=-1;++u<n;){var t=r[u],v=e[t],f=a[u];if(o&&s[u])var l=void 0!==v||t in e;else l=i?i(v,f,t):void 0,void 0===l&&(l=baseIsEqual(f,v,i,!0));if(!l)return!1}return!0}var baseIsEqual=require("./baseIsEqual");module.exports=baseIsMatch;

},{"./baseIsEqual":152}],156:[function(require,module,exports){
function baseMap(r,a){var e=-1,i=isArrayLike(r)?Array(r.length):[];return baseEach(r,function(r,s,n){i[++e]=a(r,s,n)}),i}var baseEach=require("./baseEach"),isArrayLike=require("./isArrayLike");module.exports=baseMap;

},{"./baseEach":146,"./isArrayLike":179}],157:[function(require,module,exports){
function baseMatches(t){var r=keys(t),e=r.length;if(!e)return constant(!0);if(1==e){var a=r[0],i=t[a];if(isStrictComparable(i))return function(t){return null==t?!1:(t=toObject(t),t[a]===i&&(void 0!==i||a in t))}}for(var n=Array(e),s=Array(e);e--;)i=t[r[e]],n[e]=i,s[e]=isStrictComparable(i);return function(t){return null!=t&&baseIsMatch(toObject(t),r,n,s)}}var baseIsMatch=require("./baseIsMatch"),constant=require("../utility/constant"),isStrictComparable=require("./isStrictComparable"),keys=require("../object/keys"),toObject=require("./toObject");module.exports=baseMatches;

},{"../object/keys":200,"../utility/constant":204,"./baseIsMatch":155,"./isStrictComparable":185,"./toObject":188}],158:[function(require,module,exports){
function baseMatchesProperty(e,r){var t=isArray(e),a=isKey(e)&&isStrictComparable(r),i=e+"";return e=toPath(e),function(s){if(null==s)return!1;var u=i;if(s=toObject(s),!(!t&&a||u in s)){if(s=1==e.length?s:baseGet(s,baseSlice(e,0,-1)),null==s)return!1;u=last(e),s=toObject(s)}return s[u]===r?void 0!==r||u in s:baseIsEqual(r,s[u],null,!0)}}var baseGet=require("./baseGet"),baseIsEqual=require("./baseIsEqual"),baseSlice=require("./baseSlice"),isArray=require("../lang/isArray"),isKey=require("./isKey"),isStrictComparable=require("./isStrictComparable"),last=require("../array/last"),toObject=require("./toObject"),toPath=require("./toPath");module.exports=baseMatchesProperty;

},{"../array/last":134,"../lang/isArray":192,"./baseGet":150,"./baseIsEqual":152,"./baseSlice":161,"./isKey":182,"./isStrictComparable":185,"./toObject":188,"./toPath":189}],159:[function(require,module,exports){
function baseProperty(e){return function(t){return null==t?void 0:toObject(t)[e]}}var toObject=require("./toObject");module.exports=baseProperty;

},{"./toObject":188}],160:[function(require,module,exports){
function basePropertyDeep(e){var t=e+"";return e=toPath(e),function(r){return baseGet(r,e,t)}}var baseGet=require("./baseGet"),toPath=require("./toPath");module.exports=basePropertyDeep;

},{"./baseGet":150,"./toPath":189}],161:[function(require,module,exports){
function baseSlice(e,r,l){var a=-1,n=e.length;r=null==r?0:+r||0,0>r&&(r=-r>n?0:n+r),l=void 0===l||l>n?n:+l||0,0>l&&(l+=n),n=r>l?0:l-r>>>0,r>>>=0;for(var o=Array(n);++a<n;)o[a]=e[a+r];return o}module.exports=baseSlice;

},{}],162:[function(require,module,exports){
function baseToString(n){return"string"==typeof n?n:null==n?"":n+""}module.exports=baseToString;

},{}],163:[function(require,module,exports){
function binaryIndex(e,n,r){var i=0,t=e?e.length:i;if("number"==typeof n&&n===n&&HALF_MAX_ARRAY_LENGTH>=t){for(;t>i;){var A=i+t>>>1,y=e[A];(r?n>=y:n>y)?i=A+1:t=A}return t}return binaryIndexBy(e,n,identity,r)}var binaryIndexBy=require("./binaryIndexBy"),identity=require("../utility/identity"),MAX_ARRAY_LENGTH=Math.pow(2,32)-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;module.exports=binaryIndex;

},{"../utility/identity":205,"./binaryIndexBy":164}],164:[function(require,module,exports){
function binaryIndexBy(n,o,r,A){o=r(o);for(var a=0,i=n?n.length:0,e=o!==o,t=void 0===o;i>a;){var M=floor((a+i)/2),v=r(n[M]),R=v===v;if(e)var _=R||A;else _=t?R&&(A||void 0!==v):A?o>=v:o>v;_?a=M+1:i=M}return nativeMin(i,MAX_ARRAY_INDEX)}var floor=Math.floor,nativeMin=Math.min,MAX_ARRAY_LENGTH=Math.pow(2,32)-1,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1;module.exports=binaryIndexBy;

},{}],165:[function(require,module,exports){
function bindCallback(n,t,r){if("function"!=typeof n)return identity;if(void 0===t)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)};case 5:return function(r,e,u,i,c){return n.call(t,r,e,u,i,c)}}return function(){return n.apply(t,arguments)}}var identity=require("../utility/identity");module.exports=bindCallback;

},{"../utility/identity":205}],166:[function(require,module,exports){
(function (global){
function bufferClone(r){return bufferSlice.call(r,0)}var constant=require("../utility/constant"),isNative=require("../lang/isNative"),ArrayBuffer=isNative(ArrayBuffer=global.ArrayBuffer)&&ArrayBuffer,bufferSlice=isNative(bufferSlice=ArrayBuffer&&new ArrayBuffer(0).slice)&&bufferSlice,floor=Math.floor,Uint8Array=isNative(Uint8Array=global.Uint8Array)&&Uint8Array,Float64Array=function(){try{var r=isNative(r=global.Float64Array)&&r,e=new r(new ArrayBuffer(10),0,1)&&r}catch(a){}return e}(),FLOAT64_BYTES_PER_ELEMENT=Float64Array?Float64Array.BYTES_PER_ELEMENT:0;bufferSlice||(bufferClone=ArrayBuffer&&Uint8Array?function(r){var e=r.byteLength,a=Float64Array?floor(e/FLOAT64_BYTES_PER_ELEMENT):0,t=a*FLOAT64_BYTES_PER_ELEMENT,f=new ArrayBuffer(e);if(a){var n=new Float64Array(f,0,a);n.set(new Float64Array(r,0,a))}return e!=t&&(n=new Uint8Array(f,t),n.set(new Uint8Array(r,t))),f}:constant(null)),module.exports=bufferClone;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../lang/isNative":194,"../utility/constant":204}],167:[function(require,module,exports){
function createBaseEach(e,t){return function(r,n){var a=r?getLength(r):0;if(!isLength(a))return e(r,n);for(var c=t?a:-1,g=toObject(r);(t?c--:++c<a)&&n(g[c],c,g)!==!1;);return r}}var getLength=require("./getLength"),isLength=require("./isLength"),toObject=require("./toObject");module.exports=createBaseEach;

},{"./getLength":173,"./isLength":183,"./toObject":188}],168:[function(require,module,exports){
function createBaseFor(e){return function(r,t,o){for(var a=toObject(r),c=o(r),n=c.length,u=e?n:-1;e?u--:++u<n;){var b=c[u];if(t(a[b],b,a)===!1)break}return r}}var toObject=require("./toObject");module.exports=createBaseFor;

},{"./toObject":188}],169:[function(require,module,exports){
function createForEach(r,a){return function(e,i,n){return"function"==typeof i&&void 0===n&&isArray(e)?r(e,i):a(e,bindCallback(i,n,3))}}var bindCallback=require("./bindCallback"),isArray=require("../lang/isArray");module.exports=createForEach;

},{"../lang/isArray":192,"./bindCallback":165}],170:[function(require,module,exports){
function equalArrays(r,e,a,o,f,i,l){var n=-1,t=r.length,u=e.length,v=!0;if(t!=u&&!(f&&u>t))return!1;for(;v&&++n<t;){var s=r[n],d=e[n];if(v=void 0,o&&(v=f?o(d,s,n):o(s,d,n)),void 0===v)if(f)for(var g=u;g--&&(d=e[g],!(v=s&&s===d||a(s,d,o,f,i,l))););else v=s&&s===d||a(s,d,o,f,i,l)}return!!v}module.exports=equalArrays;

},{}],171:[function(require,module,exports){
function equalByTag(e,a,r){switch(r){case boolTag:case dateTag:return+e==+a;case errorTag:return e.name==a.name&&e.message==a.message;case numberTag:return e!=+e?a!=+a:e==+a;case regexpTag:case stringTag:return e==a+""}return!1}var boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",numberTag="[object Number]",regexpTag="[object RegExp]",stringTag="[object String]";module.exports=equalByTag;

},{}],172:[function(require,module,exports){
function equalObjects(r,t,o,e,n,c,s){var i=keys(r),u=i.length,a=keys(t),f=a.length;if(u!=f&&!n)return!1;for(var y=n,p=-1;++p<u;){var v=i[p],l=n?v in t:hasOwnProperty.call(t,v);if(l){var b=r[v],j=t[v];l=void 0,e&&(l=n?e(j,b,v):e(b,j,v)),void 0===l&&(l=b&&b===j||o(b,j,e,n,c,s))}if(!l)return!1;y||(y="constructor"==v)}if(!y){var O=r.constructor,h=t.constructor;if(O!=h&&"constructor"in r&&"constructor"in t&&!("function"==typeof O&&O instanceof O&&"function"==typeof h&&h instanceof h))return!1}return!0}var keys=require("../object/keys"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;module.exports=equalObjects;

},{"../object/keys":200}],173:[function(require,module,exports){
var baseProperty=require("./baseProperty"),getLength=baseProperty("length");module.exports=getLength;

},{"./baseProperty":159}],174:[function(require,module,exports){
var constant=require("../utility/constant"),isNative=require("../lang/isNative"),toObject=require("./toObject"),getOwnPropertySymbols=isNative(getOwnPropertySymbols=Object.getOwnPropertySymbols)&&getOwnPropertySymbols,getSymbols=getOwnPropertySymbols?function(t){return getOwnPropertySymbols(toObject(t))}:constant([]);module.exports=getSymbols;

},{"../lang/isNative":194,"../utility/constant":204,"./toObject":188}],175:[function(require,module,exports){
function indexOfNaN(r,e,n){for(var f=r.length,t=e+(n?0:-1);n?t--:++t<f;){var a=r[t];if(a!==a)return t}return-1}module.exports=indexOfNaN;

},{}],176:[function(require,module,exports){
function initCloneArray(t){var r=t.length,n=new t.constructor(r);return r&&"string"==typeof t[0]&&hasOwnProperty.call(t,"index")&&(n.index=t.index,n.input=t.input),n}var objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;module.exports=initCloneArray;

},{}],177:[function(require,module,exports){
(function (global){
function initCloneByTag(a,t,r){var e=a.constructor;switch(t){case arrayBufferTag:return bufferClone(a);case boolTag:case dateTag:return new e(+a);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:e instanceof e&&(e=ctorByTag[t]);var g=a.buffer;return new e(r?bufferClone(g):g,a.byteOffset,a.length);case numberTag:case stringTag:return new e(a);case regexpTag:var n=new e(a.source,reFlags.exec(a));n.lastIndex=a.lastIndex}return n}var bufferClone=require("./bufferClone"),boolTag="[object Boolean]",dateTag="[object Date]",numberTag="[object Number]",regexpTag="[object RegExp]",stringTag="[object String]",arrayBufferTag="[object ArrayBuffer]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",reFlags=/\w*$/,ctorByTag={};ctorByTag[float32Tag]=global.Float32Array,ctorByTag[float64Tag]=global.Float64Array,ctorByTag[int8Tag]=global.Int8Array,ctorByTag[int16Tag]=global.Int16Array,ctorByTag[int32Tag]=global.Int32Array,ctorByTag[uint8Tag]=global.Uint8Array,ctorByTag[uint8ClampedTag]=global.Uint8ClampedArray,ctorByTag[uint16Tag]=global.Uint16Array,ctorByTag[uint32Tag]=global.Uint32Array,module.exports=initCloneByTag;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./bufferClone":166}],178:[function(require,module,exports){
function initCloneObject(n){var t=n.constructor;return"function"==typeof t&&t instanceof t||(t=Object),new t}module.exports=initCloneObject;

},{}],179:[function(require,module,exports){
function isArrayLike(e){return null!=e&&isLength(getLength(e))}var getLength=require("./getLength"),isLength=require("./isLength");module.exports=isArrayLike;

},{"./getLength":173,"./isLength":183}],180:[function(require,module,exports){
var isHostObject=function(){try{Object({toString:0}+"")}catch(t){return function(){return!1}}return function(t){return"function"!=typeof t.toString&&"string"==typeof(t+"")}}();module.exports=isHostObject;

},{}],181:[function(require,module,exports){
function isIndex(n,E){return n=+n,E=null==E?MAX_SAFE_INTEGER:E,n>-1&&n%1==0&&E>n}var MAX_SAFE_INTEGER=Math.pow(2,53)-1;module.exports=isIndex;

},{}],182:[function(require,module,exports){
function isKey(r,e){var t=typeof r;if("string"==t&&reIsPlainProp.test(r)||"number"==t)return!0;if(isArray(r))return!1;var i=!reIsDeepProp.test(r);return i||null!=e&&r in toObject(e)}var isArray=require("../lang/isArray"),toObject=require("./toObject"),reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;module.exports=isKey;

},{"../lang/isArray":192,"./toObject":188}],183:[function(require,module,exports){
function isLength(e){return"number"==typeof e&&e>-1&&e%1==0&&MAX_SAFE_INTEGER>=e}var MAX_SAFE_INTEGER=Math.pow(2,53)-1;module.exports=isLength;

},{}],184:[function(require,module,exports){
function isObjectLike(e){return!!e&&"object"==typeof e}module.exports=isObjectLike;

},{}],185:[function(require,module,exports){
function isStrictComparable(e){return e===e&&!isObject(e)}var isObject=require("../lang/isObject");module.exports=isStrictComparable;

},{"../lang/isObject":195}],186:[function(require,module,exports){
function shimIsPlainObject(t){var r;if(!isObjectLike(t)||objToString.call(t)!=objectTag||isHostObject(t)||!hasOwnProperty.call(t,"constructor")&&(r=t.constructor,"function"==typeof r&&!(r instanceof r))||!support.argsTag&&isArguments(t))return!1;var e;return support.ownLast?(baseForIn(t,function(t,r,o){return e=hasOwnProperty.call(o,r),!1}),e!==!1):(baseForIn(t,function(t,r){e=r}),void 0===e||hasOwnProperty.call(t,e))}var baseForIn=require("./baseForIn"),isArguments=require("../lang/isArguments"),isHostObject=require("./isHostObject"),isObjectLike=require("./isObjectLike"),support=require("../support"),objectTag="[object Object]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,objToString=objectProto.toString;module.exports=shimIsPlainObject;

},{"../lang/isArguments":191,"../support":203,"./baseForIn":148,"./isHostObject":180,"./isObjectLike":184}],187:[function(require,module,exports){
function shimKeys(r){for(var e=keysIn(r),s=e.length,n=s&&r.length,t=n&&isLength(n)&&(isArray(r)||support.nonEnumStrings&&isString(r)||support.nonEnumArgs&&isArguments(r)),i=-1,o=[];++i<s;){var u=e[i];(t&&isIndex(u,n)||hasOwnProperty.call(r,u))&&o.push(u)}return o}var isArguments=require("../lang/isArguments"),isArray=require("../lang/isArray"),isIndex=require("./isIndex"),isLength=require("./isLength"),isString=require("../lang/isString"),keysIn=require("../object/keysIn"),support=require("../support"),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;module.exports=shimKeys;

},{"../lang/isArguments":191,"../lang/isArray":192,"../lang/isString":197,"../object/keysIn":201,"../support":203,"./isIndex":181,"./isLength":183}],188:[function(require,module,exports){
function toObject(r){if(support.unindexedChars&&isString(r)){for(var t=-1,e=r.length,i=Object(r);++t<e;)i[t]=r.charAt(t);return i}return isObject(r)?r:Object(r)}var isObject=require("../lang/isObject"),isString=require("../lang/isString"),support=require("../support");module.exports=toObject;

},{"../lang/isObject":195,"../lang/isString":197,"../support":203}],189:[function(require,module,exports){
function toPath(r){if(isArray(r))return r;var e=[];return baseToString(r).replace(rePropName,function(r,a,t,i){e.push(t?i.replace(reEscapeChar,"$1"):a||r)}),e}var baseToString=require("./baseToString"),isArray=require("../lang/isArray"),rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,reEscapeChar=/\\(\\)?/g;module.exports=toPath;

},{"../lang/isArray":192,"./baseToString":162}],190:[function(require,module,exports){
function cloneDeep(e,n,l){return n="function"==typeof n&&bindCallback(n,l,1),baseClone(e,!0,n)}var baseClone=require("../internal/baseClone"),bindCallback=require("../internal/bindCallback");module.exports=cloneDeep;

},{"../internal/baseClone":144,"../internal/bindCallback":165}],191:[function(require,module,exports){
function isArguments(r){return isObjectLike(r)&&isArrayLike(r)&&objToString.call(r)==argsTag}var isArrayLike=require("../internal/isArrayLike"),isObjectLike=require("../internal/isObjectLike"),support=require("../support"),argsTag="[object Arguments]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,objToString=objectProto.toString,propertyIsEnumerable=objectProto.propertyIsEnumerable;support.argsTag||(isArguments=function(r){return isObjectLike(r)&&isArrayLike(r)&&hasOwnProperty.call(r,"callee")&&!propertyIsEnumerable.call(r,"callee")}),module.exports=isArguments;

},{"../internal/isArrayLike":179,"../internal/isObjectLike":184,"../support":203}],192:[function(require,module,exports){
var isLength=require("../internal/isLength"),isNative=require("./isNative"),isObjectLike=require("../internal/isObjectLike"),arrayTag="[object Array]",objectProto=Object.prototype,objToString=objectProto.toString,nativeIsArray=isNative(nativeIsArray=Array.isArray)&&nativeIsArray,isArray=nativeIsArray||function(r){return isObjectLike(r)&&isLength(r.length)&&objToString.call(r)==arrayTag};module.exports=isArray;

},{"../internal/isLength":183,"../internal/isObjectLike":184,"./isNative":194}],193:[function(require,module,exports){
(function (global){
var baseIsFunction=require("../internal/baseIsFunction"),isNative=require("./isNative"),funcTag="[object Function]",objectProto=Object.prototype,objToString=objectProto.toString,Uint8Array=isNative(Uint8Array=global.Uint8Array)&&Uint8Array,isFunction=baseIsFunction(/x/)||Uint8Array&&!baseIsFunction(Uint8Array)?function(t){return objToString.call(t)==funcTag}:baseIsFunction;module.exports=isFunction;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../internal/baseIsFunction":154,"./isNative":194}],194:[function(require,module,exports){
function isNative(t){return null==t?!1:objToString.call(t)==funcTag?reIsNative.test(fnToString.call(t)):isObjectLike(t)&&(isHostObject(t)?reIsNative:reIsHostCtor).test(t)}var escapeRegExp=require("../string/escapeRegExp"),isHostObject=require("../internal/isHostObject"),isObjectLike=require("../internal/isObjectLike"),funcTag="[object Function]",reIsHostCtor=/^\[object .+?Constructor\]$/,objectProto=Object.prototype,fnToString=Function.prototype.toString,objToString=objectProto.toString,reIsNative=RegExp("^"+escapeRegExp(objToString).replace(/toString|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");module.exports=isNative;

},{"../internal/isHostObject":180,"../internal/isObjectLike":184,"../string/escapeRegExp":202}],195:[function(require,module,exports){
function isObject(t){var e=typeof t;return"function"==e||!!t&&"object"==e}module.exports=isObject;

},{}],196:[function(require,module,exports){
var isArguments=require("./isArguments"),isNative=require("./isNative"),shimIsPlainObject=require("../internal/shimIsPlainObject"),support=require("../support"),objectTag="[object Object]",objectProto=Object.prototype,objToString=objectProto.toString,getPrototypeOf=isNative(getPrototypeOf=Object.getPrototypeOf)&&getPrototypeOf,isPlainObject=getPrototypeOf?function(t){if(!t||objToString.call(t)!=objectTag||!support.argsTag&&isArguments(t))return!1;var e=t.valueOf,o=isNative(e)&&(o=getPrototypeOf(e))&&getPrototypeOf(o);return o?t==o||getPrototypeOf(t)==o:shimIsPlainObject(t)}:shimIsPlainObject;module.exports=isPlainObject;

},{"../internal/shimIsPlainObject":186,"../support":203,"./isArguments":191,"./isNative":194}],197:[function(require,module,exports){
function isString(t){return"string"==typeof t||isObjectLike(t)&&objToString.call(t)==stringTag}var isObjectLike=require("../internal/isObjectLike"),stringTag="[object String]",objectProto=Object.prototype,objToString=objectProto.toString;module.exports=isString;

},{"../internal/isObjectLike":184}],198:[function(require,module,exports){
function isTypedArray(a){return isObjectLike(a)&&isLength(a.length)&&!!typedArrayTags[objToString.call(a)]}var isLength=require("../internal/isLength"),isObjectLike=require("../internal/isObjectLike"),argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0,typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=!1;var objectProto=Object.prototype,objToString=objectProto.toString;module.exports=isTypedArray;

},{"../internal/isLength":183,"../internal/isObjectLike":184}],199:[function(require,module,exports){
function isUndefined(e){return void 0===e}module.exports=isUndefined;

},{}],200:[function(require,module,exports){
var isArrayLike=require("../internal/isArrayLike"),isNative=require("../lang/isNative"),isObject=require("../lang/isObject"),shimKeys=require("../internal/shimKeys"),support=require("../support"),nativeKeys=isNative(nativeKeys=Object.keys)&&nativeKeys,keys=nativeKeys?function(e){var i=null!=e&&e.constructor;return"function"==typeof i&&i.prototype===e||("function"==typeof e?support.enumPrototypes:isArrayLike(e))?shimKeys(e):isObject(e)?nativeKeys(e):[]}:shimKeys;module.exports=keys;

},{"../internal/isArrayLike":179,"../internal/shimKeys":187,"../lang/isNative":194,"../lang/isObject":195,"../support":203}],201:[function(require,module,exports){
function keysIn(r){if(null==r)return[];isObject(r)||(r=Object(r));var o=r.length;o=o&&isLength(o)&&(isArray(r)||support.nonEnumStrings&&isString(r)||support.nonEnumArgs&&isArguments(r))&&o||0;for(var n=r.constructor,t=-1,e=isFunction(n)&&n.prototype||objectProto,s=e===r,a=Array(o),i=o>0,u=support.enumErrorProps&&(r===errorProto||r instanceof Error),p=support.enumPrototypes&&isFunction(r);++t<o;)a[t]=t+"";for(var g in r)p&&"prototype"==g||u&&("message"==g||"name"==g)||i&&isIndex(g,o)||"constructor"==g&&(s||!hasOwnProperty.call(r,g))||a.push(g);if(support.nonEnumShadows&&r!==objectProto){var c=r===stringProto?stringTag:r===errorProto?errorTag:objToString.call(r),P=nonEnumProps[c]||nonEnumProps[objectTag];for(c==objectTag&&(e=objectProto),o=shadowProps.length;o--;){g=shadowProps[o];var b=P[g];s&&b||(b?!hasOwnProperty.call(r,g):r[g]===e[g])||a.push(g)}}return a}var arrayEach=require("../internal/arrayEach"),isArguments=require("../lang/isArguments"),isArray=require("../lang/isArray"),isFunction=require("../lang/isFunction"),isIndex=require("../internal/isIndex"),isLength=require("../internal/isLength"),isObject=require("../lang/isObject"),isString=require("../lang/isString"),support=require("../support"),arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",stringTag="[object String]",shadowProps=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],errorProto=Error.prototype,objectProto=Object.prototype,stringProto=String.prototype,hasOwnProperty=objectProto.hasOwnProperty,objToString=objectProto.toString,nonEnumProps={};nonEnumProps[arrayTag]=nonEnumProps[dateTag]=nonEnumProps[numberTag]={constructor:!0,toLocaleString:!0,toString:!0,valueOf:!0},nonEnumProps[boolTag]=nonEnumProps[stringTag]={constructor:!0,toString:!0,valueOf:!0},nonEnumProps[errorTag]=nonEnumProps[funcTag]=nonEnumProps[regexpTag]={constructor:!0,toString:!0},nonEnumProps[objectTag]={constructor:!0},arrayEach(shadowProps,function(r){for(var o in nonEnumProps)if(hasOwnProperty.call(nonEnumProps,o)){var n=nonEnumProps[o];n[r]=hasOwnProperty.call(n,r)}}),module.exports=keysIn;

},{"../internal/arrayEach":140,"../internal/isIndex":181,"../internal/isLength":183,"../lang/isArguments":191,"../lang/isArray":192,"../lang/isFunction":193,"../lang/isObject":195,"../lang/isString":197,"../support":203}],202:[function(require,module,exports){
function escapeRegExp(e){return e=baseToString(e),e&&reHasRegExpChars.test(e)?e.replace(reRegExpChars,"\\$&"):e}var baseToString=require("../internal/baseToString"),reRegExpChars=/[.*+?^${}()|[\]\/\\]/g,reHasRegExpChars=RegExp(reRegExpChars.source);module.exports=escapeRegExp;

},{"../internal/baseToString":162}],203:[function(require,module,exports){
(function (global){
var argsTag="[object Arguments]",objectTag="[object Object]",arrayProto=Array.prototype,errorProto=Error.prototype,objectProto=Object.prototype,document=(document=global.window)&&document.document,objToString=objectProto.toString,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,support={};!function(o){var r=function(){this.x=o},t=arguments,e={0:o,length:o},p=[];r.prototype={valueOf:o,y:o};for(var n in new r)p.push(n);support.argsTag=objToString.call(t)==argsTag,support.enumErrorProps=propertyIsEnumerable.call(errorProto,"message")||propertyIsEnumerable.call(errorProto,"name"),support.enumPrototypes=propertyIsEnumerable.call(r,"prototype"),support.funcDecomp=/\bthis\b/.test(function(){return this}),support.funcNames="string"==typeof Function.name,support.nodeTag=objToString.call(document)!=objectTag,support.nonEnumStrings=!propertyIsEnumerable.call("x",0),support.nonEnumShadows=!/valueOf/.test(p),support.ownLast="x"!=p[0],support.spliceObjects=(splice.call(e,0,1),!e[0]),support.unindexedChars="x"[0]+Object("x")[0]!="xx";try{support.dom=11===document.createDocumentFragment().nodeType}catch(s){support.dom=!1}try{support.nonEnumArgs=!propertyIsEnumerable.call(t,1)}catch(s){support.nonEnumArgs=!0}}(1,0),module.exports=support;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],204:[function(require,module,exports){
function constant(n){return function(){return n}}module.exports=constant;

},{}],205:[function(require,module,exports){
function identity(t){return t}module.exports=identity;

},{}],206:[function(require,module,exports){
function property(e){return isKey(e)?baseProperty(e):basePropertyDeep(e)}var baseProperty=require("../internal/baseProperty"),basePropertyDeep=require("../internal/basePropertyDeep"),isKey=require("../internal/isKey");module.exports=property;

},{"../internal/baseProperty":159,"../internal/basePropertyDeep":160,"../internal/isKey":182}],207:[function(require,module,exports){
(function (global){
!function(t,n,e){n[t]=n[t]||e(),"undefined"!=typeof module&&module.exports?module.exports=n[t]:"function"==typeof define&&define.amd&&define(function(){return n[t]})}("Promise","undefined"!=typeof global?global:this,function(){"use strict";function t(t,n){l.add(t,n),h||(h=y(l.drain))}function n(t){var n,e=typeof t;return null==t||"object"!=e&&"function"!=e||(n=t.then),"function"==typeof n?n:!1}function e(){for(var t=0;t<this.chain.length;t++)o(this,1===this.state?this.chain[t].success:this.chain[t].failure,this.chain[t]);this.chain.length=0}function o(t,e,o){var r,i;try{e===!1?o.reject(t.msg):(r=e===!0?t.msg:e.call(void 0,t.msg),r===o.promise?o.reject(TypeError("Promise-chain cycle")):(i=n(r))?i.call(r,o.resolve,o.reject):o.resolve(r))}catch(c){o.reject(c)}}function r(o){var c,u,a=this;if(!a.triggered){a.triggered=!0,a.def&&(a=a.def);try{(c=n(o))?(u=new f(a),c.call(o,function(){r.apply(u,arguments)},function(){i.apply(u,arguments)})):(a.msg=o,a.state=1,a.chain.length>0&&t(e,a))}catch(s){i.call(u||new f(a),s)}}}function i(n){var o=this;o.triggered||(o.triggered=!0,o.def&&(o=o.def),o.msg=n,o.state=2,o.chain.length>0&&t(e,o))}function c(t,n,e,o){for(var r=0;r<n.length;r++)!function(r){t.resolve(n[r]).then(function(t){e(r,t)},o)}(r)}function f(t){this.def=t,this.triggered=!1}function u(t){this.promise=t,this.state=0,this.triggered=!1,this.chain=[],this.msg=void 0}function a(n){if("function"!=typeof n)throw TypeError("Not a function");if(0!==this.__NPO__)throw TypeError("Not a promise");this.__NPO__=1;var o=new u(this);this.then=function(n,r){var i={success:"function"==typeof n?n:!0,failure:"function"==typeof r?r:!1};return i.promise=new this.constructor(function(t,n){if("function"!=typeof t||"function"!=typeof n)throw TypeError("Not a function");i.resolve=t,i.reject=n}),o.chain.push(i),0!==o.state&&t(e,o),i.promise},this["catch"]=function(t){return this.then(void 0,t)};try{n.call(void 0,function(t){r.call(o,t)},function(t){i.call(o,t)})}catch(c){i.call(o,c)}}var s,h,l,p=Object.prototype.toString,y="undefined"!=typeof setImmediate?function(t){return setImmediate(t)}:setTimeout;try{Object.defineProperty({},"x",{}),s=function(t,n,e,o){return Object.defineProperty(t,n,{value:e,writable:!0,configurable:o!==!1})}}catch(d){s=function(t,n,e){return t[n]=e,t}}l=function(){function t(t,n){this.fn=t,this.self=n,this.next=void 0}var n,e,o;return{add:function(r,i){o=new t(r,i),e?e.next=o:n=o,e=o,o=void 0},drain:function(){var t=n;for(n=e=h=void 0;t;)t.fn.call(t.self),t=t.next}}}();var g=s({},"constructor",a,!1);return a.prototype=g,s(g,"__NPO__",0,!1),s(a,"resolve",function(t){var n=this;return t&&"object"==typeof t&&1===t.__NPO__?t:new n(function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");n(t)})}),s(a,"reject",function(t){return new this(function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");e(t)})}),s(a,"all",function(t){var n=this;return"[object Array]"!=p.call(t)?n.reject(TypeError("Not an array")):0===t.length?n.resolve([]):new n(function(e,o){if("function"!=typeof e||"function"!=typeof o)throw TypeError("Not a function");var r=t.length,i=Array(r),f=0;c(n,t,function(t,n){i[t]=n,++f===r&&e(i)},o)})}),s(a,"race",function(t){var n=this;return"[object Array]"!=p.call(t)?n.reject(TypeError("Not an array")):new n(function(e,o){if("function"!=typeof e||"function"!=typeof o)throw TypeError("Not a function");c(n,t,function(t,n){e(n)},o)})}),a});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],208:[function(require,module,exports){
"use strict";function getLoader(e){return supportedLoaders[e.split(":")[0]]||defaultLoader}var supportedLoaders={file:require("./lib/loaders/file"),http:require("./lib/loaders/http"),https:require("./lib/loaders/http")},defaultLoader="undefined"==typeof window?supportedLoaders.file:supportedLoaders.http;"undefined"==typeof Promise&&require("native-promise-only"),module.exports.load=function(e,t,o){var r=Promise.resolve();return 2===arguments.length&&"function"==typeof t&&(o=t,t=void 0),r=r.then(function(){if("undefined"==typeof e)throw new TypeError("location is required");if("string"!=typeof e)throw new TypeError("location must be a string");if("undefined"!=typeof t){if("object"!=typeof t)throw new TypeError("options must be an object")}else t={};if("undefined"!=typeof o&&"function"!=typeof o)throw new TypeError("callback must be a function")}),r=r.then(function(){return new Promise(function(o,r){var n=getLoader(e);n.load(e,t,function(e,t){e?r(e):o(t)})})}),"function"==typeof o&&(r=r.then(function(e){o(void 0,e)},function(e){o(e)})),r};

},{"./lib/loaders/file":209,"./lib/loaders/http":210,"native-promise-only":207}],209:[function(require,module,exports){
"use strict";module.exports.load=function(e,o,r){r(new TypeError("The 'file' scheme is not supported in the browser"))};

},{}],210:[function(require,module,exports){
"use strict";var request=require("superagent"),supportedHttpMethods=["delete","get","head","patch","post","put"];module.exports.load=function(e,t,o){var p,r,s=e.split("#")[0],d=t.method?t.method.toLowerCase():"get";"undefined"!=typeof t.prepareRequest&&"function"!=typeof t.prepareRequest?p=new TypeError("options.prepareRequest must be a function"):"undefined"!=typeof t.method&&("string"!=typeof t.method?p=new TypeError("options.method must be a string"):-1===supportedHttpMethods.indexOf(t.method)&&(p=new TypeError("options.method must be one of the following: "+supportedHttpMethods.slice(0,supportedHttpMethods.length-1).join(", ")+" or "+supportedHttpMethods[supportedHttpMethods.length-1]))),p?o(p):(r=request["delete"===d?"del":d](s),t.prepareRequest&&t.prepareRequest(r),"function"==typeof r.buffer&&r.buffer(!0),r.end(function(e,t){o(e,t?t.text:t)}))};

},{"superagent":211}],211:[function(require,module,exports){
function noop(){}function isHost(t){var e={}.toString.call(t);switch(e){case"[object File]":case"[object Blob]":case"[object FormData]":return!0;default:return!1}}function isObject(t){return t===Object(t)}function serialize(t){if(!isObject(t))return t;var e=[];for(var r in t)null!=t[r]&&e.push(encodeURIComponent(r)+"="+encodeURIComponent(t[r]));return e.join("&")}function parseString(t){for(var e,r,s={},i=t.split("&"),o=0,n=i.length;n>o;++o)r=i[o],e=r.split("="),s[decodeURIComponent(e[0])]=decodeURIComponent(e[1]);return s}function parseHeader(t){var e,r,s,i,o=t.split(/\r?\n/),n={};o.pop();for(var a=0,u=o.length;u>a;++a)r=o[a],e=r.indexOf(":"),s=r.slice(0,e).toLowerCase(),i=trim(r.slice(e+1)),n[s]=i;return n}function type(t){return t.split(/ *; */).shift()}function params(t){return reduce(t.split(/ *; */),function(t,e){var r=e.split(/ *= */),s=r.shift(),i=r.shift();return s&&i&&(t[s]=i),t},{})}function Response(t,e){e=e||{},this.req=t,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||"undefined"==typeof this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText,this.setStatusProperties(this.xhr.status),this.header=this.headers=parseHeader(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this.setHeaderProperties(this.header),this.body="HEAD"!=this.req.method?this.parseBody(this.text?this.text:this.xhr.response):null}function Request(t,e){var r=this;Emitter.call(this),this._query=this._query||[],this.method=t,this.url=e,this.header={},this._header={},this.on("end",function(){var t=null,e=null;try{e=new Response(r)}catch(s){return t=new Error("Parser is unable to parse the response"),t.parse=!0,t.original=s,r.callback(t)}if(r.emit("response",e),t)return r.callback(t,e);if(e.status>=200&&e.status<300)return r.callback(t,e);var i=new Error(e.statusText||"Unsuccessful HTTP response");i.original=t,i.response=e,i.status=e.status,r.callback(t||i,e)})}function request(t,e){return"function"==typeof e?new Request("GET",t).end(e):1==arguments.length?new Request("GET",t):new Request(t,e)}var Emitter=require("emitter"),reduce=require("reduce"),root="undefined"==typeof window?this||self:window;request.getXHR=function(){if(!(!root.XMLHttpRequest||root.location&&"file:"==root.location.protocol&&root.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(t){}return!1};var trim="".trim?function(t){return t.trim()}:function(t){return t.replace(/(^\s*|\s*$)/g,"")};request.serializeObject=serialize,request.parseString=parseString,request.types={html:"text/html",json:"application/json",xml:"application/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},request.serialize={"application/x-www-form-urlencoded":serialize,"application/json":JSON.stringify},request.parse={"application/x-www-form-urlencoded":parseString,"application/json":JSON.parse},Response.prototype.get=function(t){return this.header[t.toLowerCase()]},Response.prototype.setHeaderProperties=function(t){var e=this.header["content-type"]||"";this.type=type(e);var r=params(e);for(var s in r)this[s]=r[s]},Response.prototype.parseBody=function(t){var e=request.parse[this.type];return e&&t&&(t.length||t instanceof Object)?e(t):null},Response.prototype.setStatusProperties=function(t){1223===t&&(t=204);var e=t/100|0;this.status=t,this.statusType=e,this.info=1==e,this.ok=2==e,this.clientError=4==e,this.serverError=5==e,this.error=4==e||5==e?this.toError():!1,this.accepted=202==t,this.noContent=204==t,this.badRequest=400==t,this.unauthorized=401==t,this.notAcceptable=406==t,this.notFound=404==t,this.forbidden=403==t},Response.prototype.toError=function(){var t=this.req,e=t.method,r=t.url,s="cannot "+e+" "+r+" ("+this.status+")",i=new Error(s);return i.status=this.status,i.method=e,i.url=r,i},request.Response=Response,Emitter(Request.prototype),Request.prototype.use=function(t){return t(this),this},Request.prototype.timeout=function(t){return this._timeout=t,this},Request.prototype.clearTimeout=function(){return this._timeout=0,clearTimeout(this._timer),this},Request.prototype.abort=function(){return this.aborted?void 0:(this.aborted=!0,this.xhr.abort(),this.clearTimeout(),this.emit("abort"),this)},Request.prototype.set=function(t,e){if(isObject(t)){for(var r in t)this.set(r,t[r]);return this}return this._header[t.toLowerCase()]=e,this.header[t]=e,this},Request.prototype.unset=function(t){return delete this._header[t.toLowerCase()],delete this.header[t],this},Request.prototype.getHeader=function(t){return this._header[t.toLowerCase()]},Request.prototype.type=function(t){return this.set("Content-Type",request.types[t]||t),this},Request.prototype.accept=function(t){return this.set("Accept",request.types[t]||t),this},Request.prototype.auth=function(t,e){var r=btoa(t+":"+e);return this.set("Authorization","Basic "+r),this},Request.prototype.query=function(t){return"string"!=typeof t&&(t=serialize(t)),t&&this._query.push(t),this},Request.prototype.field=function(t,e){return this._formData||(this._formData=new root.FormData),this._formData.append(t,e),this},Request.prototype.attach=function(t,e,r){return this._formData||(this._formData=new root.FormData),this._formData.append(t,e,r),this},Request.prototype.send=function(t){var e=isObject(t),r=this.getHeader("Content-Type");if(e&&isObject(this._data))for(var s in t)this._data[s]=t[s];else"string"==typeof t?(r||this.type("form"),r=this.getHeader("Content-Type"),"application/x-www-form-urlencoded"==r?this._data=this._data?this._data+"&"+t:t:this._data=(this._data||"")+t):this._data=t;return!e||isHost(t)?this:(r||this.type("json"),this)},Request.prototype.callback=function(t,e){var r=this._callback;this.clearTimeout(),r(t,e)},Request.prototype.crossDomainError=function(){var t=new Error("Origin is not allowed by Access-Control-Allow-Origin");t.crossDomain=!0,this.callback(t)},Request.prototype.timeoutError=function(){var t=this._timeout,e=new Error("timeout of "+t+"ms exceeded");e.timeout=t,this.callback(e)},Request.prototype.withCredentials=function(){return this._withCredentials=!0,this},Request.prototype.end=function(t){var e=this,r=this.xhr=request.getXHR(),s=this._query.join("&"),i=this._timeout,o=this._formData||this._data;this._callback=t||noop,r.onreadystatechange=function(){if(4==r.readyState){var t;try{t=r.status}catch(s){t=0}if(0==t){if(e.timedout)return e.timeoutError();if(e.aborted)return;return e.crossDomainError()}e.emit("end")}};var n=function(t){t.total>0&&(t.percent=t.loaded/t.total*100),e.emit("progress",t)};this.hasListeners("progress")&&(r.onprogress=n);try{r.upload&&this.hasListeners("progress")&&(r.upload.onprogress=n)}catch(a){}if(i&&!this._timer&&(this._timer=setTimeout(function(){e.timedout=!0,e.abort()},i)),s&&(s=request.serializeObject(s),this.url+=~this.url.indexOf("?")?"&"+s:"?"+s),r.open(this.method,this.url,!0),this._withCredentials&&(r.withCredentials=!0),"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof o&&!isHost(o)){var u=request.serialize[this.getHeader("Content-Type")];u&&(o=u(o))}for(var h in this.header)null!=this.header[h]&&r.setRequestHeader(h,this.header[h]);return this.emit("request",this),r.send(o),this},request.Request=Request,request.get=function(t,e,r){var s=request("GET",t);return"function"==typeof e&&(r=e,e=null),e&&s.query(e),r&&s.end(r),s},request.head=function(t,e,r){var s=request("HEAD",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.del=function(t,e){var r=request("DELETE",t);return e&&r.end(e),r},request.patch=function(t,e,r){var s=request("PATCH",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.post=function(t,e,r){var s=request("POST",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},request.put=function(t,e,r){var s=request("PUT",t);return"function"==typeof e&&(r=e,e=null),e&&s.send(e),r&&s.end(r),s},module.exports=request;

},{"emitter":212,"reduce":213}],212:[function(require,module,exports){
function Emitter(t){return t?mixin(t):void 0}function mixin(t){for(var e in Emitter.prototype)t[e]=Emitter.prototype[e];return t}module.exports=Emitter,Emitter.prototype.on=Emitter.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks[t]=this._callbacks[t]||[]).push(e),this},Emitter.prototype.once=function(t,e){function i(){r.off(t,i),e.apply(this,arguments)}var r=this;return this._callbacks=this._callbacks||{},i.fn=e,this.on(t,i),this},Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var i=this._callbacks[t];if(!i)return this;if(1==arguments.length)return delete this._callbacks[t],this;for(var r,s=0;s<i.length;s++)if(r=i[s],r===e||r.fn===e){i.splice(s,1);break}return this},Emitter.prototype.emit=function(t){this._callbacks=this._callbacks||{};var e=[].slice.call(arguments,1),i=this._callbacks[t];if(i){i=i.slice(0);for(var r=0,s=i.length;s>r;++r)i[r].apply(this,e)}return this},Emitter.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks[t]||[]},Emitter.prototype.hasListeners=function(t){return!!this.listeners(t).length};

},{}],213:[function(require,module,exports){
module.exports=function(l,n,e){for(var r=0,t=l.length,u=3==arguments.length?e:l[r++];t>r;)u=n.call(null,u,l[r],++r,l);return u};

},{}],214:[function(require,module,exports){
!function(t,e){"undefined"!=typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&"object"==typeof define.amd?define(e):this[t]=e()}("validator",function(t){"use strict";function e(t,e){t=t||{};for(var r in e)"undefined"==typeof t[r]&&(t[r]=e[r]);return t}function r(t){var e="(\\"+t.symbol.replace(/\./g,"\\.")+")"+(t.require_symbol?"":"?"),r="-?",n="[1-9]\\d*",i="[1-9]\\d{0,2}(\\"+t.thousands_separator+"\\d{3})*",u=["0",n,i],o="("+u.join("|")+")?",a="(\\"+t.decimal_separator+"\\d{2})?",s=o+a;return t.allow_negatives&&!t.parens_for_negatives&&(t.negative_sign_after_digits?s+=r:t.negative_sign_before_digits&&(s=r+s)),t.allow_negative_sign_placeholder?s="( (?!\\-))?"+s:t.allow_space_after_symbol?s=" ?"+s:t.allow_space_after_digits&&(s+="( (?!$))?"),t.symbol_after_digits?s+=e:s=e+s,t.allow_negatives&&(t.parens_for_negatives?s="(\\("+s+"\\)|"+s+")":t.negative_sign_before_digits||t.negative_sign_after_digits||(s=r+s)),new RegExp("^(?!-? )(?=.*\\d)"+s+"$")}t={version:"3.40.1"};var n=/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e])|(\\[\x01-\x09\x0b\x0c\x0d-\x7f])))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i,i=/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))$/i,u=/^(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(?:[a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~\.]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\s)*<(.+)>$/i,o=/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/,a=/^[A-Z]{2}[0-9A-Z]{9}[0-9]$/,s=/^(?:[0-9]{9}X|[0-9]{10})$/,l=/^(?:[0-9]{13})$/,f=/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/,c=/^[0-9A-F]{1,4}$/i,F={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i},p=/^[A-Z]+$/i,g=/^[0-9A-Z]+$/i,x=/^[-+]?[0-9]+$/,d=/^(?:[-+]?(?:0|[1-9][0-9]*))$/,_=/^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/,h=/^[0-9A-F]+$/i,A=/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i,v=/^[\x00-\x7F]+$/,$=/[^\x00-\x7F]/,w=/[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/,m=/[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/,D=/[\uD800-\uDBFF][\uDC00-\uDFFF]/,b=/^(?:[A-Z0-9+\/]{4})*(?:[A-Z0-9+\/]{2}==|[A-Z0-9+\/]{3}=|[A-Z0-9+\/]{4})$/i,y={"zh-CN":/^(\+?0?86\-?)?1[345789]\d{9}$/,"en-ZA":/^(\+?27|0)\d{9}$/,"en-AU":/^(\+?61|0)4\d{8}$/,"en-HK":/^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,"fr-FR":/^(\+?33|0)[67]\d{8}$/,"pt-PT":/^(\+351)?9[1236]\d{7}$/,"el-GR":/^(\+30)?((2\d{9})|(69\d{8}))$/,"en-GB":/^(\+?44|0)7\d{9}$/,"en-US":/^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,"en-ZM":/^(\+26)?09[567]\d{7}$/};t.extend=function(e,r){t[e]=function(){var e=Array.prototype.slice.call(arguments);return e[0]=t.toString(e[0]),r.apply(t,e)}},t.init=function(){for(var e in t)"function"==typeof t[e]&&"toString"!==e&&"toDate"!==e&&"extend"!==e&&"init"!==e&&t.extend(e,t[e])},t.toString=function(t){return"object"==typeof t&&null!==t&&t.toString?t=t.toString():null===t||"undefined"==typeof t||isNaN(t)&&!t.length?t="":"string"!=typeof t&&(t+=""),t},t.toDate=function(t){return"[object Date]"===Object.prototype.toString.call(t)?t:(t=Date.parse(t),isNaN(t)?null:new Date(t))},t.toFloat=function(t){return parseFloat(t)},t.toInt=function(t,e){return parseInt(t,e||10)},t.toBoolean=function(t,e){return e?"1"===t||"true"===t:"0"!==t&&"false"!==t&&""!==t},t.equals=function(e,r){return e===t.toString(r)},t.contains=function(e,r){return e.indexOf(t.toString(r))>=0},t.matches=function(t,e,r){return"[object RegExp]"!==Object.prototype.toString.call(e)&&(e=new RegExp(e,r)),e.test(t)};var E={allow_display_name:!1,allow_utf8_local_part:!0,require_tld:!0};t.isEmail=function(r,o){if(o=e(o,E),o.allow_display_name){var a=r.match(u);a&&(r=a[1])}else if(/\s/.test(r))return!1;var s=r.split("@"),l=s.pop(),f=s.join("@");return t.isFQDN(l,{require_tld:o.require_tld})?o.allow_utf8_local_part?i.test(f):n.test(f):!1};var I={protocols:["http","https","ftp"],require_tld:!0,require_protocol:!1,allow_underscores:!1,allow_trailing_dot:!1,allow_protocol_relative_urls:!1};t.isURL=function(r,n){if(!r||r.length>=2083||/\s/.test(r))return!1;if(0===r.indexOf("mailto:"))return!1;n=e(n,I);var i,u,o,a,s,l,f;if(f=r.split("://"),f.length>1){if(i=f.shift(),-1===n.protocols.indexOf(i))return!1}else{if(n.require_protocol)return!1;n.allow_protocol_relative_urls&&"//"===r.substr(0,2)&&(f[0]=r.substr(2))}return r=f.join("://"),f=r.split("#"),r=f.shift(),f=r.split("?"),r=f.shift(),f=r.split("/"),r=f.shift(),f=r.split("@"),f.length>1&&(u=f.shift(),u.indexOf(":")>=0&&u.split(":").length>2)?!1:(a=f.join("@"),f=a.split(":"),o=f.shift(),f.length&&(l=f.join(":"),s=parseInt(l,10),!/^[0-9]+$/.test(l)||0>=s||s>65535)?!1:t.isIP(o)||t.isFQDN(o,n)||"localhost"===o?n.host_whitelist&&-1===n.host_whitelist.indexOf(o)?!1:n.host_blacklist&&-1!==n.host_blacklist.indexOf(o)?!1:!0:!1)},t.isIP=function(e,r){if(r=t.toString(r),!r)return t.isIP(e,4)||t.isIP(e,6);if("4"===r){if(!f.test(e))return!1;var n=e.split(".").sort(function(t,e){return t-e});return n[3]<=255}if("6"===r){var i=e.split(":"),u=!1,o=t.isIP(i[i.length-1],4),a=o?7:8;if(i.length>a)return!1;if("::"===e)return!0;"::"===e.substr(0,2)?(i.shift(),i.shift(),u=!0):"::"===e.substr(e.length-2)&&(i.pop(),i.pop(),u=!0);for(var s=0;s<i.length;++s)if(""===i[s]&&s>0&&s<i.length-1){if(u)return!1;u=!0}else if(o&&s==i.length-1);else if(!c.test(i[s]))return!1;return u?i.length>=1:i.length===a}return!1};var O={require_tld:!0,allow_underscores:!1,allow_trailing_dot:!1};t.isFQDN=function(t,r){r=e(r,O),r.allow_trailing_dot&&"."===t[t.length-1]&&(t=t.substring(0,t.length-1));var n=t.split(".");if(r.require_tld){var i=n.pop();if(!n.length||!/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(i))return!1}for(var u,o=0;o<n.length;o++){if(u=n[o],r.allow_underscores){if(u.indexOf("__")>=0)return!1;u=u.replace(/_/g,"")}if(!/^[a-z\u00a1-\uffff0-9-]+$/i.test(u))return!1;if("-"===u[0]||"-"===u[u.length-1]||u.indexOf("---")>=0)return!1}return!0},t.isBoolean=function(t){return["true","false","1","0"].indexOf(t)>=0},t.isAlpha=function(t){return p.test(t)},t.isAlphanumeric=function(t){return g.test(t)},t.isNumeric=function(t){return x.test(t)},t.isHexadecimal=function(t){return h.test(t)},t.isHexColor=function(t){return A.test(t)},t.isLowercase=function(t){return t===t.toLowerCase()},t.isUppercase=function(t){return t===t.toUpperCase()},t.isInt=function(t,e){return e=e||{},d.test(t)&&(!e.hasOwnProperty("min")||t>=e.min)&&(!e.hasOwnProperty("max")||t<=e.max)},t.isFloat=function(t,e){return e=e||{},""!==t&&_.test(t)&&(!e.hasOwnProperty("min")||t>=e.min)&&(!e.hasOwnProperty("max")||t<=e.max)},t.isDivisibleBy=function(e,r){return t.toFloat(e)%t.toInt(r)===0},t.isNull=function(t){return 0===t.length},t.isLength=function(t,e,r){var n=t.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g)||[],i=t.length-n.length;return i>=e&&("undefined"==typeof r||r>=i)},t.isByteLength=function(t,e,r){return t.length>=e&&("undefined"==typeof r||t.length<=r)},t.isUUID=function(t,e){var r=F[e?e:"all"];return r&&r.test(t)},t.isDate=function(t){return!isNaN(Date.parse(t))},t.isAfter=function(e,r){var n=t.toDate(r||new Date),i=t.toDate(e);return!!(i&&n&&i>n)},t.isBefore=function(e,r){var n=t.toDate(r||new Date),i=t.toDate(e);return i&&n&&n>i},t.isIn=function(e,r){var n;if("[object Array]"===Object.prototype.toString.call(r)){var i=[];for(n in r)i[n]=t.toString(r[n]);return i.indexOf(e)>=0}return"object"==typeof r?r.hasOwnProperty(e):r&&"function"==typeof r.indexOf?r.indexOf(e)>=0:!1},t.isCreditCard=function(t){var e=t.replace(/[^0-9]+/g,"");if(!o.test(e))return!1;for(var r,n,i,u=0,a=e.length-1;a>=0;a--)r=e.substring(a,a+1),n=parseInt(r,10),i?(n*=2,u+=n>=10?n%10+1:n):u+=n,i=!i;return!!(u%10===0?e:!1)},t.isISIN=function(t){if(!a.test(t))return!1;for(var e,r,n=t.replace(/[A-Z]/g,function(t){return parseInt(t,36)}),i=0,u=!0,o=n.length-2;o>=0;o--)e=n.substring(o,o+1),r=parseInt(e,10),u?(r*=2,i+=r>=10?r+1:r):i+=r,u=!u;return parseInt(t.substr(t.length-1),10)===(1e4-i)%10},t.isISBN=function(e,r){if(r=t.toString(r),!r)return t.isISBN(e,10)||t.isISBN(e,13);var n,i=e.replace(/[\s-]+/g,""),u=0;if("10"===r){if(!s.test(i))return!1;for(n=0;9>n;n++)u+=(n+1)*i.charAt(n);if(u+="X"===i.charAt(9)?100:10*i.charAt(9),u%11===0)return!!i}else if("13"===r){if(!l.test(i))return!1;var o=[1,3];for(n=0;12>n;n++)u+=o[n%2]*i.charAt(n);if(i.charAt(12)-(10-u%10)%10===0)return!!i}return!1},t.isMobilePhone=function(t,e){return e in y?y[e].test(t):!1};var C={symbol:"$",require_symbol:!1,allow_space_after_symbol:!1,symbol_after_digits:!1,allow_negatives:!0,parens_for_negatives:!1,negative_sign_before_digits:!1,negative_sign_after_digits:!1,allow_negative_sign_placeholder:!1,thousands_separator:",",decimal_separator:".",allow_space_after_digits:!1};t.isCurrency=function(t,n){return n=e(n,C),r(n).test(t)},t.isJSON=function(t){try{JSON.parse(t)}catch(e){return!1}return!0},t.isMultibyte=function(t){return $.test(t)},t.isAscii=function(t){return v.test(t)},t.isFullWidth=function(t){return w.test(t)},t.isHalfWidth=function(t){return m.test(t)},t.isVariableWidth=function(t){return w.test(t)&&m.test(t)},t.isSurrogatePair=function(t){return D.test(t)},t.isBase64=function(t){return b.test(t)},t.isMongoId=function(e){return t.isHexadecimal(e)&&24===e.length},t.ltrim=function(t,e){var r=e?new RegExp("^["+e+"]+","g"):/^\s+/g;return t.replace(r,"")},t.rtrim=function(t,e){var r=e?new RegExp("["+e+"]+$","g"):/\s+$/g;return t.replace(r,"")},t.trim=function(t,e){var r=e?new RegExp("^["+e+"]+|["+e+"]+$","g"):/^\s+|\s+$/g;return t.replace(r,"")},t.escape=function(t){return t.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\//g,"&#x2F;").replace(/\`/g,"&#96;")},t.stripLow=function(e,r){var n=r?"\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F":"\\x00-\\x1F\\x7F";return t.blacklist(e,n)},t.whitelist=function(t,e){return t.replace(new RegExp("[^"+e+"]+","g"),"")},t.blacklist=function(t,e){return t.replace(new RegExp("["+e+"]+","g"),"")};var S={lowercase:!0};return t.normalizeEmail=function(r,n){if(n=e(n,S),!t.isEmail(r))return!1;var i=r.split("@",2);if(i[1]=i[1].toLowerCase(),"gmail.com"===i[1]||"googlemail.com"===i[1]){if(i[0]=i[0].toLowerCase().replace(/\./g,""),"+"===i[0][0])return!1;i[0]=i[0].split("+")[0],i[1]="gmail.com"}else n.lowercase&&(i[0]=i[0].toLowerCase());return i.join("@")},t.init(),t});

},{}],215:[function(require,module,exports){
"use strict";module.exports={INVALID_TYPE:"Expected type {0} but found type {1}",INVALID_FORMAT:"Object didn't pass validation for format {0}: {1}",ENUM_MISMATCH:"No enum match for: {0}",ANY_OF_MISSING:"Data does not match any schemas from 'anyOf'",ONE_OF_MISSING:"Data does not match any schemas from 'oneOf'",ONE_OF_MULTIPLE:"Data is valid against more than one schema from 'oneOf'",NOT_PASSED:"Data matches schema from 'not'",ARRAY_LENGTH_SHORT:"Array is too short ({0}), minimum {1}",ARRAY_LENGTH_LONG:"Array is too long ({0}), maximum {1}",ARRAY_UNIQUE:"Array items are not unique (indexes {0} and {1})",ARRAY_ADDITIONAL_ITEMS:"Additional items not allowed",MULTIPLE_OF:"Value {0} is not a multiple of {1}",MINIMUM:"Value {0} is less than minimum {1}",MINIMUM_EXCLUSIVE:"Value {0} is equal or less than exclusive minimum {1}",MAXIMUM:"Value {0} is greater than maximum {1}",MAXIMUM_EXCLUSIVE:"Value {0} is equal or greater than exclusive maximum {1}",OBJECT_PROPERTIES_MINIMUM:"Too few properties defined ({0}), minimum {1}",OBJECT_PROPERTIES_MAXIMUM:"Too many properties defined ({0}), maximum {1}",OBJECT_MISSING_REQUIRED_PROPERTY:"Missing required property: {0}",OBJECT_ADDITIONAL_PROPERTIES:"Additional properties not allowed: {0}",OBJECT_DEPENDENCY_KEY:"Dependency failed - key must exist: {0} (due to key: {1})",MIN_LENGTH:"String is too short ({0} chars), minimum {1}",MAX_LENGTH:"String is too long ({0} chars), maximum {1}",PATTERN:"String does not match pattern {0}: {1}",KEYWORD_TYPE_EXPECTED:"Keyword '{0}' is expected to be of type '{1}'",KEYWORD_UNDEFINED_STRICT:"Keyword '{0}' must be defined in strict mode",KEYWORD_UNEXPECTED:"Keyword '{0}' is not expected to appear in the schema",KEYWORD_MUST_BE:"Keyword '{0}' must be {1}",KEYWORD_DEPENDENCY:"Keyword '{0}' requires keyword '{1}'",KEYWORD_PATTERN:"Keyword '{0}' is not a valid RegExp pattern: {1}",KEYWORD_VALUE_TYPE:"Each element of keyword '{0}' array must be a '{1}'",UNKNOWN_FORMAT:"There is no validation function for format '{0}'",CUSTOM_MODE_FORCE_PROPERTIES:"{0} must define at least one property if present",REF_UNRESOLVED:"Reference has not been resolved during compilation: {0}",UNRESOLVABLE_REFERENCE:"Reference could not be resolved: {0}",SCHEMA_NOT_REACHABLE:"Validator was not able to read schema with uri: {0}",SCHEMA_TYPE_EXPECTED:"Schema is expected to be of type 'object'",SCHEMA_NOT_AN_OBJECT:"Schema is not an object: {0}",ASYNC_TIMEOUT:"{0} asynchronous task(s) have timed out after {1} ms",PARENT_SCHEMA_VALIDATION_FAILED:"Schema failed to validate against its parent schema, see inner errors for details.",REMOTE_NOT_VALID:"Remote reference didn't compile successfully: {0}"};

},{}],216:[function(require,module,exports){
var validator=require("validator"),FormatValidators={date:function(t){if("string"!=typeof t)return!0;var r=/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/.exec(t);return null===r?!1:r[2]<"01"||r[2]>"12"||r[3]<"01"||r[3]>"31"?!1:!0},"date-time":function(t){if("string"!=typeof t)return!0;var r=t.toLowerCase().split("t");if(!FormatValidators.date(r[0]))return!1;var i=/^([0-9]{2}):([0-9]{2}):([0-9]{2})(.[0-9]+)?(z|([+-][0-9]{2}:[0-9]{2}))$/.exec(r[1]);return null===i?!1:i[1]>"23"||i[2]>"59"||i[3]>"59"?!1:!0},email:function(t){return"string"!=typeof t?!0:validator.isEmail(t,{require_tld:!0})},hostname:function(t){if("string"!=typeof t)return!0;var r=/^[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?(\.[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?)*$/.test(t);if(r){if(t.length>255)return!1;for(var i=t.split("."),e=0;e<i.length;e++)if(i[e].length>63)return!1}return r},"host-name":function(t){return FormatValidators.hostname.call(this,t)},ipv4:function(t){return"string"!=typeof t?!0:validator.isIP(t,4)},ipv6:function(t){return"string"!=typeof t?!0:validator.isIP(t,6)},regex:function(t){try{return RegExp(t),!0}catch(r){return!1}},uri:function(t){return this.options.strictUris?FormatValidators["strict-uri"].apply(this,arguments):"string"!=typeof t||RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?").test(t)},"strict-uri":function(t){return"string"!=typeof t||validator.isURL(t)}};module.exports=FormatValidators;

},{"validator":214}],217:[function(require,module,exports){
"use strict";var FormatValidators=require("./FormatValidators"),Report=require("./Report"),Utils=require("./Utils"),JsonValidators={multipleOf:function(r,e,t){"number"==typeof t&&"integer"!==Utils.whatIs(t/e.multipleOf)&&r.addError("MULTIPLE_OF",[t,e.multipleOf],null,e.description)},maximum:function(r,e,t){"number"==typeof t&&(e.exclusiveMaximum!==!0?t>e.maximum&&r.addError("MAXIMUM",[t,e.maximum],null,e.description):t>=e.maximum&&r.addError("MAXIMUM_EXCLUSIVE",[t,e.maximum],null,e.description))},exclusiveMaximum:function(){},minimum:function(r,e,t){"number"==typeof t&&(e.exclusiveMinimum!==!0?t<e.minimum&&r.addError("MINIMUM",[t,e.minimum],null,e.description):t<=e.minimum&&r.addError("MINIMUM_EXCLUSIVE",[t,e.minimum],null,e.description))},exclusiveMinimum:function(){},maxLength:function(r,e,t){"string"==typeof t&&Utils.ucs2decode(t).length>e.maxLength&&r.addError("MAX_LENGTH",[t.length,e.maxLength],null,e.description)},minLength:function(r,e,t){"string"==typeof t&&Utils.ucs2decode(t).length<e.minLength&&r.addError("MIN_LENGTH",[t.length,e.minLength],null,e.description)},pattern:function(r,e,t){"string"==typeof t&&RegExp(e.pattern).test(t)===!1&&r.addError("PATTERN",[e.pattern,t],null,e.description)},additionalItems:function(r,e,t){Array.isArray(t)&&e.additionalItems===!1&&Array.isArray(e.items)&&t.length>e.items.length&&r.addError("ARRAY_ADDITIONAL_ITEMS",null,null,e.description)},items:function(){},maxItems:function(r,e,t){Array.isArray(t)&&t.length>e.maxItems&&r.addError("ARRAY_LENGTH_LONG",[t.length,e.maxItems],null,e.description)},minItems:function(r,e,t){Array.isArray(t)&&t.length<e.minItems&&r.addError("ARRAY_LENGTH_SHORT",[t.length,e.minItems],null,e.description)},uniqueItems:function(r,e,t){if(Array.isArray(t)&&e.uniqueItems===!0){var i=[];Utils.isUniqueArray(t,i)===!1&&r.addError("ARRAY_UNIQUE",i,null,e.description)}},maxProperties:function(r,e,t){if("object"===Utils.whatIs(t)){var i=Object.keys(t).length;i>e.maxProperties&&r.addError("OBJECT_PROPERTIES_MAXIMUM",[i,e.maxProperties],null,e.description)}},minProperties:function(r,e,t){if("object"===Utils.whatIs(t)){var i=Object.keys(t).length;i<e.minProperties&&r.addError("OBJECT_PROPERTIES_MINIMUM",[i,e.minProperties],null,e.description)}},required:function(r,e,t){if("object"===Utils.whatIs(t))for(var i=e.required.length;i--;){var n=e.required[i];void 0===t[n]&&r.addError("OBJECT_MISSING_REQUIRED_PROPERTY",[n],null,e.description)}},additionalProperties:function(r,e,t){return void 0===e.properties&&void 0===e.patternProperties?JsonValidators.properties.call(this,r,e,t):void 0},patternProperties:function(r,e,t){return void 0===e.properties?JsonValidators.properties.call(this,r,e,t):void 0},properties:function(r,e,t){if("object"===Utils.whatIs(t)){var i=void 0!==e.properties?e.properties:{},n=void 0!==e.patternProperties?e.patternProperties:{};if(e.additionalProperties===!1){var o=Object.keys(t),a=Object.keys(i),s=Object.keys(n);o=Utils.difference(o,a);for(var l=s.length;l--;)for(var d=RegExp(s[l]),p=o.length;p--;)d.test(o[p])===!0&&o.splice(p,1);o.length>0&&r.addError("OBJECT_ADDITIONAL_PROPERTIES",[o],null,e.description)}}},dependencies:function(r,e,t){if("object"===Utils.whatIs(t))for(var i=Object.keys(e.dependencies),n=i.length;n--;){var o=i[n];if(t[o]){var a=e.dependencies[o];if("object"===Utils.whatIs(a))exports.validate.call(this,r,a,t);else for(var s=a.length;s--;){var l=a[s];void 0===t[l]&&r.addError("OBJECT_DEPENDENCY_KEY",[l,o],null,e.description)}}}},"enum":function(r,e,t){for(var i=!1,n=e["enum"].length;n--;)if(Utils.areEqual(t,e["enum"][n])){i=!0;break}i===!1&&r.addError("ENUM_MISMATCH",[t],null,e.description)},allOf:function(r,e,t){for(var i=e.allOf.length;i--&&exports.validate.call(this,r,e.allOf[i],t)!==!1;);},anyOf:function(r,e,t){for(var i=[],n=!1,o=e.anyOf.length;o--&&n===!1;){var a=new Report(r);i.push(a),n=exports.validate.call(this,a,e.anyOf[o],t)}n===!1&&r.addError("ANY_OF_MISSING",void 0,i,e.description)},oneOf:function(r,e,t){for(var i=0,n=[],o=e.oneOf.length;o--;){var a=new Report(r,{maxErrors:1});n.push(a),exports.validate.call(this,a,e.oneOf[o],t)===!0&&i++}0===i?r.addError("ONE_OF_MISSING",void 0,n,e.description):i>1&&r.addError("ONE_OF_MULTIPLE",null,null,e.description)},not:function(r,e,t){var i=new Report(r);exports.validate.call(this,i,e.not,t)===!0&&r.addError("NOT_PASSED",null,null,e.description)},definitions:function(){},format:function(r,e,t){var i=FormatValidators[e.format];"function"==typeof i?2===i.length?r.addAsyncTask(i,[t],function(i){i!==!0&&r.addError("INVALID_FORMAT",[e.format,t],null,e.description)}):i.call(this,t)!==!0&&r.addError("INVALID_FORMAT",[e.format,t],null,e.description):r.addError("UNKNOWN_FORMAT",[e.format],null,e.description)}},recurseArray=function(r,e,t){var i=t.length;if(Array.isArray(e.items))for(;i--;)i<e.items.length?(r.path.push(i.toString()),exports.validate.call(this,r,e.items[i],t[i]),r.path.pop()):"object"==typeof e.additionalItems&&(r.path.push(i.toString()),exports.validate.call(this,r,e.additionalItems,t[i]),r.path.pop());else if("object"==typeof e.items)for(;i--;)r.path.push(i.toString()),exports.validate.call(this,r,e.items,t[i]),r.path.pop()},recurseObject=function(r,e,t){var i=e.additionalProperties;(i===!0||void 0===i)&&(i={});for(var n=e.properties?Object.keys(e.properties):[],o=e.patternProperties?Object.keys(e.patternProperties):[],a=Object.keys(t),s=a.length;s--;){var l=a[s],d=t[l],p=[];-1!==n.indexOf(l)&&p.push(e.properties[l]);for(var u=o.length;u--;){var c=o[u];RegExp(c).test(l)===!0&&p.push(e.patternProperties[c])}for(0===p.length&&i!==!1&&p.push(i),u=p.length;u--;)r.path.push(l),exports.validate.call(this,r,p[u],d),r.path.pop()}};exports.validate=function(r,e,t){r.commonErrorMessage="JSON_OBJECT_VALIDATION_FAILED";var i=Utils.whatIs(e);if("object"!==i)return r.addError("SCHEMA_NOT_AN_OBJECT",[i],null,e.description),!1;var n=Object.keys(e);if(0===n.length)return!0;var o=!1;if(r.rootSchema||(r.rootSchema=e,o=!0),void 0!==e.$ref){for(var a=99;e.$ref&&a>0;){if(!e.__$refResolved){r.addError("REF_UNRESOLVED",[e.$ref],null,e.description);break}if(e.__$refResolved===e)break;e=e.__$refResolved,n=Object.keys(e),a--}if(0===a)throw new Error("Circular dependency by $ref references!")}var s=Utils.whatIs(t);if(e.type)if("string"==typeof e.type){if(s!==e.type&&("integer"!==s||"number"!==e.type)&&(r.addError("INVALID_TYPE",[e.type,s],null,e.description),this.options.breakOnFirstError))return!1}else if(-1===e.type.indexOf(s)&&("integer"!==s||-1===e.type.indexOf("number"))&&(r.addError("INVALID_TYPE",[e.type,s],null,e.description),this.options.breakOnFirstError))return!1;for(var l=n.length;l--&&!(JsonValidators[n[l]]&&(JsonValidators[n[l]].call(this,r,e,t),r.errors.length&&this.options.breakOnFirstError)););return(0===r.errors.length||this.options.breakOnFirstError===!1)&&("array"===s?recurseArray.call(this,r,e,t):"object"===s&&recurseObject.call(this,r,e,t)),o&&(r.rootSchema=void 0),0===r.errors.length};

},{"./FormatValidators":216,"./Report":219,"./Utils":223}],218:[function(require,module,exports){
"function"!=typeof Number.isFinite&&(Number.isFinite=function(e){return"number"!=typeof e?!1:e!==e||e===1/0||e===-(1/0)?!1:!0});

},{}],219:[function(require,module,exports){
(function (process){
"use strict";function Report(r,t){this.parentReport=r instanceof Report?r:void 0,this.options=r instanceof Report?r.options:r||{},this.reportOptions=t||{},this.errors=[],this.path=[],this.asyncTasks=[]}var Errors=require("./Errors"),Utils=require("./Utils");Report.prototype.isValid=function(){if(this.asyncTasks.length>0)throw new Error("Async tasks pending, can't answer isValid");return 0===this.errors.length},Report.prototype.addAsyncTask=function(r,t,o){this.asyncTasks.push([r,t,o])},Report.prototype.processAsyncTasks=function(r,t){function o(){process.nextTick(function(){var r=0===p.errors.length,o=r?void 0:p.errors;t(o,r)})}function s(r){return function(t){a||(r(t),0===--n&&o())}}var e=r||2e3,n=this.asyncTasks.length,i=n,a=!1,p=this;if(0===n||this.errors.length>0)return void o();for(;i--;){var h=this.asyncTasks[i];h[0].apply(null,h[1].concat(s(h[2])))}setTimeout(function(){n>0&&(a=!0,p.addError("ASYNC_TIMEOUT",[n,e]),t(p.errors,!1))},e)},Report.prototype.getPath=function(){var r=[];return this.parentReport&&(r=r.concat(this.parentReport.path)),r=r.concat(this.path),this.options.reportPathAsArray!==!0&&(r="#/"+r.map(function(r){return Utils.isAbsoluteUri(r)?"uri("+r+")":r.replace("~","~0").replace("/","~1")}).join("/")),r},Report.prototype.addError=function(r,t,o,s){if(!(this.errors.length>=this.reportOptions.maxErrors)){if(!r)throw new Error("No errorCode passed into addError()");if(!Errors[r])throw new Error("No errorMessage known for code "+r);t=t||[];for(var e=t.length,n=Errors[r];e--;){var i=Utils.whatIs(t[e]),a="object"===i||"null"===i?JSON.stringify(t[e]):t[e];n=n.replace("{"+e+"}",a)}var p={code:r,params:t,message:n,path:this.getPath()};if(s&&(p.description=s),null!=o){for(Array.isArray(o)||(o=[o]),p.inner=[],e=o.length;e--;)for(var h=o[e],c=h.errors.length;c--;)p.inner.push(h.errors[c]);0===p.inner.length&&(p.inner=void 0)}this.errors.push(p)}},module.exports=Report;

}).call(this,require('_process'))
},{"./Errors":215,"./Utils":223,"_process":16}],220:[function(require,module,exports){
"use strict";function decodeJSONPointer(e){return decodeURIComponent(e).replace(/~[0-1]/g,function(e){return"~1"===e?"/":"~"})}function getRemotePath(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function getQueryPath(e){var t=e.indexOf("#"),r=-1===t?void 0:e.slice(t+1);return r}function findId(e,t){if("object"==typeof e&&null!==e){if(!t)return e;if(e.id&&(e.id===t||"#"===e.id[0]&&e.id.substring(1)===t))return e;var r,i;if(Array.isArray(e)){for(r=e.length;r--;)if(i=findId(e[r],t))return i}else{var a=Object.keys(e);for(r=a.length;r--;){var n=a[r];if(0!==n.indexOf("__$")&&(i=findId(e[n],t)))return i}}}}var Report=require("./Report"),SchemaCompilation=require("./SchemaCompilation"),SchemaValidation=require("./SchemaValidation"),Utils=require("./Utils");exports.cacheSchemaByUri=function(e,t){var r=getRemotePath(e);r&&(this.cache[r]=t)},exports.removeFromCacheByUri=function(e){var t=getRemotePath(e);t&&(this.cache[t]=void 0)},exports.checkCacheForUri=function(e){var t=getRemotePath(e);return t?null!=this.cache[t]:!1},exports.getSchema=function(e,t){return"object"==typeof t&&(t=exports.getSchemaByReference.call(this,e,t)),"string"==typeof t&&(t=exports.getSchemaByUri.call(this,e,t)),t},exports.getSchemaByReference=function(e,t){for(var r=this.referenceCache.length;r--;)if(this.referenceCache[r][0]===t)return this.referenceCache[r][1];var i=Utils.cloneDeep(t);return this.referenceCache.push([t,i]),i},exports.getSchemaByUri=function(e,t,r){var i=getRemotePath(t),a=getQueryPath(t),n=i?this.cache[i]:r;if(n&&i){var c=n!==r;if(c){e.path.push(i);var o=new Report(e);SchemaCompilation.compileSchema.call(this,o,n)&&SchemaValidation.validateSchema.call(this,o,n);var h=o.isValid();if(h||e.addError("REMOTE_NOT_VALID",[t],o),e.path.pop(),!h)return void 0}}if(n&&a)for(var f=a.split("/"),s=0,u=f.length;u>s;s++){var l=decodeJSONPointer(f[s]);n=0===s?findId(n,l):n[l]}return n},exports.getRemotePath=getRemotePath;

},{"./Report":219,"./SchemaCompilation":221,"./SchemaValidation":222,"./Utils":223}],221:[function(require,module,exports){
"use strict";function mergeReference(e,r){if(Utils.isAbsoluteUri(r))return r;var i,s=e.join(""),c=Utils.isAbsoluteUri(s),t=Utils.isRelativeUri(s),a=Utils.isRelativeUri(r);c&&a?(i=s.match(/\/[^\/]*$/),i&&(s=s.slice(0,i.index+1))):t&&a?s="":(i=s.match(/[^#/]+$/),i&&(s=s.slice(0,i.index)));var o=s+r;return o=o.replace(/##/,"#")}function collectReferences(e,r,i,s){if(r=r||[],i=i||[],s=s||[],"object"!=typeof e||null===e)return r;"string"==typeof e.id&&i.push(e.id),"string"==typeof e.$ref&&"undefined"==typeof e.__$refResolved&&r.push({ref:mergeReference(i,e.$ref),key:"$ref",obj:e,path:s.slice(0)}),"string"==typeof e.$schema&&"undefined"==typeof e.__$schemaResolved&&r.push({ref:mergeReference(i,e.$schema),key:"$schema",obj:e,path:s.slice(0)});var c;if(Array.isArray(e))for(c=e.length;c--;)s.push(c.toString()),collectReferences(e[c],r,i,s),s.pop();else{var t=Object.keys(e);for(c=t.length;c--;)0!==t[c].indexOf("__$")&&(s.push(t[c]),collectReferences(e[t[c]],r,i,s),s.pop())}return"string"==typeof e.id&&i.pop(),r}function findId(e,r){for(var i=e.length;i--;)if(e[i].id===r)return e[i];return null}var Report=require("./Report"),SchemaCache=require("./SchemaCache"),Utils=require("./Utils"),compileArrayOfSchemasLoop=function(e,r){for(var i=r.length,s=0;i--;){var c=new Report(e),t=exports.compileSchema.call(this,c,r[i]);t&&s++,e.errors=e.errors.concat(c.errors)}return s},compileArrayOfSchemas=function(e,r){var i,s=0;do{for(var c=e.errors.length;c--;)"UNRESOLVABLE_REFERENCE"===e.errors[c].code&&e.errors.splice(c,1);for(i=s,s=compileArrayOfSchemasLoop.call(this,e,r),c=r.length;c--;){var t=r[c];if(t.__$missingReferences){for(var a=t.__$missingReferences.length;a--;){var o=t.__$missingReferences[a],l=findId(r,o.ref);l&&(o.obj["__"+o.key+"Resolved"]=l,t.__$missingReferences.splice(a,1))}0===t.__$missingReferences.length&&delete t.__$missingReferences}}}while(s!==r.length&&s!==i);return e.isValid()};exports.compileSchema=function(e,r){if(e.commonErrorMessage="SCHEMA_COMPILATION_FAILED","string"==typeof r){var i=SchemaCache.getSchemaByUri.call(this,e,r);if(!i)return e.addError("SCHEMA_NOT_REACHABLE",[r]),!1;r=i}if(Array.isArray(r))return compileArrayOfSchemas.call(this,e,r);if(r.__$compiled&&r.id&&SchemaCache.checkCacheForUri.call(this,r.id)===!1&&(r.__$compiled=void 0),r.__$compiled)return!0;r.id&&SchemaCache.cacheSchemaByUri.call(this,r.id,r);var s=e.isValid();delete r.__$missingReferences;for(var c=collectReferences.call(this,r),t=c.length;t--;){var a=c[t],o=SchemaCache.getSchemaByUri.call(this,e,a.ref,r);if(!o){var l=this.getSchemaReader();if(l){var n=l(a.ref);if(n){n.id=a.ref;var h=new Report(e);exports.compileSchema.call(this,h,n)?o=SchemaCache.getSchemaByUri.call(this,e,a.ref,r):e.errors=e.errors.concat(h.errors)}}}if(!o){var f=Utils.isAbsoluteUri(a.ref),m=!1,p=this.options.ignoreUnresolvableReferences===!0;f&&(m=SchemaCache.checkCacheForUri.call(this,a.ref)),f&&(m||p)||(Array.prototype.push.apply(e.path,a.path),e.addError("UNRESOLVABLE_REFERENCE",[a.ref]),e.path.slice(0,-a.path.length),s&&(r.__$missingReferences=r.__$missingReferences||[],r.__$missingReferences.push(a)))}a.obj["__"+a.key+"Resolved"]=o}var _=e.isValid();return _?r.__$compiled=!0:r.id&&SchemaCache.removeFromCacheByUri.call(this,r.id),_};

},{"./Report":219,"./SchemaCache":220,"./Utils":223}],222:[function(require,module,exports){
"use strict";var FormatValidators=require("./FormatValidators"),JsonValidation=require("./JsonValidation"),Report=require("./Report"),Utils=require("./Utils"),SchemaValidators={$ref:function(e,r){"string"!=typeof r.$ref&&e.addError("KEYWORD_TYPE_EXPECTED",["$ref","string"])},$schema:function(e,r){"string"!=typeof r.$schema&&e.addError("KEYWORD_TYPE_EXPECTED",["$schema","string"])},multipleOf:function(e,r){"number"!=typeof r.multipleOf?e.addError("KEYWORD_TYPE_EXPECTED",["multipleOf","number"]):r.multipleOf<=0&&e.addError("KEYWORD_MUST_BE",["multipleOf","strictly greater than 0"])},maximum:function(e,r){"number"!=typeof r.maximum&&e.addError("KEYWORD_TYPE_EXPECTED",["maximum","number"])},exclusiveMaximum:function(e,r){"boolean"!=typeof r.exclusiveMaximum?e.addError("KEYWORD_TYPE_EXPECTED",["exclusiveMaximum","boolean"]):void 0===r.maximum&&e.addError("KEYWORD_DEPENDENCY",["exclusiveMaximum","maximum"])},minimum:function(e,r){"number"!=typeof r.minimum&&e.addError("KEYWORD_TYPE_EXPECTED",["minimum","number"])},exclusiveMinimum:function(e,r){"boolean"!=typeof r.exclusiveMinimum?e.addError("KEYWORD_TYPE_EXPECTED",["exclusiveMinimum","boolean"]):void 0===r.minimum&&e.addError("KEYWORD_DEPENDENCY",["exclusiveMinimum","minimum"])},maxLength:function(e,r){"integer"!==Utils.whatIs(r.maxLength)?e.addError("KEYWORD_TYPE_EXPECTED",["maxLength","integer"]):r.maxLength<0&&e.addError("KEYWORD_MUST_BE",["maxLength","greater than, or equal to 0"])},minLength:function(e,r){"integer"!==Utils.whatIs(r.minLength)?e.addError("KEYWORD_TYPE_EXPECTED",["minLength","integer"]):r.minLength<0&&e.addError("KEYWORD_MUST_BE",["minLength","greater than, or equal to 0"])},pattern:function(e,r){if("string"!=typeof r.pattern)e.addError("KEYWORD_TYPE_EXPECTED",["pattern","string"]);else try{RegExp(r.pattern)}catch(t){e.addError("KEYWORD_PATTERN",["pattern",r.pattern])}},additionalItems:function(e,r){var t=Utils.whatIs(r.additionalItems);"boolean"!==t&&"object"!==t?e.addError("KEYWORD_TYPE_EXPECTED",["additionalItems",["boolean","object"]]):"object"===t&&(e.path.push("additionalItems"),exports.validateSchema.call(this,e,r.additionalItems),e.path.pop())},items:function(e,r){var t=Utils.whatIs(r.items);if("object"===t)e.path.push("items"),exports.validateSchema.call(this,e,r.items),e.path.pop();else if("array"===t)for(var a=r.items.length;a--;)e.path.push("items"),e.path.push(a.toString()),exports.validateSchema.call(this,e,r.items[a]),e.path.pop(),e.path.pop();else e.addError("KEYWORD_TYPE_EXPECTED",["items",["array","object"]]);this.options.forceAdditional===!0&&void 0===r.additionalItems&&Array.isArray(r.items)&&e.addError("KEYWORD_UNDEFINED_STRICT",["additionalItems"]),this.options.assumeAdditional===!0&&void 0===r.additionalItems&&Array.isArray(r.items)&&(r.additionalItems=!1)},maxItems:function(e,r){"number"!=typeof r.maxItems?e.addError("KEYWORD_TYPE_EXPECTED",["maxItems","integer"]):r.maxItems<0&&e.addError("KEYWORD_MUST_BE",["maxItems","greater than, or equal to 0"])},minItems:function(e,r){"integer"!==Utils.whatIs(r.minItems)?e.addError("KEYWORD_TYPE_EXPECTED",["minItems","integer"]):r.minItems<0&&e.addError("KEYWORD_MUST_BE",["minItems","greater than, or equal to 0"])},uniqueItems:function(e,r){"boolean"!=typeof r.uniqueItems&&e.addError("KEYWORD_TYPE_EXPECTED",["uniqueItems","boolean"])},maxProperties:function(e,r){"integer"!==Utils.whatIs(r.maxProperties)?e.addError("KEYWORD_TYPE_EXPECTED",["maxProperties","integer"]):r.maxProperties<0&&e.addError("KEYWORD_MUST_BE",["maxProperties","greater than, or equal to 0"])},minProperties:function(e,r){"integer"!==Utils.whatIs(r.minProperties)?e.addError("KEYWORD_TYPE_EXPECTED",["minProperties","integer"]):r.minProperties<0&&e.addError("KEYWORD_MUST_BE",["minProperties","greater than, or equal to 0"])},required:function(e,r){if("array"!==Utils.whatIs(r.required))e.addError("KEYWORD_TYPE_EXPECTED",["required","array"]);else if(0===r.required.length)e.addError("KEYWORD_MUST_BE",["required","an array with at least one element"]);else{for(var t=r.required.length;t--;)"string"!=typeof r.required[t]&&e.addError("KEYWORD_VALUE_TYPE",["required","string"]);Utils.isUniqueArray(r.required)===!1&&e.addError("KEYWORD_MUST_BE",["required","an array with unique items"])}},additionalProperties:function(e,r){var t=Utils.whatIs(r.additionalProperties);"boolean"!==t&&"object"!==t?e.addError("KEYWORD_TYPE_EXPECTED",["additionalProperties",["boolean","object"]]):"object"===t&&(e.path.push("additionalProperties"),exports.validateSchema.call(this,e,r.additionalProperties),e.path.pop())},properties:function(e,r){if("object"!==Utils.whatIs(r.properties))return void e.addError("KEYWORD_TYPE_EXPECTED",["properties","object"]);for(var t=Object.keys(r.properties),a=t.length;a--;){var i=t[a],o=r.properties[i];e.path.push("properties"),e.path.push(i),exports.validateSchema.call(this,e,o),e.path.pop(),e.path.pop()}this.options.forceAdditional===!0&&void 0===r.additionalProperties&&e.addError("KEYWORD_UNDEFINED_STRICT",["additionalProperties"]),this.options.assumeAdditional===!0&&void 0===r.additionalProperties&&(r.additionalProperties=!1),this.options.forceProperties===!0&&0===t.length&&e.addError("CUSTOM_MODE_FORCE_PROPERTIES",["properties"])},patternProperties:function(e,r){if("object"!==Utils.whatIs(r.patternProperties))return void e.addError("KEYWORD_TYPE_EXPECTED",["patternProperties","object"]);for(var t=Object.keys(r.patternProperties),a=t.length;a--;){var i=t[a],o=r.patternProperties[i];try{RegExp(i)}catch(n){e.addError("KEYWORD_PATTERN",["patternProperties",i])}e.path.push("patternProperties"),e.path.push(i.toString()),exports.validateSchema.call(this,e,o),e.path.pop(),e.path.pop()}this.options.forceProperties===!0&&0===t.length&&e.addError("CUSTOM_MODE_FORCE_PROPERTIES",["patternProperties"])},dependencies:function(e,r){if("object"!==Utils.whatIs(r.dependencies))e.addError("KEYWORD_TYPE_EXPECTED",["dependencies","object"]);else for(var t=Object.keys(r.dependencies),a=t.length;a--;){var i=t[a],o=r.dependencies[i],n=Utils.whatIs(o);if("object"===n)e.path.push("dependencies"),e.path.push(i),exports.validateSchema.call(this,e,o),e.path.pop(),e.path.pop();else if("array"===n){var E=o.length;for(0===E&&e.addError("KEYWORD_MUST_BE",["dependencies","not empty array"]);E--;)"string"!=typeof o[E]&&e.addError("KEYWORD_VALUE_TYPE",["dependensices","string"]);Utils.isUniqueArray(o)===!1&&e.addError("KEYWORD_MUST_BE",["dependencies","an array with unique items"])}else e.addError("KEYWORD_VALUE_TYPE",["dependencies","object or array"])}},"enum":function(e,r){Array.isArray(r["enum"])===!1?e.addError("KEYWORD_TYPE_EXPECTED",["enum","array"]):0===r["enum"].length?e.addError("KEYWORD_MUST_BE",["enum","an array with at least one element"]):Utils.isUniqueArray(r["enum"])===!1&&e.addError("KEYWORD_MUST_BE",["enum","an array with unique elements"])},type:function(e,r){var t=["array","boolean","integer","number","null","object","string"],a=t.join(","),i=Array.isArray(r.type);if(i){for(var o=r.type.length;o--;)-1===t.indexOf(r.type[o])&&e.addError("KEYWORD_TYPE_EXPECTED",["type",a]);Utils.isUniqueArray(r.type)===!1&&e.addError("KEYWORD_MUST_BE",["type","an object with unique properties"])}else"string"==typeof r.type?-1===t.indexOf(r.type)&&e.addError("KEYWORD_TYPE_EXPECTED",["type",a]):e.addError("KEYWORD_TYPE_EXPECTED",["type",["string","array"]]);this.options.noEmptyStrings===!0&&("string"===r.type||i&&-1!==r.type.indexOf("string"))&&void 0===r.minLength&&void 0===r["enum"]&&void 0===r.format&&(r.minLength=1),this.options.noEmptyArrays===!0&&("array"===r.type||i&&-1!==r.type.indexOf("array"))&&void 0===r.minItems&&(r.minItems=1),this.options.forceProperties===!0&&("object"===r.type||i&&-1!==r.type.indexOf("object"))&&void 0===r.properties&&void 0===r.patternProperties&&e.addError("KEYWORD_UNDEFINED_STRICT",["properties"]),this.options.forceItems===!0&&("array"===r.type||i&&-1!==r.type.indexOf("array"))&&void 0===r.items&&e.addError("KEYWORD_UNDEFINED_STRICT",["items"]),this.options.forceMinItems===!0&&("array"===r.type||i&&-1!==r.type.indexOf("array"))&&void 0===r.minItems&&e.addError("KEYWORD_UNDEFINED_STRICT",["minItems"]),this.options.forceMaxItems===!0&&("array"===r.type||i&&-1!==r.type.indexOf("array"))&&void 0===r.maxItems&&e.addError("KEYWORD_UNDEFINED_STRICT",["maxItems"]),this.options.forceMinLength===!0&&("string"===r.type||i&&-1!==r.type.indexOf("string"))&&void 0===r.minLength&&void 0===r.format&&void 0===r["enum"]&&void 0===r.pattern&&e.addError("KEYWORD_UNDEFINED_STRICT",["minLength"]),this.options.forceMaxLength===!0&&("string"===r.type||i&&-1!==r.type.indexOf("string"))&&void 0===r.maxLength&&void 0===r.format&&void 0===r["enum"]&&void 0===r.pattern&&e.addError("KEYWORD_UNDEFINED_STRICT",["maxLength"])},allOf:function(e,r){if(Array.isArray(r.allOf)===!1)e.addError("KEYWORD_TYPE_EXPECTED",["allOf","array"]);else if(0===r.allOf.length)e.addError("KEYWORD_MUST_BE",["allOf","an array with at least one element"]);else for(var t=r.allOf.length;t--;)e.path.push("allOf"),e.path.push(t.toString()),exports.validateSchema.call(this,e,r.allOf[t]),e.path.pop(),e.path.pop()},anyOf:function(e,r){if(Array.isArray(r.anyOf)===!1)e.addError("KEYWORD_TYPE_EXPECTED",["anyOf","array"]);else if(0===r.anyOf.length)e.addError("KEYWORD_MUST_BE",["anyOf","an array with at least one element"]);else for(var t=r.anyOf.length;t--;)e.path.push("anyOf"),e.path.push(t.toString()),exports.validateSchema.call(this,e,r.anyOf[t]),e.path.pop(),e.path.pop()},oneOf:function(e,r){if(Array.isArray(r.oneOf)===!1)e.addError("KEYWORD_TYPE_EXPECTED",["oneOf","array"]);else if(0===r.oneOf.length)e.addError("KEYWORD_MUST_BE",["oneOf","an array with at least one element"]);else for(var t=r.oneOf.length;t--;)e.path.push("oneOf"),e.path.push(t.toString()),exports.validateSchema.call(this,e,r.oneOf[t]),e.path.pop(),e.path.pop()},not:function(e,r){"object"!==Utils.whatIs(r.not)?e.addError("KEYWORD_TYPE_EXPECTED",["not","object"]):(e.path.push("not"),exports.validateSchema.call(this,e,r.not),e.path.pop())},definitions:function(e,r){if("object"!==Utils.whatIs(r.definitions))e.addError("KEYWORD_TYPE_EXPECTED",["definitions","object"]);else for(var t=Object.keys(r.definitions),a=t.length;a--;){var i=t[a],o=r.definitions[i];e.path.push("definitions"),e.path.push(i),exports.validateSchema.call(this,e,o),e.path.pop(),e.path.pop()}},format:function(e,r){"string"!=typeof r.format?e.addError("KEYWORD_TYPE_EXPECTED",["format","string"]):void 0===FormatValidators[r.format]&&e.addError("UNKNOWN_FORMAT",[r.format])},id:function(e,r){"string"!=typeof r.id&&e.addError("KEYWORD_TYPE_EXPECTED",["id","string"])},title:function(e,r){"string"!=typeof r.title&&e.addError("KEYWORD_TYPE_EXPECTED",["title","string"])},description:function(e,r){"string"!=typeof r.description&&e.addError("KEYWORD_TYPE_EXPECTED",["description","string"])},"default":function(){}},validateArrayOfSchemas=function(e,r){for(var t=r.length;t--;)exports.validateSchema.call(this,e,r[t]);return e.isValid()};exports.validateSchema=function(e,r){if(e.commonErrorMessage="SCHEMA_VALIDATION_FAILED",Array.isArray(r))return validateArrayOfSchemas.call(this,e,r);if(r.__$validated)return!0;var t=r.$schema&&r.id!==r.$schema;if(t)if(r.__$schemaResolved&&r.__$schemaResolved!==r){var a=new Report(e),i=JsonValidation.validate.call(this,a,r.__$schemaResolved,r);i===!1&&e.addError("PARENT_SCHEMA_VALIDATION_FAILED",null,a)}else this.options.ignoreUnresolvableReferences!==!0&&e.addError("REF_UNRESOLVED",[r.$schema]);if(this.options.noTypeless===!0){if(void 0!==r.type){var o=[];Array.isArray(r.anyOf)&&(o=o.concat(r.anyOf)),Array.isArray(r.oneOf)&&(o=o.concat(r.oneOf)),Array.isArray(r.allOf)&&(o=o.concat(r.allOf)),o.forEach(function(e){e.type||(e.type=r.type)})}void 0===r["enum"]&&void 0===r.type&&void 0===r.anyOf&&void 0===r.oneOf&&void 0===r.not&&void 0===r.$ref&&e.addError("KEYWORD_UNDEFINED_STRICT",["type"])}for(var n=Object.keys(r),E=n.length;E--;){var s=n[E];0!==s.indexOf("__")&&(void 0!==SchemaValidators[s]?SchemaValidators[s].call(this,e,r):t||this.options.noExtraKeywords===!0&&e.addError("KEYWORD_UNEXPECTED",[s]))}if(this.options.pedanticCheck===!0){if(r["enum"]){var d=Utils.clone(r);for(delete d["enum"],delete d["default"],e.path.push("enum"),E=r["enum"].length;E--;)e.path.push(E.toString()),JsonValidation.validate.call(this,e,d,r["enum"][E]),e.path.pop();e.path.pop()}r["default"]&&(e.path.push("default"),JsonValidation.validate.call(this,e,r,r["default"]),e.path.pop())}var p=e.isValid();return p&&(r.__$validated=!0),p};

},{"./FormatValidators":216,"./JsonValidation":217,"./Report":219,"./Utils":223}],223:[function(require,module,exports){
"use strict";exports.isAbsoluteUri=function(r){return/^https?:\/\//.test(r)},exports.isRelativeUri=function(r){return/.+#/.test(r)},exports.whatIs=function(r){var e=typeof r;return"object"===e?null===r?"null":Array.isArray(r)?"array":"object":"number"===e?Number.isFinite(r)?r%1===0?"integer":"number":Number.isNaN(r)?"not-a-number":"unknown-number":e},exports.areEqual=function r(e,t){if(e===t)return!0;var n,u;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(u=e.length,n=0;u>n;n++)if(!r(e[n],t[n]))return!1;return!0}if("object"===exports.whatIs(e)&&"object"===exports.whatIs(t)){var o=Object.keys(e),s=Object.keys(t);if(!r(o,s))return!1;for(u=o.length,n=0;u>n;n++)if(!r(e[o[n]],t[o[n]]))return!1;return!0}return!1},exports.isUniqueArray=function(r,e){var t,n,u=r.length;for(t=0;u>t;t++)for(n=t+1;u>n;n++)if(exports.areEqual(r[t],r[n]))return e&&e.push(t,n),!1;return!0},exports.difference=function(r,e){for(var t=[],n=r.length;n--;)-1===e.indexOf(r[n])&&t.push(r[n]);return t},exports.clone=function(r){if("object"!=typeof r||null===r)return r;var e,t;if(Array.isArray(r))for(e=[],t=r.length;t--;)e[t]=r[t];else{e={};var n=Object.keys(r);for(t=n.length;t--;){var u=n[t];e[u]=r[u]}}return e},exports.cloneDeep=function(r){function e(r){if("object"!=typeof r||null===r)return r;var u,o,s;if(s=t.indexOf(r),-1!==s)return n[s];if(t.push(r),Array.isArray(r))for(u=[],n.push(u),o=r.length;o--;)u[o]=e(r[o]);else{u={},n.push(u);var i=Object.keys(r);for(o=i.length;o--;){var f=i[o];u[f]=e(r[f])}}return u}var t=[],n=[];return e(r)},exports.ucs2decode=function(r){for(var e,t,n=[],u=0,o=r.length;o>u;)e=r.charCodeAt(u++),e>=55296&&56319>=e&&o>u?(t=r.charCodeAt(u++),56320==(64512&t)?n.push(((1023&e)<<10)+(1023&t)+65536):(n.push(e),u--)):n.push(e);return n};

},{}],224:[function(require,module,exports){
(function (process){
"use strict";function ZSchema(e){if(this.cache={},this.referenceCache=[],this.setRemoteReference("http://json-schema.org/draft-04/schema",Draft4Schema),this.setRemoteReference("http://json-schema.org/draft-04/hyper-schema",Draft4HyperSchema),"object"==typeof e){for(var t=Object.keys(e),r=t.length;r--;){var a=t[r];if(void 0===defaultOptions[a])throw new Error("Unexpected option passed to constructor: "+a)}this.options=e}else this.options=Utils.clone(defaultOptions);this.options.strictMode===!0&&(this.options.forceAdditional=!0,this.options.forceItems=!0,this.options.forceMaxLength=!0,this.options.forceProperties=!0,this.options.noExtraKeywords=!0,this.options.noTypeless=!0,this.options.noEmptyStrings=!0,this.options.noEmptyArrays=!0)}require("./Polyfills");var Report=require("./Report"),FormatValidators=require("./FormatValidators"),JsonValidation=require("./JsonValidation"),SchemaCache=require("./SchemaCache"),SchemaCompilation=require("./SchemaCompilation"),SchemaValidation=require("./SchemaValidation"),Utils=require("./Utils"),Draft4Schema=require("./schemas/schema.json"),Draft4HyperSchema=require("./schemas/hyper-schema.json"),defaultOptions={asyncTimeout:2e3,forceAdditional:!1,assumeAdditional:!1,forceItems:!1,forceMinItems:!1,forceMaxItems:!1,forceMinLength:!1,forceMaxLength:!1,forceProperties:!1,ignoreUnresolvableReferences:!1,noExtraKeywords:!1,noTypeless:!1,noEmptyStrings:!1,noEmptyArrays:!1,strictUris:!1,strictMode:!1,reportPathAsArray:!1,breakOnFirstError:!0,pedanticCheck:!1};ZSchema.prototype.compileSchema=function(e){var t=new Report(this.options);return e=SchemaCache.getSchema.call(this,t,e),SchemaCompilation.compileSchema.call(this,t,e),this.lastReport=t,t.isValid()},ZSchema.prototype.validateSchema=function(e){if(Array.isArray(e)&&0===e.length)throw new Error(".validateSchema was called with an empty array");var t=new Report(this.options);e=SchemaCache.getSchema.call(this,t,e);var r=SchemaCompilation.compileSchema.call(this,t,e);return r&&SchemaValidation.validateSchema.call(this,t,e),this.lastReport=t,t.isValid()},ZSchema.prototype.validate=function(e,t,r){var a=Utils.whatIs(t);if("string"!==a&&"object"!==a){var o=new Error("Invalid .validate call - schema must be an string or object but "+a+" was passed!");if(r)return void process.nextTick(function(){r(o,!1)});throw o}var s=!1,i=new Report(this.options);t=SchemaCache.getSchema.call(this,i,t);var n=!1;s||(n=SchemaCompilation.compileSchema.call(this,i,t)),n||(this.lastReport=i,s=!0);var c=!1;if(s||(c=SchemaValidation.validateSchema.call(this,i,t)),c||(this.lastReport=i,s=!0),s||JsonValidation.validate.call(this,i,t,e),r)return void i.processAsyncTasks(this.options.asyncTimeout,r);if(i.asyncTasks.length>0)throw new Error("This validation has async tasks and cannot be done in sync mode, please provide callback argument.");return this.lastReport=i,i.isValid()},ZSchema.prototype.getLastError=function(){if(0===this.lastReport.errors.length)return null;var e=new Error;return e.name="z-schema validation error",e.message=this.lastReport.commonErrorMessage,e.details=this.lastReport.errors,e},ZSchema.prototype.getLastErrors=function(){return this.lastReport.errors.length>0?this.lastReport.errors:void 0},ZSchema.prototype.getMissingReferences=function(){for(var e=[],t=this.lastReport.errors.length;t--;){var r=this.lastReport.errors[t];if("UNRESOLVABLE_REFERENCE"===r.code){var a=r.params[0];-1===e.indexOf(a)&&e.push(a)}}return e},ZSchema.prototype.getMissingRemoteReferences=function(){for(var e=this.getMissingReferences(),t=[],r=e.length;r--;){var a=SchemaCache.getRemotePath(e[r]);a&&-1===t.indexOf(a)&&t.push(a)}return t},ZSchema.prototype.setRemoteReference=function(e,t){"string"==typeof t&&(t=JSON.parse(t)),SchemaCache.cacheSchemaByUri.call(this,e,t)},ZSchema.prototype.getResolvedSchema=function(e){var t=new Report(this.options);e=SchemaCache.getSchema.call(this,t,e),e=Utils.cloneDeep(e);var r=[],a=function(e){var t,o=Utils.whatIs(e);if(("object"===o||"array"===o)&&!e.___$visited){if(e.___$visited=!0,r.push(e),e.$ref&&e.__$refResolved){var s=e.__$refResolved,i=e;delete e.$ref,delete e.__$refResolved;for(t in s)s.hasOwnProperty(t)&&(i[t]=s[t])}for(t in e)e.hasOwnProperty(t)&&(0===t.indexOf("__$")?delete e[t]:a(e[t]))}};if(a(e),r.forEach(function(e){delete e.___$visited}),this.lastReport=t,t.isValid())return e;throw this.getLastError()},ZSchema.prototype.setSchemaReader=function(e){return ZSchema.setSchemaReader(e)},ZSchema.prototype.getSchemaReader=function(){return ZSchema.schemaReader},ZSchema.setSchemaReader=function(e){ZSchema.schemaReader=e},ZSchema.registerFormat=function(e,t){FormatValidators[e]=t},ZSchema.getRegisteredFormats=function(){return Object.keys(FormatValidators)},ZSchema.getDefaultOptions=function(){return Utils.cloneDeep(defaultOptions)},module.exports=ZSchema;

}).call(this,require('_process'))
},{"./FormatValidators":216,"./JsonValidation":217,"./Polyfills":218,"./Report":219,"./SchemaCache":220,"./SchemaCompilation":221,"./SchemaValidation":222,"./Utils":223,"./schemas/hyper-schema.json":225,"./schemas/schema.json":226,"_process":16}],225:[function(require,module,exports){
module.exports={
    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
    "id": "http://json-schema.org/draft-04/hyper-schema#",
    "title": "JSON Hyper-Schema",
    "allOf": [
        {
            "$ref": "http://json-schema.org/draft-04/schema#"
        }
    ],
    "properties": {
        "additionalItems": {
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "$ref": "#"
                }
            ]
        },
        "additionalProperties": {
            "anyOf": [
                {
                    "type": "boolean"
                },
                {
                    "$ref": "#"
                }
            ]
        },
        "dependencies": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "$ref": "#"
                    },
                    {
                        "type": "array"
                    }
                ]
            }
        },
        "items": {
            "anyOf": [
                {
                    "$ref": "#"
                },
                {
                    "$ref": "#/definitions/schemaArray"
                }
            ]
        },
        "definitions": {
            "additionalProperties": {
                "$ref": "#"
            }
        },
        "patternProperties": {
            "additionalProperties": {
                "$ref": "#"
            }
        },
        "properties": {
            "additionalProperties": {
                "$ref": "#"
            }
        },
        "allOf": {
            "$ref": "#/definitions/schemaArray"
        },
        "anyOf": {
            "$ref": "#/definitions/schemaArray"
        },
        "oneOf": {
            "$ref": "#/definitions/schemaArray"
        },
        "not": {
            "$ref": "#"
        },

        "links": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/linkDescription"
            }
        },
        "fragmentResolution": {
            "type": "string"
        },
        "media": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "A media type, as described in RFC 2046",
                    "type": "string"
                },
                "binaryEncoding": {
                    "description": "A content encoding scheme, as described in RFC 2045",
                    "type": "string"
                }
            }
        },
        "pathStart": {
            "description": "Instances' URIs must start with this value for this schema to apply to them",
            "type": "string",
            "format": "uri"
        }
    },
    "definitions": {
        "schemaArray": {
            "type": "array",
            "items": {
                "$ref": "#"
            }
        },
        "linkDescription": {
            "title": "Link Description Object",
            "type": "object",
            "required": [ "href", "rel" ],
            "properties": {
                "href": {
                    "description": "a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",
                    "type": "string"
                },
                "rel": {
                    "description": "relation to the target resource of the link",
                    "type": "string"
                },
                "title": {
                    "description": "a title for the link",
                    "type": "string"
                },
                "targetSchema": {
                    "description": "JSON Schema describing the link target",
                    "$ref": "#"
                },
                "mediaType": {
                    "description": "media type (as defined by RFC 2046) describing the link target",
                    "type": "string"
                },
                "method": {
                    "description": "method for requesting the target of the link (e.g. for HTTP this might be \"GET\" or \"DELETE\")",
                    "type": "string"
                },
                "encType": {
                    "description": "The media type in which to submit data along with the request",
                    "type": "string",
                    "default": "application/json"
                },
                "schema": {
                    "description": "Schema describing the data to submit along with the request",
                    "$ref": "#"
                }
            }
        }
    }
}


},{}],226:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}]},{},[1])(1)
});